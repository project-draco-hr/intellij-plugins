{
  if (file.getViewProvider() instanceof MultiplePsiFilesPerDocumentFileViewProvider)   return Result.CONTINUE;
  if (!CodeInsightSettings.getInstance().AUTOINSERT_PAIR_BRACKET)   return Result.DEFAULT;
  if (!AngularJSBracesUtil.DEFAULT_START.equals(AngularJSBracesUtil.getInjectionStart(project)) || !AngularJSBracesUtil.DEFAULT_END.equals(AngularJSBracesUtil.getInjectionEnd(project)))   return Result.CONTINUE;
  if (file.getFileType() == HtmlFileType.INSTANCE) {
    if (c == '{') {
      boolean addWhiteSpaceBetweenBraces=AngularJSConfig.getInstance().INSERT_WHITESPACE;
      int offset=editor.getCaretModel().getOffset();
      String chars=editor.getDocument().getText();
      if (offset > 0 && (chars.charAt(offset - 1)) == '{') {
        if (offset < 2 || (chars.charAt(offset - 2)) != '{') {
          if (alreadyHasEnding(chars,offset)) {
            return Result.CONTINUE;
          }
 else {
            String interpolation=addWhiteSpaceBetweenBraces ? "{  }" : "{}";
            if (offset == chars.length() || (offset < chars.length() && chars.charAt(offset) != '}')) {
              interpolation+="}";
            }
            EditorModificationUtil.typeInStringAtCaretHonorMultipleCarets(editor,interpolation,true,addWhiteSpaceBetweenBraces ? 2 : 1);
            return Result.STOP;
          }
        }
      }
    }
  }
  return Result.CONTINUE;
}
