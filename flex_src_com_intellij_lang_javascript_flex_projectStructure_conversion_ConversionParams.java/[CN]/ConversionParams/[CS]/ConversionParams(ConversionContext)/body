{
  myContext=context;
  myGlobalLibrariesModifiableModel=ApplicationLibraryTable.getApplicationTable().getModifiableModel();
  myEditor=new FlexProjectConfigurationEditor(null,new FlexProjectConfigurationEditor.ProjectModifiableModelProvider(){
    @Override public Module[] getModules(){
      return new Module[0];
    }
    @Override public ModifiableRootModel getModuleModifiableModel(    Module module){
      return null;
    }
    @Override public void addListener(    FlexIdeBCConfigurator.Listener listener,    Disposable parentDisposable){
    }
    @Override public void commitModifiableModels() throws ConfigurationException {
    }
    public LibraryTableBase.ModifiableModelEx getLibrariesModifiableModel(    final String level){
      if (LibraryTablesRegistrar.APPLICATION_LEVEL.equals(level)) {
        return (LibraryTableBase.ModifiableModelEx)myGlobalLibrariesModifiableModel;
      }
 else {
        throw new UnsupportedOperationException();
      }
    }
    public Sdk[] getAllSdks(){
      return FlexProjectConfigurationEditor.getPersistedFlexSdks();
    }
  }
);
}
