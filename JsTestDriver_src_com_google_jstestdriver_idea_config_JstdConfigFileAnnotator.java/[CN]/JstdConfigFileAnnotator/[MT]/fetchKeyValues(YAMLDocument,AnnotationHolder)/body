{
  final Document document=JsPsiUtils.getDocument(yamlDocument);
  if (document == null) {
    return null;
  }
  final List<YAMLKeyValue> keyValues=Lists.newArrayList();
  final Ref<Integer> previousKeyValueEndLineNumberRef=Ref.create(-1);
  yamlDocument.acceptChildren(new PsiElementVisitor(){
    @Override public void visitElement(    PsiElement element){
      if (JsPsiUtils.isElementOfType(element,YAMLTokenTypes.EOL,YAMLTokenTypes.INDENT) || element instanceof PsiComment) {
        return;
      }
      int startLineNumber=JstdConfigFileUtils.getStartLineNumber(document,element);
      if (previousKeyValueEndLineNumberRef.get() < startLineNumber) {
        if (element instanceof YAMLKeyValue) {
          YAMLKeyValue yamlKeyValue=(YAMLKeyValue)element;
          int endOffset=yamlKeyValue.getTextRange().getEndOffset();
          int endLine=document.getLineNumber(Math.max(0,endOffset - 1));
          previousKeyValueEndLineNumberRef.set(endLine);
          keyValues.add(yamlKeyValue);
        }
 else {
          holder.createErrorAnnotation(element,"Unexpected element '" + element.getText() + "'");
        }
      }
    }
  }
);
  return keyValues;
}
