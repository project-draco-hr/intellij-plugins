{
  VirtualFile configDir=JstdConfigFileUtils.getConfigDir(basePathKeyValue);
  PsiElement content=basePathKeyValue.getValue();
  if (configDir != null && content != null) {
    final PsiElementFragment<? extends PsiElement> basePathValueFragment;
    if (JsPsiUtils.isElementOfType(content,YAMLTokenTypes.SCALAR_DSTRING)) {
      TextRange textRange=TextRange.create(1,content.getTextLength() - 1);
      basePathValueFragment=PsiElementFragment.create(content,textRange);
    }
 else {
      if (content.getTextLength() == 0) {
        int start=basePathKeyValue.getKey().getTextRange().getEndOffset();
        holder.createErrorAnnotation(TextRange.create(start - 1,start),"path is unspecified");
        return;
      }
      Document document=JsPsiUtils.getDocument(yamlDocument);
      if (document == null) {
        return;
      }
      int startLine=getEndLineNumber(document,content);
      int documentStartOffset=content.getTextRange().getStartOffset();
      int documentEndOffset=document.getLineStartOffset(startLine + 1) - 1;
      int yamlDocumentStartOffset=yamlDocument.getTextRange().getStartOffset();
      TextRange textRangeInYamlDocument=TextRange.create(documentStartOffset - yamlDocumentStartOffset,documentEndOffset - yamlDocumentStartOffset);
      basePathValueFragment=PsiElementFragment.create(yamlDocument,textRangeInYamlDocument);
    }
    annotatePath(configDir,basePathValueFragment,holder,false,true);
  }
}
