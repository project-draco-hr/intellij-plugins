{
  final YAMLValue value=yamlDocument.getTopLevelValue();
  if (!(value instanceof YAMLMapping)) {
    holder.createErrorAnnotation(yamlDocument,"Expected mapping");
    return;
  }
  final Collection<YAMLKeyValue> keyValues=((YAMLMapping)value).getKeyValues();
  markStrangeSymbols(yamlDocument,holder);
  BasePathInfo basePathInfo=new BasePathInfo(yamlDocument);
  annotateBasePath(basePathInfo,holder);
  final Set<String> visitedKeys=Sets.newHashSet();
  for (  YAMLKeyValue keyValue : keyValues) {
    String keyText=keyValue.getKeyText();
    if (keyValue.getKey() == null) {
      holder.createErrorAnnotation(keyValue.getFirstChild(),"Expected key");
      continue;
    }
    if (!JstdConfigFileUtils.isTopLevelKey(keyValue)) {
      holder.createErrorAnnotation(keyValue.getKey(),"Unexpected key '" + keyText + "'");
    }
 else     if (!visitedKeys.add(keyText)) {
      holder.createErrorAnnotation(keyValue.getKey(),"Duplicated '" + keyText + "' key");
    }
 else     if (JstdConfigFileUtils.isTopLevelKeyWithInnerFileSequence(keyValue)) {
      annotateKeyValueWithInnerFileSequence(keyValue,holder,basePathInfo.getBasePath());
    }
  }
  if (!visitedKeys.contains("test")) {
    Annotation annotation=holder.createWeakWarningAnnotation(yamlDocument,"JsTestDriver configuration file should have 'test:' section");
    annotation.registerFix(new AddTestSectionAction());
  }
}
