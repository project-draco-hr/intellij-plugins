{
  List<YAMLKeyValue> keyValues=fetchKeyValues(yamlDocument,holder);
  if (keyValues == null) {
    return;
  }
  markStrangeSymbols(yamlDocument,holder);
  BasePathInfo basePathInfo=new BasePathInfo(yamlDocument);
  annotateBasePath(basePathInfo,holder);
  final Set<String> visitedKeys=Sets.newHashSet();
  for (  YAMLKeyValue keyValue : keyValues) {
    String keyText=keyValue.getKeyText();
    if (!JstdConfigFileUtils.isTopLevelKey(keyValue)) {
      holder.createErrorAnnotation(keyValue.getKey(),"Unexpected key '" + keyText + "'");
    }
 else     if (!visitedKeys.add(keyText)) {
      holder.createErrorAnnotation(keyValue.getKey(),"Duplicated '" + keyText + "' key");
    }
 else     if (JstdConfigFileUtils.isTopLevelKeyWithInnerFileSequence(keyValue)) {
      annotateKeyValueWithInnerFileSequence(keyValue,holder,basePathInfo.getBasePath());
    }
  }
}
