{
  myProject=project;
  myModulesComboboxWrapper=new ModulesComboboxWrapper(myModuleComboBox);
  myModuleComboBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final Module module=myModulesComboboxWrapper.getSelectedModule();
      AirRunConfigurationForm.resetAirRootDirPath(module,myRootDirTextWithBrowse);
      myDebuggerSdkCombo.setModuleSdk(module == null ? null : FlexUtils.getFlexSdkForFlexModuleOrItsFlexFacets(module));
      AirRunConfigurationForm.updateMainClassField(myProject,myModulesComboboxWrapper,myMainClassEditor,myMainClassFilter);
    }
  }
);
  initWhatToLaunchControls();
  myExistingPackageTextWithBrowse.addBrowseFolderListener("AIR Mobile Package",null,myProject,new FileChooserDescriptor(true,false,false,false,false,false){
    @Override public boolean isFileVisible(    final VirtualFile file,    final boolean showHiddenFiles){
      return super.isFileVisible(file,showHiddenFiles) && (file.isDirectory() || "apk".equalsIgnoreCase(file.getExtension()));
    }
  }
);
  AirRunConfigurationForm.initAirDescriptorCombo(myProject,myAirDescriptorComboWithBrowse,myModulesComboboxWrapper,myRootDirTextWithBrowse);
  myRootDirTextWithBrowse.addBrowseFolderListener("AIR Application Root Directory",null,project,FileChooserDescriptorFactory.createSingleFolderDescriptor());
  myAdlOptionsField.setDialogCaption("AIR Debug Launcher Options");
  initEmulatorRelatedControls();
  myOnIOSDeviceRadioButton.setVisible(false);
  initPackagingOptionsButton();
  final ActionListener debugTransportListener=new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      updateDebugTransportRelatedControls();
    }
  }
;
  myDebugOverNetworkRadioButton.addActionListener(debugTransportListener);
  myDebugOverUSBRadioButton.addActionListener(debugTransportListener);
  myDebuggerSdkCombo.showModuleSdk(true);
  updateControls();
  AirRunConfigurationForm.updateMainClassField(myProject,myModulesComboboxWrapper,myMainClassEditor,myMainClassFilter);
  setAnchor(myAirDescriptorRadioButton);
}
