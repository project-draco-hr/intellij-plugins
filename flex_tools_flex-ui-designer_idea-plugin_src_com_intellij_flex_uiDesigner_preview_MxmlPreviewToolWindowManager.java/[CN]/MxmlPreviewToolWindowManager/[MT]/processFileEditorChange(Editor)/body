{
  toolWindowUpdateQueue.cancelAllUpdates();
  toolWindowUpdateQueue.queue(new Update("update"){
    public void run(){
      if (!toolWindowReady || toolWindowDisposed) {
        return;
      }
      if (toolWindow == null) {
        if (newEditor == null) {
          return;
        }
        initToolWindow();
      }
      final PropertiesComponent propertiesComponent=PropertiesComponent.getInstance(project);
      final boolean hideForNonMxmlFiles=propertiesComponent.getBoolean("mxml.preview.tool.window.hideForNonMxmlFiles",false);
      XmlFile psiFile=newEditor == null ? null : (XmlFile)PsiDocumentManager.getInstance(project).getPsiFile(newEditor.getDocument());
      if (psiFile == null) {
        toolWindowForm.setFile(null);
        toolWindow.setAvailable(!hideForNonMxmlFiles,null);
        return;
      }
      final boolean doRender=toolWindowForm.getFile() != psiFile;
      if (doRender) {
        FileDocumentManager.getInstance().saveAllDocuments();
        toolWindowForm.setFile(psiFile);
      }
      toolWindow.setAvailable(true,null);
      if (propertiesComponent.getBoolean(SETTINGS_TOOL_WINDOW_VISIBLE,false)) {
        toolWindow.show(null);
      }
      if (doRender) {
        render();
      }
    }
  }
);
}
