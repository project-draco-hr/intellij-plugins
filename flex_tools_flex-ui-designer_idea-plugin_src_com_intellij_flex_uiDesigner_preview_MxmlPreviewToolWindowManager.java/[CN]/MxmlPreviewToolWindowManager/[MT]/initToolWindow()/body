{
  toolWindowForm=new MxmlPreviewToolWindowForm(project,this);
  final String toolWindowId=FlashUIDesignerBundle.message("mxml.preview.tool.window.title");
  toolWindow=ToolWindowManager.getInstance(project).registerToolWindow(toolWindowId,false,ToolWindowAnchor.RIGHT,project,false);
  toolWindow.setIcon(PlatformIcons.UI_FORM_ICON);
  ((ToolWindowManagerEx)ToolWindowManager.getInstance(project)).addToolWindowManagerListener(new ToolWindowManagerAdapter(){
    private boolean myVisible=false;
    @Override public void stateChanged(){
      if (project.isDisposed()) {
        return;
      }
      final ToolWindow window=ToolWindowManager.getInstance(project).getToolWindow(toolWindowId);
      if (window != null && window.isAvailable()) {
        final boolean visible=window.isVisible();
        PropertiesComponent.getInstance(project).setValue("mxml.preview.tool.window.visible",visible ? "true" : "false");
        if (visible && !myVisible) {
          render();
        }
        myVisible=visible;
      }
    }
  }
);
  final JPanel contentPanel=toolWindowForm.getContentPanel();
  final ContentManager contentManager=toolWindow.getContentManager();
  final Content content=contentManager.getFactory().createContent(contentPanel,null,false);
  content.setCloseable(false);
  content.setPreferredFocusableComponent(contentPanel);
  contentManager.addContent(content);
  contentManager.setSelectedContent(content,true);
  toolWindow.setAvailable(false,null);
}
