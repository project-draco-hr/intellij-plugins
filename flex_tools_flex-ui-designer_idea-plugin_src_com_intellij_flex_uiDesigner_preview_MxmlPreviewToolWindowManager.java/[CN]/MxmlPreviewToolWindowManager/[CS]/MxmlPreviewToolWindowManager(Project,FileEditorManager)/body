{
  this.project=project;
  this.fileEditorManager=fileEditorManager;
  toolWindowUpdateQueue=new MergingUpdateQueue("mxml.preview",300,true,null,project);
  renderingQueue=new MergingUpdateQueue("mxml.rendering",300,true,null,project,null,true);
  MessageBusConnection connection=ApplicationManager.getApplication().getMessageBus().connect(project);
  connection.subscribe(SocketInputHandler.MESSAGE_TOPIC,new SocketInputHandler.DocumentRenderedListener(){
    @Override public void documentRendered(    int id,    final BufferedImage image){
      if (toolWindowForm.getFile() == null) {
        return;
      }
      DocumentFactoryManager.DocumentInfo info=DocumentFactoryManager.getInstance().getNullableInfo(toolWindowForm.getFile().getVirtualFile());
      if (info != null && info.getId() == id) {
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          @Override public void run(){
            MxmlPreviewPanel previewPanel=toolWindowForm.getPreviewPanel();
            previewPanel.setImage(image);
          }
        }
);
      }
    }
    @Override public void errorOccured(){
    }
  }
);
}
