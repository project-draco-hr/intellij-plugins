{
  return new DataExternalizer<List<DartImportOrExportInfo>>(){
    @Override public void save(    final @NotNull DataOutput out,    final @NotNull List<DartImportOrExportInfo> value) throws IOException {
      out.writeInt(value.size());
      for (      DartImportOrExportInfo importOrExportInfo : value) {
        IOUtil.writeUTF(out,importOrExportInfo.getKind().name());
        IOUtil.writeUTF(out,importOrExportInfo.getUri());
        IOUtil.writeUTF(out,StringUtil.notNullize(importOrExportInfo.getImportPrefix()));
        DataInputOutputUtil.writeINT(out,importOrExportInfo.getShowComponents().size());
        for (        String showComponentName : importOrExportInfo.getShowComponents()) {
          IOUtil.writeUTF(out,showComponentName);
        }
        DataInputOutputUtil.writeINT(out,importOrExportInfo.getHideComponents().size());
        for (        String hideComponentName : importOrExportInfo.getHideComponents()) {
          IOUtil.writeUTF(out,hideComponentName);
        }
      }
    }
    @Override @NotNull public List<DartImportOrExportInfo> read(    final @NotNull DataInput in) throws IOException {
      final int size=DataInputOutputUtil.readINT(in);
      final List<DartImportOrExportInfo> result=new ArrayList<DartImportOrExportInfo>(size);
      for (int i=0; i < size; ++i) {
        final DartImportOrExportInfo.Kind kind=DartImportOrExportInfo.Kind.valueOf(in.readUTF());
        final String uri=IOUtil.readUTF(in);
        final String prefix=IOUtil.readUTF(in);
        final int showSize=DataInputOutputUtil.readINT(in);
        final Set<String> showComponentNames=showSize == 0 ? Collections.<String>emptySet() : new THashSet<String>(showSize);
        for (int j=0; j < showSize; j++) {
          showComponentNames.add(IOUtil.readUTF(in));
        }
        final int hideSize=DataInputOutputUtil.readINT(in);
        final Set<String> hideComponentNames=hideSize == 0 ? Collections.<String>emptySet() : new THashSet<String>(hideSize);
        for (int j=0; j < hideSize; j++) {
          hideComponentNames.add(IOUtil.readUTF(in));
        }
        result.add(new DartImportOrExportInfo(kind,uri,StringUtil.nullize(prefix),showComponentNames,hideComponentNames));
      }
      return result;
    }
  }
;
}
