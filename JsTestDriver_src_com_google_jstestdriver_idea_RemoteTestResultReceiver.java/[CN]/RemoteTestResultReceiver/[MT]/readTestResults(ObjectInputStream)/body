{
  while (true) {
    try {
      Object obj=in.readObject();
      final TestResultProtocolMessage message=CastUtils.tryCast(obj,TestResultProtocolMessage.class);
      if (message != null) {
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          @Override public void run(){
            if (message.isDryRun()) {
              listener.onTestStarted(message);
            }
 else {
              listener.onTestFinished(message);
            }
          }
        }
);
      }
      final JstdTestRunnerFailure testRunnerFailure=CastUtils.tryCast(obj,JstdTestRunnerFailure.class);
      if (testRunnerFailure != null) {
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          @Override public void run(){
            listener.onTestRunnerFailed(testRunnerFailure);
          }
        }
);
      }
    }
 catch (    EOFException e) {
      break;
    }
catch (    Exception e) {
      throw new RuntimeException("Problem in communication with TestRunner process",e);
    }
  }
}
