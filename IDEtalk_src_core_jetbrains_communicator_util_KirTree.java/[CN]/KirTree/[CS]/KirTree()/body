{
  setOpaque(true);
  setBackground(UIManager.getColor("Tree.background"));
  setRootVisible(false);
  setShowsRootHandles(true);
  ToolTipManager.sharedInstance().registerComponent(this);
  setCellRenderer(new DefaultTreeCellRenderer(){
    @Override public Component getTreeCellRendererComponent(    JTree tree1,    Object value,    boolean sel,    boolean expanded,    boolean leaf,    int row,    boolean hasFocus1){
      Component renderer=super.getTreeCellRendererComponent(tree1,value,sel,expanded,leaf,row,hasFocus1);
      if (renderer instanceof JLabel && value instanceof KirTreeNode) {
        JLabel label=(JLabel)renderer;
        renderer=((KirTreeNode)value).renderIn(label,sel,hasFocus);
      }
      return renderer;
    }
  }
);
  addMouseListener(new MouseAdapter(){
    @Override public void mouseReleased(    MouseEvent e){
    }
    @Override public void mousePressed(    final MouseEvent e){
      final TreePath closestPath=getPathForLocation(e.getX(),e.getY());
      if (e.getClickCount() == 2) {
        TreePath path=getSelectionPath();
        if (path != null && path.equals(closestPath)) {
          onDblClick(path,path.getLastPathComponent(),e);
        }
      }
 else       if (e.getClickCount() == 1) {
        if (e.getButton() == MouseEvent.BUTTON1) {
          UIUtil.invokeLater(new Runnable(){
            @Override public void run(){
              TreePath path=getSelectionPath();
              if (path != null && path.equals(closestPath)) {
                onClick(path,path.getLastPathComponent(),e);
              }
            }
          }
);
        }
 else {
          if (!isPathSelected(closestPath)) {
            setSelectionPath(closestPath);
          }
        }
      }
    }
  }
);
  getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),"Enter");
  getActionMap().put("Enter",new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent e){
      onEnter();
    }
  }
);
}
