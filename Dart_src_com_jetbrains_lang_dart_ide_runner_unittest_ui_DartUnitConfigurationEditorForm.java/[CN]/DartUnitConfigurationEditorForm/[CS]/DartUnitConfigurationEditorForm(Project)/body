{
  myFileField.getButton().addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      TreeFileChooser fileChooser=TreeFileChooserFactory.getInstance(project).createFileChooser(DartBundle.message("choose.dart.main.file"),null,DartFileType.INSTANCE,new TreeFileChooser.PsiFileFilter(){
        public boolean accept(        PsiFile file){
          return true;
        }
      }
);
      fileChooser.showDialog();
      PsiFile selectedFile=fileChooser.getSelectedFile();
      final VirtualFile virtualFile=selectedFile == null ? null : selectedFile.getVirtualFile();
      if (virtualFile != null) {
        final String path=FileUtil.toSystemDependentName(virtualFile.getPath());
        myFileField.setText(path);
      }
    }
  }
);
  myWorkingDirectory.addBrowseFolderListener(ExecutionBundle.message("select.working.directory.message"),null,project,FileChooserDescriptorFactory.createSingleFolderDescriptor());
  myScopeCombo.setModel(new EnumComboBoxModel<Scope>(Scope.class));
  myScopeCombo.setRenderer(new ListCellRendererWrapper<Scope>(){
    @Override public void customize(    final JList list,    final Scope value,    final int index,    final boolean selected,    final boolean hasFocus){
      setText(StringUtil.capitalize(value.toString().toLowerCase(Locale.US)));
    }
  }
);
  myScopeCombo.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      onScopeChanged();
    }
  }
);
  myVMOptions.setDialogCaption(DartBundle.message("config.vmoptions.caption"));
  myArguments.setDialogCaption(DartBundle.message("config.progargs.caption"));
}
