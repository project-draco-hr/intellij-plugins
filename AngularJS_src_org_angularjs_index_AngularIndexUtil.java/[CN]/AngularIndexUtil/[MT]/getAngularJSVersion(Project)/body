{
  if (DumbService.isDumb(project))   return -1;
  return CachedValuesManager.getManager(project).getCachedValue(project,new CachedValueProvider<Integer>(){
    @Nullable @Override public Result<Integer> compute(){
      int version=-1;
      if (resolve(project,AngularDirectivesIndex.KEY,"ng-messages") != null) {
        version=13;
      }
 else       if (resolve(project,AngularDirectivesIndex.KEY,"ng-model") != null) {
        version=12;
      }
      return Result.create(version,PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT);
    }
  }
);
}
