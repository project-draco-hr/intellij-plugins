{
  if (DumbService.isDumb(project))   return -1;
  return CachedValuesManager.getManager(project).getCachedValue(project,new CachedValueProvider<Integer>(){
    @Nullable @Override public Result<Integer> compute(){
      int version=-1;
      PsiElement resolve;
      if ((resolve=resolve(project,AngularDirectivesIndex.KEY,"non-bindable")) != null) {
        version=20;
      }
 else       if ((resolve=resolve(project,AngularDirectivesIndex.KEY,"ng-messages")) != null) {
        version=13;
      }
 else       if ((resolve=resolve(project,AngularDirectivesIndex.KEY,"ng-model")) != null) {
        version=12;
      }
      return Result.create(version,resolve != null ? resolve.getContainingFile() : PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT);
    }
  }
);
}
