{
  JSOffsetBasedImplicitElement result=null;
  final GlobalSearchScope scope=GlobalSearchScope.allScope(project);
  for (  VirtualFile file : FileBasedIndex.getInstance().getContainingFiles(index,lookupKey,scope)) {
    final PsiFile psiFile=PsiManager.getInstance(project).findFile(file);
    final JSIndexContent content=JSIndexContent.get(file,project);
    if (content != null && psiFile != null) {
      final byte[] additionalData=content.getAdditionalData(index.toString(),lookupKey);
      if (additionalData != null) {
        final Trinity<Boolean,Integer,String> deserialized=AngularJSIndexingHandler.deserializeDataValue(additionalData);
        final JSImplicitElement.Type type=deserialized.first ? JSImplicitElement.Type.Class : JSImplicitElement.Type.Tag;
        final JSImplicitElementImpl.Builder builder=new JSImplicitElementImpl.Builder(lookupKey,null).setType(type).setTypeString(deserialized.third);
        result=new JSOffsetBasedImplicitElement(builder,deserialized.second,psiFile);
        if (result.canNavigate())         break;
      }
    }
  }
  return result;
}
