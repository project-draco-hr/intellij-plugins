{
  final Ref<JSNamedElementProxy> result=Ref.create();
  final GlobalSearchScope scope=GlobalSearchScope.allScope(project);
  for (  VirtualFile file : FileBasedIndex.getInstance().getContainingFiles(index,lookupKey,scope)) {
    final int id=FileBasedIndex.getFileId(file);
    FileBasedIndex.getInstance().processValues(JSEntryIndex.INDEX_ID,id,null,new FileBasedIndex.ValueProcessor<JSIndexEntry>(){
      @Override public boolean process(      VirtualFile file,      JSIndexEntry value){
        return value.processAdditionalData(JavaScriptIndex.getInstance(project),index.toString(),lookupKey,new Processor<JSNamedElementProxy>(){
          @Override public boolean process(          JSNamedElementProxy proxy){
            if (lookupKey.equals(proxy.getName())) {
              result.set(proxy);
            }
            return result.isNull();
          }
        }
);
      }
    }
,scope);
    if (!result.isNull())     break;
  }
  return result.get();
}
