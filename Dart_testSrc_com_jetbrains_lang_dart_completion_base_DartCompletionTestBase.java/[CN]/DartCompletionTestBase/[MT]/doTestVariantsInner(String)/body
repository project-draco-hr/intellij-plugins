{
  final VirtualFile virtualFile=myFixture.copyFileToProject(fileName);
  final Scanner in=new Scanner(virtualFile.getInputStream());
  final CompletionType type=CompletionType.valueOf(in.next());
  final int count=in.nextInt();
  final CheckType checkType=CheckType.valueOf(in.next());
  final List<String> variants=new ArrayList<String>();
  while (in.hasNext()) {
    final String variant=StringUtil.strip(in.next(),CharFilter.NOT_WHITESPACE_FILTER);
    if (variant.length() > 0) {
      variants.add(variant);
    }
  }
  myFixture.complete(type,count);
  List<String> stringList=myFixture.getLookupElementStrings();
  if (stringList == null) {
    stringList=Collections.emptyList();
  }
  if (checkType == CheckType.EQUALS) {
    UsefulTestCase.assertSameElements(stringList,variants);
  }
 else   if (checkType == CheckType.INCLUDES) {
    variants.removeAll(stringList);
    assertTrue("Missing variants: " + variants,variants.isEmpty());
  }
 else   if (checkType == CheckType.EXCLUDES) {
    variants.retainAll(stringList);
    assertTrue("Unexpected variants: " + variants,variants.isEmpty());
  }
}
