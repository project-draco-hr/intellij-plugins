{
  originalConfiguration=strutsFacetConfiguration;
  module=facetEditorContext.getModule();
  myConfigsSearcher=new StrutsConfigsSearcher(module);
  final SimpleTreeStructure structure=new SimpleTreeStructure(){
    public Object getRootElement(){
      return myRootNode;
    }
  }
;
  myTree.setRootVisible(false);
  myTree.setShowsRootHandles(true);
  myBuilder=new SimpleTreeBuilder(myTree,(DefaultTreeModel)myTree.getModel(),structure,null);
  myBuilder.initRoot();
  final DumbService dumbService=DumbService.getInstance(facetEditorContext.getProject());
  myTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    final TreeSelectionEvent e){
      final StrutsFileSet fileSet=getCurrentFileSet();
      myEditButton.setEnabled(fileSet != null && !dumbService.isDumb());
      myRemoveButton.setEnabled(fileSet != null);
    }
  }
);
  myAddSetButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final StrutsFileSet fileSet=new StrutsFileSet(StrutsFileSet.getUniqueId(myBuffer),StrutsFileSet.getUniqueName(StrutsBundle.message("facet.fileset.myfileset"),myBuffer),originalConfiguration){
        public boolean isNew(){
          return true;
        }
      }
;
      final FileSetEditor editor=new FileSetEditor(myPanel,fileSet,facetEditorContext,myConfigsSearcher);
      editor.show();
      if (editor.getExitCode() == DialogWrapper.OK_EXIT_CODE) {
        final StrutsFileSet editedFileSet=editor.getEditedFileSet();
        Disposer.register(strutsFacetConfiguration,editedFileSet);
        myBuffer.add(editedFileSet);
        myModified=true;
        myBuilder.updateFromRoot();
        selectFileSet(fileSet);
      }
      myTree.requestFocus();
    }
  }
);
  myEditButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final StrutsFileSet fileSet=getCurrentFileSet();
      if (fileSet != null) {
        final FileSetEditor editor=new FileSetEditor(myPanel,fileSet,facetEditorContext,myConfigsSearcher);
        editor.show();
        if (editor.getExitCode() == DialogWrapper.OK_EXIT_CODE) {
          myModified=true;
          myBuffer.remove(fileSet);
          final StrutsFileSet edited=editor.getEditedFileSet();
          Disposer.register(strutsFacetConfiguration,edited);
          myBuffer.add(edited);
          edited.setAutodetected(false);
          myBuilder.updateFromRoot();
          selectFileSet(edited);
        }
        myTree.requestFocus();
      }
    }
  }
);
  myRemoveButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      remove();
      myModified=true;
      myBuilder.updateFromRoot();
      myTree.requestFocus();
    }
  }
);
  dumbService.makeDumbAware(myAddSetButton,this);
  dumbService.makeDumbAware(myEditButton,this);
}
