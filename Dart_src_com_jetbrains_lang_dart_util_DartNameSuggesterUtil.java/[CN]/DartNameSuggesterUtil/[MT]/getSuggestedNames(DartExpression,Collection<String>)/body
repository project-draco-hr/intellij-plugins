{
  Collection<String> candidates=new LinkedHashSet<String>();
  String text=expression.getText();
  if (expression instanceof DartReference) {
    DartClass dartClass=((DartReference)expression).resolveDartClass().getDartClass();
    String dartClassName=dartClass == null ? null : dartClass.getName();
    if (dartClassName != null && !dartClassName.equals(StringUtil.decapitalize(dartClassName))) {
      candidates.add(StringUtil.decapitalize(dartClassName));
    }
  }
  if (expression instanceof DartCallExpression) {
    final DartExpression callee=((DartCallExpression)expression).getExpression();
    text=callee.getText();
  }
  if (text != null) {
    candidates.addAll(generateNames(text));
  }
  final Set<String> usedNames=DartRefactoringUtil.collectUsedNames(expression);
  if (additionalUsedNames != null && !additionalUsedNames.isEmpty()) {
    usedNames.addAll(additionalUsedNames);
  }
  final Collection<String> result=new ArrayList<String>();
  for (  String candidate : candidates) {
    int index=0;
    String suffix="";
    while (usedNames.contains(candidate + suffix)) {
      suffix=Integer.toString(++index);
    }
    result.add(candidate + suffix);
  }
  if (result.isEmpty()) {
    result.add("o");
  }
  return result;
}
