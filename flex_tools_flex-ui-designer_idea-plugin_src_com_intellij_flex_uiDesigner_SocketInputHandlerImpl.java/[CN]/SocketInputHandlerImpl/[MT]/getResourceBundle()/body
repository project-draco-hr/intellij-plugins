{
  initResultFile();
  final ProjectInfo projectInfo=Client.getInstance().getRegisteredProjects().getInfo(readEntityId());
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    @Override public void run(){
      try {
        PropertiesFile resourceBundleFile=LibraryManager.getInstance().getResourceBundleFile(reader.readUTF(),reader.readUTF(),projectInfo);
        FileOutputStream fileOut=null;
        if (SystemInfo.isWindows) {
          for (int i=0; i < 2; i++) {
            try {
              fileOut=new FileOutputStream(resultFile);
              break;
            }
 catch (            FileNotFoundException e) {
              try {
                Thread.sleep(10);
              }
 catch (              InterruptedException ignored) {
              }
            }
          }
          if (fileOut == null) {
            FlexUIDesignerApplicationManager.LOG.error("fileOut null due to FileNotFoundException");
            return;
          }
        }
 else {
          fileOut=new FileOutputStream(resultFile);
        }
        try {
          if (resourceBundleFile == null) {
            fileOut.write(Amf3Types.NULL);
            return;
          }
          final AmfOutputStream out=new AmfOutputStream(new ByteArrayOutputStreamEx(4 * 1024));
          List<Property> properties=resourceBundleFile.getProperties();
          out.write(Amf3Types.DICTIONARY);
          out.writeUInt29((properties.size() << 1) | 1);
          out.write(0);
          for (          Property property : properties) {
            out.write(property.getUnescapedKey());
            out.write(property.getUnescapedValue());
          }
          out.getByteArrayOut().writeTo(fileOut);
        }
  finally {
          fileOut.close();
        }
      }
 catch (      IOException e) {
        FlexUIDesignerApplicationManager.LOG.error(e);
      }
    }
  }
);
}
