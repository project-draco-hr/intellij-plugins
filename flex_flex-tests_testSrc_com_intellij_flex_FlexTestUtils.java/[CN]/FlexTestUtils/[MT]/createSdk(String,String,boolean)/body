{
  Sdk sdk=WriteCommandAction.runWriteCommandAction(null,new Computable<Sdk>(){
    public Sdk compute(){
      final ProjectJdkTable projectJdkTable=ProjectJdkTable.getInstance();
      if (removeExisting) {
        final List<Sdk> existingFlexSdks=projectJdkTable.getSdksOfType(FlexSdkType2.getInstance());
        for (        Sdk existingFlexSdk : existingFlexSdks) {
          projectJdkTable.removeJdk(existingFlexSdk);
        }
      }
      final FlexSdkType2 sdkType=FlexSdkType2.getInstance();
      final Sdk sdk=new ProjectJdkImpl(sdkType.suggestSdkName(null,flexSdkRootPath),sdkType,flexSdkRootPath,"");
      sdkType.setupSdkPaths(sdk);
      projectJdkTable.addJdk(sdk);
      return sdk;
    }
  }
);
  final SdkModificator modificator=sdk.getSdkModificator();
  if (sdkVersion != null) {
    modificator.setVersionString(sdkVersion);
  }
  if (sdk.getHomeDirectory() == null) {
    throw new IllegalArgumentException("Could not find a Flex SDK at " + flexSdkRootPath);
  }
  modificator.addRoot(sdk.getHomeDirectory(),OrderRootType.CLASSES);
  modificator.addRoot(JSTestUtils.getPredefinedLibraryRoot(),OrderRootType.CLASSES);
  modificator.commitChanges();
  return sdk;
}
