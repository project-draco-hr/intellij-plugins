{
  final PsiFile psiFile=LangDataKeys.PSI_FILE.getData(e.getDataContext());
  Module module=LangDataKeys.MODULE.getData(e.getDataContext());
  if (!(psiFile instanceof YAMLFile) || module == null) {
    Messages.showOkCancelDialog(e.getProject(),DartBundle.message("dart.sdk.bad.dartpub.file"),DartBundle.message("dart.warning"),DartIcons.Dart_16);
    return;
  }
  final VirtualFile virtualFile=DartResolveUtil.getRealVirtualFile(psiFile);
  if (virtualFile == null) {
    return;
  }
  final boolean update=DartResolveUtil.findPackagesFolder(module) != null;
  final DartSettings settings=DartSettings.getSettingsForModule(module);
  final VirtualFile dartPub=settings == null ? null : settings.getPub();
  if (dartPub == null) {
    Messages.showOkCancelDialog(e.getProject(),DartBundle.message("dart.sdk.bad.dartpub.path",settings != null ? settings.getPubPath() : ""),DartBundle.message("dart.warning"),DartIcons.Dart_16);
    return;
  }
  new Task.Backgroundable(psiFile.getProject(),"Dart Pub",true){
    public void run(    @NotNull ProgressIndicator indicator){
      indicator.setText("Running pub manager...");
      indicator.setFraction(0.0);
      final GeneralCommandLine command=new GeneralCommandLine();
      command.setExePath(dartPub.getPath());
      command.setWorkDirectory(virtualFile.getParent().getPath());
      command.addParameter(update ? "update" : "install");
      final DartSettings dartSettings=getSettings(psiFile);
      if (dartSettings != null) {
        command.getEnvironment().put("DART_SDK",settings.getSdkPath());
      }
      ApplicationManager.getApplication().invokeAndWait(new Runnable(){
        @Override public void run(){
          FileDocumentManager.getInstance().saveAllDocuments();
        }
      }
,ModalityState.defaultModalityState());
      try {
        final ProcessOutput processOutput=new CapturingProcessHandler(command.createProcess(),Charset.defaultCharset(),command.getCommandLineString()).runProcess();
        LOG.debug("pub exited with exit code: " + processOutput.getExitCode());
        LOG.debug(processOutput.getStdout());
        LOG.debug(processOutput.getStderr());
        final String output=processOutput.getStdout().trim();
        final boolean ok=isOK(update,output);
        if (!ok) {
          Notifications.Bus.notify(new Notification(e.getPresentation().getText(),DartBundle.message("dart.pub.title"),DartBundle.message("dart.pub.error",output,processOutput.getStderr()),NotificationType.WARNING));
        }
 else {
          Notifications.Bus.notify(new Notification(e.getPresentation().getText(),DartBundle.message("dart.pub.title"),output,NotificationType.INFORMATION));
          virtualFile.getParent().refresh(true,false);
        }
      }
 catch (      ExecutionException ex) {
        LOG.error(ex);
        Notifications.Bus.notify(new Notification(e.getPresentation().getText(),DartBundle.message("dart.pub.title"),DartBundle.message("dart.pub.exception",ex.getMessage()),NotificationType.ERROR));
      }
      indicator.setFraction(1.0);
    }
  }
.setCancelText("Stop").queue();
}
