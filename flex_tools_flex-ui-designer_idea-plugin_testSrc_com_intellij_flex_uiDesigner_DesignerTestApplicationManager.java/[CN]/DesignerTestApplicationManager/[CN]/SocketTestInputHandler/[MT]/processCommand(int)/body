{
  if (isFileBased(command)) {
    super.processCommand(command);
  }
 else {
    if (waitingResult) {
      if (expectedError == null) {
        waitingResult=false;
      }
      semaphore.up();
    }
 else {
      throw new IllegalStateException("Unexpected server command " + command + ", result is not waiting");
    }
switch (command) {
case ServerMethod.showError:
      final String errorMessage=reader.readUTF();
    if (expectedError == null) {
      failedMessage=errorMessage;
    }
 else {
      if (!errorMessage.startsWith(expectedError)) {
        failedMessage="Expected error message " + expectedError + ", but got "+ errorMessage;
      }
      expectedError=null;
    }
  break;
case TestServerMethod.fail:
failedMessage=reader.readUTF();
break;
case TestServerMethod.success:
String message=reader.readUTF();
if (!message.equals("__passed__")) {
failedMessage=message;
}
break;
default :
throw new IllegalStateException("Unexpected server command: " + command);
}
}
}
