{
  DartComponentName componentName=null;
  final DartReference[] references=PsiTreeUtil.getChildrenOfType(element,DartReference.class);
  boolean chain=references != null && references.length > 1;
  if (!chain) {
    final PsiElement resolved=element.resolve();
    if (resolved != null) {
      final PsiElement parent=resolved.getParent();
      final DartComponent parentComponent=parent instanceof DartComponent ? (DartComponent)parent : null;
      if (parent instanceof DartFunctionDeclarationWithBodyOrNative) {
        createInfoAnnotation(holder,element,DartSyntaxHighlighterColors.DART_TOP_LEVEL_FUNCTION_REFERENCE);
      }
 else       if (parent instanceof DartGetterDeclaration || parent instanceof DartSetterDeclaration) {
        final String key=parentComponent.isUnitMember() ? DartSyntaxHighlighterColors.DART_TOP_LEVEL_GETTER_DECLARATION : parentComponent.isStatic() ? DartSyntaxHighlighterColors.DART_STATIC_GETTER_DECLARATION : DartSyntaxHighlighterColors.DART_INSTANCE_GETTER_DECLARATION;
        createInfoAnnotation(holder,element,key);
      }
 else       if (parent instanceof DartMethodDeclaration) {
        final String callType=getCallKind((DartMethodDeclaration)parent,element);
        createInfoAnnotation(holder,element,callType);
      }
 else       if (parent instanceof DartVarAccessDeclaration || parent instanceof DartVarDeclarationListPart) {
        final DartComponentType type=DartComponentType.typeOf(parent);
        if (type == DartComponentType.VARIABLE) {
          final String key=parentComponent.isUnitMember() ? DartSyntaxHighlighterColors.DART_TOP_LEVEL_GETTER_REFERENCE : DartSyntaxHighlighterColors.DART_LOCAL_VARIABLE_REFERENCE;
          createInfoAnnotation(holder,element,key);
        }
 else {
          final String key=parentComponent.isStatic() ? DartSyntaxHighlighterColors.DART_STATIC_GETTER_REFERENCE : DartSyntaxHighlighterColors.DART_INSTANCE_GETTER_REFERENCE;
          createInfoAnnotation(holder,element,key);
        }
      }
 else       if (resolved instanceof DartComponentName)       componentName=(DartComponentName)resolved;
    }
  }
  return componentName;
}
