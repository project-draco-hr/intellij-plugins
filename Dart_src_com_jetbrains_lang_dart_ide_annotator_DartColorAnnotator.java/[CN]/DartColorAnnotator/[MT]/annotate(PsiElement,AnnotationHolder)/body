{
  if (holder.isBatchMode())   return;
  final DartSdk sdk=DartSdk.getGlobalDartSdk();
  if (DartTokenTypesSets.BUILT_IN_IDENTIFIERS.contains(element.getNode().getElementType())) {
    if (element.getNode().getTreeParent().getElementType() != DartTokenTypes.ID) {
      final String message=ApplicationManager.getApplication().isUnitTestMode() ? "highlighted as keyword" : null;
      holder.createInfoAnnotation(element,message).setTextAttributes(TextAttributesKey.find(DartSyntaxHighlighterColors.DART_KEYWORD));
      return;
    }
  }
  if (element.getNode().getElementType() == DartTokenTypes.REGULAR_STRING_PART) {
    highlightEscapeSequences(element,holder);
    return;
  }
  if (element instanceof DartMetadata) {
    final DartArguments arguments=((DartMetadata)element).getArguments();
    final int endOffset=arguments == null ? element.getTextRange().getEndOffset() : arguments.getTextRange().getStartOffset();
    final TextRange range=TextRange.create(element.getTextRange().getStartOffset(),endOffset);
    final String message=ApplicationManager.getApplication().isUnitTestMode() ? "metadata" : null;
    holder.createInfoAnnotation(range,message).setTextAttributes(TextAttributesKey.find(DartSyntaxHighlighterColors.DART_METADATA));
    return;
  }
  if (element instanceof DartReference && element.getParent() instanceof DartType && "dynamic".equals(element.getText())) {
    createInfoAnnotation(holder,element,DartSyntaxHighlighterColors.DART_BUILTIN);
    return;
  }
  highlightIfDeclarationOrReference(element,holder,sdk);
}
