{
  if (element instanceof DartNewExpression) {
    final DartNewExpression newExpression=(DartNewExpression)element;
    final DartType type=newExpression.getType();
    createInfoAnnotation(holder,type,DartSyntaxHighlighterColors.DART_CONSTRUCTOR_CALL);
  }
 else   if (element instanceof DartConstConstructorExpression) {
    final DartConstConstructorExpression constConstructorExpression=(DartConstConstructorExpression)element;
    final DartType type=constConstructorExpression.getType();
    createInfoAnnotation(holder,type,DartSyntaxHighlighterColors.DART_CONSTRUCTOR_CALL);
  }
 else   if (element instanceof DartNamedConstructorDeclaration) {
    final DartNamedConstructorDeclaration decl=(DartNamedConstructorDeclaration)element;
    final PsiElement child=decl.getFirstChild();
    final DartComponentName name=decl.getComponentName();
    final TextRange textRange=new TextRange(child.getTextOffset(),name.getTextRange().getEndOffset());
    holder.createInfoAnnotation(textRange,null).setTextAttributes(TextAttributesKey.find(DartSyntaxHighlighterColors.DART_CONSTRUCTOR_DECLARATION));
  }
 else   if (element instanceof DartFactoryConstructorDeclaration) {
    final DartFactoryConstructorDeclaration decl=(DartFactoryConstructorDeclaration)element;
    final DartReference dartReference=PsiTreeUtil.findChildOfType(decl,DartReference.class);
    createInfoAnnotation(holder,dartReference,DartSyntaxHighlighterColors.DART_CONSTRUCTOR_DECLARATION);
  }
 else   if (element instanceof DartMethodDeclaration) {
    final DartMethodDeclaration decl=(DartMethodDeclaration)element;
    final String methodName=decl.getName();
    final DartClassDefinition classDef=PsiTreeUtil.getParentOfType(decl,DartClassDefinition.class);
    if (classDef != null && methodName != null) {
      final String className=classDef.getName();
      if (className != null) {
        final String elementKind;
        if (className.equals(methodName)) {
          elementKind=DartSyntaxHighlighterColors.DART_CONSTRUCTOR_DECLARATION;
        }
 else {
          elementKind=isStatic(element) ? DartSyntaxHighlighterColors.DART_STATIC_MEMBER_FUNCTION : DartSyntaxHighlighterColors.DART_INSTANCE_MEMBER_FUNCTION;
        }
        createInfoAnnotation(holder,decl.getComponentName(),elementKind);
      }
    }
  }
 else   if (element instanceof DartFunctionDeclarationWithBodyOrNative) {
    final DartFunctionDeclarationWithBodyOrNative decl=(DartFunctionDeclarationWithBodyOrNative)element;
    createInfoAnnotation(holder,decl.getComponentName(),DartSyntaxHighlighterColors.DART_TOP_LEVEL_FUNCTION_DECLARATION);
  }
}
