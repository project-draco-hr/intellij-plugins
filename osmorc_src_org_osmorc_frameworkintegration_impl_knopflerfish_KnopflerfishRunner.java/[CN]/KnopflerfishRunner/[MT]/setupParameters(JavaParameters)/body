{
  ParametersList vmParameters=parameters.getVMParametersList();
  ParametersList programParameters=parameters.getProgramParametersList();
  vmParameters.addProperty("org.knopflerfish.framework.debug.errors","true");
  if (GenericRunProperties.isDebugMode(myAdditionalProperties)) {
    vmParameters.addProperty("org.knopflerfish.verbosity","10");
    vmParameters.addProperty("org.knopflerfish.framework.debug.startlevel","true");
    vmParameters.addProperty("org.knopflerfish.framework.debug.classloader","true");
  }
  parameters.setMainClass(MAIN_CLASS);
  programParameters.add("-init");
  programParameters.add("-launch");
  MultiMap<Integer,String> startBundles=new MultiMap<Integer,String>();
  List<String> installBundles=ContainerUtil.newSmartList();
  for (  SelectedBundle bundle : myBundles) {
    String bundlePath=bundle.getBundlePath();
    if (bundlePath == null)     continue;
    boolean isFragment=CachingBundleInfoProvider.isFragmentBundle(bundlePath);
    if (bundle.isStartAfterInstallation() && !isFragment) {
      int startLevel=getBundleStartLevel(bundle);
      startBundles.putValue(startLevel,bundlePath);
    }
 else {
      installBundles.add(bundlePath);
    }
  }
  if (!installBundles.isEmpty()) {
    int defaultStartLevel=myRunConfiguration.getDefaultStartLevel();
    programParameters.addAll("-initlevel",String.valueOf(defaultStartLevel));
    for (    String bundle : installBundles) {
      programParameters.addAll("-install",bundle);
    }
  }
  for (  Integer startLevel : startBundles.keySet()) {
    programParameters.addAll("-initlevel",String.valueOf(startLevel));
    for (    String bundle : startBundles.get(startLevel)) {
      programParameters.addAll("-install",bundle);
    }
  }
  int frameworkStartLevel=getFrameworkStartLevel();
  programParameters.addAll("-startlevel",String.valueOf(frameworkStartLevel));
  for (  Integer startLevel : startBundles.keySet()) {
    for (    String bundle : startBundles.get(startLevel)) {
      programParameters.addAll("-start",bundle);
    }
  }
}
