{
  final Document document=FileDocumentManager.getInstance().getDocument(position.getFile());
  final SortedMap<PsiElement,PsiBackedSmartStepIntoVariant> element2canddiateMap=new TreeMap<PsiElement,PsiBackedSmartStepIntoVariant>(new Comparator<PsiElement>(){
    public int compare(    final PsiElement o1,    final PsiElement o2){
      return o1.getTextOffset() - o2.getTextOffset();
    }
  }
);
  compute(document,element2canddiateMap,new THashSet<PsiElement>(),position.getLine(),position.getOffset());
  final List<PsiBackedSmartStepIntoVariant> variants=new ArrayList<PsiBackedSmartStepIntoVariant>();
  for (  final PsiElement key : element2canddiateMap.keySet()) {
    final PsiBackedSmartStepIntoVariant variant=element2canddiateMap.get(key);
    if (!variants.contains(variant)) {
      variants.add(variant);
    }
  }
  return variants;
}
