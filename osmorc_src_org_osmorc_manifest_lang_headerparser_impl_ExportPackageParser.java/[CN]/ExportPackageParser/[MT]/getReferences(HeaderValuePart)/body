{
  if (headerValuePart.getParent() instanceof Clause) {
    final PsiElement element=headerValuePart.getOriginalElement();
    if (isPackageRef(element.getPrevSibling())) {
      return getPackageReferences(headerValuePart);
    }
  }
 else   if (headerValuePart.getParent() instanceof Attribute) {
    final Attribute attribute=(Attribute)headerValuePart.getParent();
    if (ManifestConstants.Attributes.USES.equals(attribute.getName()) && !ManifestConstants.Attributes.USES.equals(headerValuePart.getUnwrappedText())) {
      List<PsiReference> references=ContainerUtil.newArrayList();
      for (      ASTNode astNode : headerValuePart.getNode().getChildren(TokenSet.create(ManifestTokenType.HEADER_VALUE_PART))) {
        if (astNode instanceof ManifestToken) {
          ManifestToken manifestToken=(ManifestToken)astNode;
          ContainerUtil.addAll(references,getPackageReferences(manifestToken));
        }
      }
      return ContainerUtilRt.toArray(references,new PsiReference[references.size()]);
    }
  }
  return PsiReference.EMPTY_ARRAY;
}
