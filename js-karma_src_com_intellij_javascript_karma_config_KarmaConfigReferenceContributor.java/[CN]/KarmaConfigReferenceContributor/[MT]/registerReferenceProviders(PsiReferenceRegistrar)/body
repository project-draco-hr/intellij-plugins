{
  registrar.registerReferenceProvider(STRING_LITERAL_INSIDE_KARMA_CONFIG_FILE,new PsiReferenceProvider(){
    @NotNull @Override public PsiReference[] getReferencesByElement(    @NotNull final PsiElement psiElement,    @NotNull ProcessingContext processingContext){
      JSLiteralExpression literalExpression=ObjectUtils.tryCast(psiElement,JSLiteralExpression.class);
      if (literalExpression == null) {
        return PsiReference.EMPTY_ARRAY;
      }
      if (KarmaBasePathFinder.isBasePathStringLiteral(literalExpression)) {
        return new BasePathFileReferenceSet(literalExpression,this).getAllReferences();
      }
      if (isFileStringLiteral(literalExpression)) {
        return new FilesFileReferenceSet(literalExpression,this).getAllReferences();
      }
      return PsiReference.EMPTY_ARRAY;
    }
  }
);
}
