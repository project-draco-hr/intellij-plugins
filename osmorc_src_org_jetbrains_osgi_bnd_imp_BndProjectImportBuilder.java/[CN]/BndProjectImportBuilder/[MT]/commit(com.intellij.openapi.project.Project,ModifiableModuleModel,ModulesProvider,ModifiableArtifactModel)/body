{
  if (model == null) {
    model=ModuleManager.getInstance(project).getModifiableModel();
    try {
      List<Module> result=commit(project,model,modulesProvider,artifactModel);
      commitModel(model);
      return result;
    }
 catch (    RuntimeException e) {
      disposeModel(model);
      throw e;
    }
catch (    Error e) {
      disposeModel(model);
      throw e;
    }
  }
  if (myWorkspace != null) {
    List<Project> toImport=ContainerUtil.filter(myProjects,new Condition<Project>(){
      @Override public boolean value(      Project project){
        return isMarked(project);
      }
    }
);
    final BndProjectImporter importer=new BndProjectImporter(project,myWorkspace,toImport);
    Module rootModule=importer.createRootModule(model);
    importer.setupProject();
    StartupManager.getInstance(project).registerPostStartupActivity(new Runnable(){
      @Override public void run(){
        importer.resolve();
      }
    }
);
    return Collections.singletonList(rootModule);
  }
 else {
    String path=getFileToImport();
    BndProjectImporter.reimportProjects(project,Collections.singleton(path));
    return Collections.emptyList();
  }
}
