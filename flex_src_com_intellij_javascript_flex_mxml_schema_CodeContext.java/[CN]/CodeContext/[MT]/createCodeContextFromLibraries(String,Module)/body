{
  final Map<String,CodeContext> contextsOfModule=new THashMap<String,CodeContext>();
  for (  OrderEntry o : ModuleRootManager.getInstance(module).getOrderEntries()) {
    if (o instanceof LibraryOrderEntry && !AutogeneratedLibraryUtils.isAutogeneratedLibrary(o)) {
      for (      VirtualFile file : ((LibraryOrderEntry)o).getRootFiles(OrderRootType.CLASSES)) {
        handleFileDependency(module,contextsOfModule,file);
      }
    }
 else     if (o instanceof ModuleOrderEntry) {
      ModuleOrderEntry entry=(ModuleOrderEntry)o;
      final Module module1=entry.getModule();
      if (module1 != null) {
        addComponentsFromManifests(module,contextsOfModule,module1);
      }
    }
  }
  addComponentsFromManifests(module,contextsOfModule,module);
  final CodeContextHolder contextHolder=CodeContextHolder.getInstance(module.getProject());
  for (  Map.Entry<String,CodeContext> entry : contextsOfModule.entrySet()) {
    contextHolder.putCodeContext(entry.getKey(),module,entry.getValue());
  }
  CodeContext codeContext=contextsOfModule.get(namespace);
  if (codeContext == null) {
    codeContext=CodeContextHolder.EMPTY;
  }
  return codeContext;
}
