{
  if (JavaScriptSupportLoader.isLanguageNamespace(namespace) && (XmlBackedJSClassImpl.XML_TAG_NAME.equals(name) || XmlBackedJSClassImpl.XMLLIST_TAG_NAME.equals(name))) {
    return;
  }
  if (JavaScriptSupportLoader.MXML_URI3.equals(namespace) && JSCommonTypeNames.VECTOR_CLASS_NAME.equals(name)) {
    final AnnotationBackedDescriptorImpl typeDescriptor=new AnnotationBackedDescriptorImpl("type",descriptor,true,null,null,null);
    typeDescriptor.setRequired(true);
    descriptor.addPredefinedMemberDescriptor(typeDescriptor);
  }
 else   if (addGumboAttributesIfNeeded && FlexSdkUtils.isFlex4Sdk(FlexUtils.getSdkForActiveBC(module))) {
    for (    String gumboAttr : GUMBO_ATTRIBUTES) {
      descriptor.addPredefinedMemberDescriptor(new AnnotationBackedDescriptorImpl(gumboAttr,descriptor,true,null,null,null));
    }
  }
  myNameToDescriptorsMap.put(name,descriptor);
}
