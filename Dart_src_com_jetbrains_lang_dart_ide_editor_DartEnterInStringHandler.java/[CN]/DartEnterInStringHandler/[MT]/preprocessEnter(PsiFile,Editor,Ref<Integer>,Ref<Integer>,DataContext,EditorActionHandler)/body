{
  int caretOffset=caretOffsetRef.get().intValue();
  int caretAdvance=caretAdvanceRef.get().intValue();
  PsiElement psiAtOffset=file.findElementAt(caretOffset);
  if (psiAtOffset == null || psiAtOffset.getTextOffset() > caretOffset) {
    return Result.Continue;
  }
  Document document=editor.getDocument();
  ASTNode token=psiAtOffset.getNode();
  IElementType type=token.getElementType();
  if (type == DartTokenTypes.RAW_SINGLE_QUOTED_STRING) {
    char quote=token.getText().charAt(1);
    breakString("r" + quote,String.valueOf(quote),caretOffsetRef,caretAdvanceRef,document);
    return Result.Default;
  }
  if (type == DartTokenTypes.REGULAR_STRING_PART) {
    token=token.getTreeNext();
    if (token == null)     return Result.Continue;
    type=token.getElementType();
    if (type == DartTokenTypes.SHORT_TEMPLATE_ENTRY) {
      token=psiAtOffset.getNode().getTreePrev();
      if (token == null)       return Result.Continue;
      if (token.getElementType() == DartTokenTypes.OPEN_QUOTE) {
        String quote=token.getText().trim();
        if (quote.length() == 1) {
          breakString(quote,quote,caretOffsetRef,caretAdvanceRef,document);
          return Result.Default;
        }
      }
    }
  }
  if (type == DartTokenTypes.CLOSING_QUOTE) {
    String quote=token.getText().trim();
    if (quote.length() == 1) {
      breakString(quote,quote,caretOffsetRef,caretAdvanceRef,document);
      return Result.Default;
    }
  }
  return Result.Continue;
}
