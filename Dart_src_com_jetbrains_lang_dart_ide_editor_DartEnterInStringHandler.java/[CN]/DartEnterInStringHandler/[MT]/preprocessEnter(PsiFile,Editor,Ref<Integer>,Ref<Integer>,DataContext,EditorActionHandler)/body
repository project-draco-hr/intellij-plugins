{
  if (file.getLanguage() != DartLanguage.INSTANCE && !HtmlUtil.isHtmlFile(file))   return Result.Continue;
  int caretOffset=caretOffsetRef.get().intValue();
  PsiDocumentManager.getInstance(file.getProject()).commitDocument(editor.getDocument());
  PsiElement psiAtOffset=file.findElementAt(caretOffset);
  int psiOffset;
  if (psiAtOffset == null || (psiOffset=psiAtOffset.getTextRange().getStartOffset()) > caretOffset) {
    return Result.Continue;
  }
  ASTNode node=psiAtOffset.getNode();
  IElementType nodeType=node.getElementType();
  if ((nodeType == SHORT_TEMPLATE_ENTRY_START || nodeType == LONG_TEMPLATE_ENTRY_START) && caretOffset == psiOffset) {
    node=node.getTreeParent();
    nodeType=node.getElementType();
  }
  if (nodeType == RAW_TRIPLE_QUOTED_STRING && caretOffset >= psiOffset + "r'''".length()) {
    return Result.DefaultSkipIndent;
  }
  if (nodeType == RAW_SINGLE_QUOTED_STRING && caretOffset >= psiOffset + "r'".length()) {
    char quote=node.getText().charAt(1);
    breakString("r" + quote,String.valueOf(quote),caretOffsetRef,caretAdvanceRef,editor.getDocument());
    return Result.Default;
  }
  if (nodeType == REGULAR_STRING_PART || nodeType == CLOSING_QUOTE || nodeType == SHORT_TEMPLATE_ENTRY || nodeType == LONG_TEMPLATE_ENTRY) {
    final String openingQuoteText=getOpeningQuoteText(node);
    if (openingQuoteText != null) {
      if (openingQuoteText.length() == 1) {
        breakString(openingQuoteText,openingQuoteText,caretOffsetRef,caretAdvanceRef,editor.getDocument());
        return Result.Default;
      }
 else {
        return Result.DefaultSkipIndent;
      }
    }
  }
  return Result.Continue;
}
