{
  JSClass clazzToProcess=findClassOfQualifier(expression);
  if (clazzToProcess == null)   return;
  myEventsMap=getEventsMap(clazzToProcess);
  final PsiElement eventClass1=JSResolveUtil.unwrapProxy(JSResolveUtil.findClassByQName(FlexCommonTypeNames.FLASH_EVENT_FQN,index,ModuleUtilCore.findModuleForPsiElement(expression)));
  if ((eventClass1 instanceof JSClass)) {
    setToProcessMembers(true);
    setTypeContext(false);
    final Set<String> visited=new THashSet<String>();
    for (    JSClass cls : JSClassSearch.searchClassInheritors((JSClass)eventClass1,true,expression.getResolveScope()).findAll()) {
      if (!visited.add(cls.getQualifiedName()))       continue;
      process(cls);
    }
  }
  final PsiElement eventClass2=JSResolveUtil.unwrapProxy(JSResolveUtil.findClassByQName(FlexCommonTypeNames.STARLING_EVENT_FQN,index,ModuleUtilCore.findModuleForPsiElement(expression)));
  if ((eventClass2 instanceof JSClass)) {
    setToProcessMembers(true);
    setTypeContext(false);
    final Set<String> visited=new THashSet<String>();
    for (    JSClass cls : JSClassSearch.searchClassInheritors((JSClass)eventClass2,true,expression.getResolveScope()).findAll()) {
      if (!visited.add(cls.getQualifiedName()))       continue;
      process(cls);
    }
  }
}
