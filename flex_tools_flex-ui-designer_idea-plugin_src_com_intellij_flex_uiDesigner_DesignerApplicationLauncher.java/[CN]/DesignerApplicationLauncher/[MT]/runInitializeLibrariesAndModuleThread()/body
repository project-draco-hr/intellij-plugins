{
  initializeThread=ApplicationManager.getApplication().executeOnPooledThread(new Callable<ProjectComponentReferenceCounter>(){
    @Nullable @Override public ProjectComponentReferenceCounter call(){
      try {
        LibraryManager.getInstance().init();
        indicator.checkCanceled();
        if (!StringRegistry.getInstance().isEmpty()) {
          Client.getInstance().initStringRegistry();
        }
        indicator.setText(FlashUIDesignerBundle.message("collect.libraries"));
        DumbService dumbService=DumbService.getInstance(myProject);
        if (dumbService.isDumb()) {
          dumbService.waitForSmartMode();
        }
        return LibraryManager.getInstance().registerModule(module,problemsHolder);
      }
 catch (      Throwable e) {
        if (initializeThread == null || initializeThread.isCancelled()) {
          return null;
        }
        if (e instanceof InitException) {
          processInitException((InitException)e,module,debug);
        }
 else {
          LOG.error(e);
        }
        indicator.cancel();
        return null;
      }
    }
  }
);
}
