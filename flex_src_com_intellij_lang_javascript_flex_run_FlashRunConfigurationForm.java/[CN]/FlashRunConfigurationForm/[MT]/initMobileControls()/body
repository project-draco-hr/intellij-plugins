{
  initEmulatorRelatedControls();
  if (!SystemInfo.isMac) {
    myOnIOSSimulatorRadioButton.setEnabled(false);
    myOnIOSSimulatorRadioButton.setText(FlexBundle.message("ios.simulator.on.mac.only.button.text"));
    myIOSSimulatorSdkTextWithBrowse.setVisible(false);
  }
  myIOSSimulatorSdkTextWithBrowse.addBrowseFolderListener(null,null,myProject,FileChooserDescriptorFactory.createSingleFolderDescriptor());
  myOnIOSDeviceRadioButton.setVisible(false);
  final ActionListener debugTransportListener=new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      updateDebugTransportRelatedControls();
    }
  }
;
  myDebugOverNetworkRadioButton.addActionListener(debugTransportListener);
  myDebugOverUSBRadioButton.addActionListener(debugTransportListener);
  myAppDescriptorForEmulatorCombo.setModel(new DefaultComboBoxModel(AppDescriptorForEmulator.values()));
  myAppDescriptorForEmulatorCombo.setRenderer(new ListCellRendererWrapper<AppDescriptorForEmulator>(myAppDescriptorForEmulatorCombo.getRenderer()){
    @Override public void customize(    JList list,    AppDescriptorForEmulator value,    int index,    boolean selected,    boolean hasFocus){
      final FlexIdeBuildConfiguration bc=myBCCombo.getBC();
switch (value) {
case Android:
        setText(getDescriptorForEmulatorText("Android",bc == null ? null : bc.getAndroidPackagingOptions()));
      break;
case IOS:
    setText(getDescriptorForEmulatorText("iOS",bc == null ? null : bc.getIosPackagingOptions()));
  break;
}
}
}
);
}
