{
  myEmulatorCombo.setModel(new DefaultComboBoxModel(Emulator.ALL_EMULATORS.toArray()));
  myEmulatorCombo.setRenderer(new ListCellRendererWrapper<Emulator>(){
    @Override public void customize(    JList list,    Emulator value,    int index,    boolean selected,    boolean hasFocus){
      setText(value.name);
    }
  }
);
  myEmulatorCombo.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      updateEmulatorRelatedControls();
    }
  }
);
  final ActionListener targetDeviceListener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      updateControls();
      if (myOnEmulatorRadioButton.isSelected()) {
        IdeFocusManager.getInstance(myProject).requestFocus(myEmulatorCombo,true);
      }
      if (myOnIOSSimulatorRadioButton.isSelected()) {
        IdeFocusManager.getInstance(myProject).requestFocus(myIOSSimulatorSdkTextWithBrowse.getTextField(),true);
      }
    }
  }
;
  myOnEmulatorRadioButton.addActionListener(targetDeviceListener);
  myOnAndroidDeviceRadioButton.addActionListener(targetDeviceListener);
  myOnIOSSimulatorRadioButton.addActionListener(targetDeviceListener);
  myOnIOSDeviceRadioButton.addActionListener(targetDeviceListener);
  final int preferredWidth=new JLabel("999999").getPreferredSize().width;
  myScreenWidth.setPreferredSize(new Dimension(preferredWidth,myScreenWidth.getPreferredSize().height));
  myScreenHeight.setPreferredSize(new Dimension(preferredWidth,myScreenHeight.getPreferredSize().height));
  myFullScreenWidth.setPreferredSize(new Dimension(preferredWidth,myFullScreenWidth.getPreferredSize().height));
  myFullScreenHeight.setPreferredSize(new Dimension(preferredWidth,myFullScreenHeight.getPreferredSize().height));
  myScreenDpi.setPreferredSize(new Dimension(preferredWidth,myScreenDpi.getPreferredSize().height));
}
