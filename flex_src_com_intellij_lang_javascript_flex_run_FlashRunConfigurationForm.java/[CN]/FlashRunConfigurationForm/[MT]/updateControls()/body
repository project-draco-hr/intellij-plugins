{
  final FlexIdeBuildConfiguration bc=myBCCombo.getBC();
  final Module module=myBCCombo.getModule();
  final boolean overrideMainClass=myOverrideMainClassCheckBox.isSelected();
  myMainClassComponent.setEnabled(overrideMainClass);
  myOutputFileNameLabel.setEnabled(overrideMainClass);
  myOutputFileNameTextField.setEnabled(overrideMainClass);
  if (!overrideMainClass && bc != null && module != null) {
    final InfoFromConfigFile info=FlexCompilerConfigFileUtil.getInfoFromConfigFile(bc.getCompilerOptions().getAdditionalConfigFilePath());
    myMainClassComponent.setText(StringUtil.notNullize(info.getMainClass(module),bc.getMainClass()));
    myOutputFileNameTextField.setText(StringUtil.notNullize(info.getOutputFileName(),bc.getOutputFileName()));
  }
  final boolean web=bc != null && bc.getTargetPlatform() == TargetPlatform.Web;
  final boolean desktop=bc != null && bc.getTargetPlatform() == TargetPlatform.Desktop;
  final boolean mobile=bc != null && bc.getTargetPlatform() == TargetPlatform.Mobile;
  myLaunchPanel.setVisible(web);
  myWebOptionsPanel.setVisible(web);
  myDesktopOptionsPanel.setVisible(desktop);
  myMobileRunPanel.setVisible(mobile);
  myMobileOptionsPanel.setVisible(mobile);
  if (web) {
    updateBCOutputLabel(bc);
    myURLTextField.setEnabled(myURLRadioButton.isSelected());
    myLauncherParametersTextWithBrowse.getTextField().setText(myLauncherParameters.getPresentableText());
    myRunTrustedCheckBox.setEnabled(!myURLRadioButton.isSelected());
  }
  if (mobile) {
    final boolean runOnEmulator=myOnEmulatorRadioButton.isSelected();
    myEmulatorCombo.setEnabled(runOnEmulator);
    UIUtil.setEnabled(myEmulatorScreenSizePanel,runOnEmulator,true);
    myAdlOptionsLabel.setEnabled(runOnEmulator);
    myEmulatorAdlOptionsEditor.setEnabled(runOnEmulator);
    if (runOnEmulator) {
      updateEmulatorRelatedControls();
    }
    updateDebugTransportRelatedControls();
  }
}
