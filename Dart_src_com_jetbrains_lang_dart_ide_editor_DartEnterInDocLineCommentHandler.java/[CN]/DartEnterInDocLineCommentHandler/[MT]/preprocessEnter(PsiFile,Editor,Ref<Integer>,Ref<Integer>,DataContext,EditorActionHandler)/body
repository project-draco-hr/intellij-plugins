{
  if (file.getLanguage() != DartLanguage.INSTANCE && !HtmlUtil.isHtmlFile(file))   return Result.Continue;
  final int caretOffset=caretOffsetRef.get().intValue();
  final Document document=editor.getDocument();
  PsiDocumentManager.getInstance(file.getProject()).commitDocument(editor.getDocument());
  final PsiElement psiAtOffset=file.findElementAt(caretOffset);
  final PsiElement probablyDocComment=psiAtOffset instanceof PsiWhiteSpace && psiAtOffset.getText().startsWith("\n") ? psiAtOffset.getPrevSibling() : psiAtOffset == null && caretOffset > 0 && caretOffset == document.getTextLength() ? file.findElementAt(caretOffset - 1) : psiAtOffset;
  if (probablyDocComment != null && probablyDocComment.getTextRange().getStartOffset() < caretOffset && probablyDocComment.getNode().getElementType() == DartTokenTypesSets.SINGLE_LINE_DOC_COMMENT) {
    final CharSequence text=document.getCharsSequence();
    final int offset=CharArrayUtil.shiftForward(text,caretOffset," \t");
    if (StringUtil.startsWith(text,offset,DartDocUtil.SINGLE_LINE_DOC_COMMENT)) {
      caretOffsetRef.set(offset);
    }
 else {
      final String docText=StringUtil.trimStart(probablyDocComment.getText(),DartDocUtil.SINGLE_LINE_DOC_COMMENT);
      final int spacesBeforeText=StringUtil.isEmptyOrSpaces(docText) ? 1 : StringUtil.countChars(docText,' ',0,true);
      final int spacesToAdd=Math.max(0,spacesBeforeText - StringUtil.countChars(text,' ',caretOffset,true));
      document.insertString(caretOffset,DartDocUtil.SINGLE_LINE_DOC_COMMENT + StringUtil.repeatSymbol(' ',spacesToAdd));
      caretAdvance.set(spacesBeforeText);
    }
    return Result.Default;
  }
  return Result.Continue;
}
