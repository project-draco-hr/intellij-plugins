{
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      try {
        VirtualFile[] files=ModuleRootManager.getInstance(fixture.getModule()).getContentRoots();
        VirtualFile childDirectory=files[0].createChildDirectory(this,"META-INF");
        VirtualFile data=childDirectory.createChildData(this,"MANIFEST.MF");
        OutputStream outputStream=data.getOutputStream(this);
        PrintWriter writer=new PrintWriter(outputStream);
        writer.write("Manifest-Version: 1.0\n" + "Bundle-Version: 1.0.0");
        writer.flush();
        writer.close();
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  PsiFile psiFile=TestUtil.loadPsiFileUnderContent(fixture.getProject(),fixture.getModule().getName(),"META-INF/MANIFEST.MF");
  List<ProblemDescriptor> list=TestUtil.runInspection(new MissingFinalNewlineInspection(),psiFile,fixture.getProject());
  assertThat(list,notNullValue());
  assertThat(list.size(),equalTo(1));
  final ProblemDescriptor problem=list.get(0);
  assertThat(problem.getLineNumber(),equalTo(2));
  final QuickFix[] fixes=problem.getFixes();
  assertThat(fixes,notNullValue());
  assertThat(fixes.length,equalTo(1));
  assertThat(psiFile.getText(),Matchers.endsWith("Bundle-Version: 1.0.0"));
  CommandProcessor.getInstance().executeCommand(fixture.getProject(),new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          fixes[0].applyFix(fixture.getProject(),problem);
        }
      }
);
    }
  }
,"test","test");
  assertThat(psiFile.getText(),Matchers.endsWith("Bundle-Version: 1.0.0\n"));
  list=TestUtil.runInspection(new MissingFinalNewlineInspection(),psiFile,fixture.getProject());
  assertThat(list,nullValue());
}
