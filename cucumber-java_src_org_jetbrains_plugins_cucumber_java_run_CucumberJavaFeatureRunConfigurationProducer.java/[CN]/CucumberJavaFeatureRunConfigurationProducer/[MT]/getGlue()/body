{
  PsiFile file=mySourceElement.getContainingFile();
  if (file instanceof GherkinFile) {
    final CucumberJvmExtensionPoint[] extensions=Extensions.getExtensions(CucumberJvmExtensionPoint.EP_NAME);
    final Set<String> glues=new LinkedHashSet<String>();
    file.accept(new GherkinRecursiveElementVisitor(){
      @Override public void visitStep(      GherkinStep step){
        for (        CucumberJvmExtensionPoint e : extensions) {
          boolean covered=false;
          final String glue=e.getGlue(step);
          if (glue != null) {
            final Set<String> toRemove=new HashSet<String>();
            for (            String existedGlue : glues) {
              if (glue.startsWith(existedGlue + ".")) {
                covered=true;
                break;
              }
 else               if (existedGlue.startsWith(glue + ".")) {
                toRemove.add(existedGlue);
              }
            }
            for (            String removing : toRemove) {
              glues.remove(removing);
            }
            if (!covered) {
              glues.add(glue);
            }
            break;
          }
        }
      }
    }
);
    if (!glues.isEmpty()) {
      StringBuilder buffer=new StringBuilder();
      for (      String glue : glues) {
        if (buffer.length() > 0) {
          buffer.append(" ");
        }
        buffer.append(glue);
      }
      return buffer.toString();
    }
  }
  return null;
}
