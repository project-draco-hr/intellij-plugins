{
  myFilesToPackageTable.putClientProperty("terminateEditOnFocusLost",Boolean.TRUE);
  myFilesToPackageTable.setRowHeight(20);
  myFilesToPackageTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      updateRemoveButtonState();
    }
  }
);
  myFilesToPackageTable.setModel(new DefaultTableModel(){
    public int getColumnCount(){
      return Column.values().length;
    }
    public int getRowCount(){
      return myFilesToPackage.size();
    }
    public String getColumnName(    int column){
      return Column.values()[column].getColumnName();
    }
    public Class<?> getColumnClass(    int column){
      return Column.values()[column].getColumnClass();
    }
    public Object getValueAt(    int row,    int column){
      return Column.values()[column].getValue(myFilesToPackage.get(row));
    }
    public void setValueAt(    Object aValue,    int row,    int column){
      Column.values()[column].setValue(myFilesToPackage,row,aValue);
    }
  }
);
  myFilesToPackageTable.getColumnModel().getColumn(0).setCellEditor(new AbstractTableCellEditor(){
    private CellEditorComponentWithBrowseButton<JTextField> myComponent;
    public Component getTableCellEditorComponent(    final JTable table,    Object value,    boolean isSelected,    int row,    int column){
      final ActionListener listener=new ActionListener(){
        public void actionPerformed(        ActionEvent e){
          FileChooserDescriptor d=new FileChooserDescriptor(true,true,false,true,false,false);
          VirtualFile initialFile=LocalFileSystem.getInstance().findFileByPath((String)getCellEditorValue());
          VirtualFile[] files=FileChooser.chooseFiles(myProject,d,initialFile);
          if (files.length == 1 && files[0] != null) {
            myComponent.getChildComponent().setText(files[0].getPresentableUrl());
          }
        }
      }
;
      myComponent=new CellEditorComponentWithBrowseButton<JTextField>(new TextFieldWithBrowseButton(listener),this);
      myComponent.getChildComponent().setText((String)value);
      return myComponent;
    }
    public Object getCellEditorValue(){
      return myComponent.getChildComponent().getText();
    }
  }
);
}
