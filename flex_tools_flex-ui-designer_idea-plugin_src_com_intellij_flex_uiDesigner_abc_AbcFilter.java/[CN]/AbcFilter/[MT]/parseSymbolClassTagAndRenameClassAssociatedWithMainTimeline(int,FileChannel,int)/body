{
  final int startTagPosition=byteBuffer.position() - (tagLength >= 63 ? 6 : 2);
  int numSymbols=byteBuffer.getShort();
  for (int i=0; i < numSymbols; i++) {
    int id=byteBuffer.getShort();
    final int position=byteBuffer.position();
    String name=readAbcName(position);
    if (id == 0) {
      byte[] nb="com.intellij.flex.uiDesigner.Main".getBytes();
      byteBuffer.put(nb);
      byteBuffer.put((byte)0);
      byteBuffer.position(startTagPosition);
      encodeTagHeader(TagTypes.SymbolClass,tagLength - (name.length() - nb.length));
      byteBuffer.position(lastWrittenPosition);
      byteBuffer.limit(position + nb.length + 1);
      outputFileChannel.write(byteBuffer);
      byteBuffer.limit(byteBuffer.capacity());
      return position + name.length() + 1;
    }
 else {
      byteBuffer.position(position + name.length() + 1);
    }
  }
  throw new IllegalArgumentException("can't find 0 symbol");
}
