{
  lastWrittenPosition=0;
  while (byteBuffer.position() < byteBuffer.limit()) {
    int tagCodeAndLength=byteBuffer.getShort();
    int type=tagCodeAndLength >> 6;
    int length=tagCodeAndLength & 0x3F;
    if (length == 63) {
      length=byteBuffer.getInt();
    }
switch (type) {
case TagTypes.End:
      byteBuffer.position(lastWrittenPosition);
    outputFileChannel.write(byteBuffer);
  return;
case TagTypes.SymbolClass:
{
  final int tagStartPosition=byteBuffer.position();
  if (replaceMainClass) {
    lastWrittenPosition=parseSymbolClassTagAndRenameClassAssociatedWithMainTimeline(lastWrittenPosition,outputFileChannel,length);
  }
  byteBuffer.position(tagStartPosition + length);
}
break;
case TagTypes.DoABC2:
String name=readAbcName(byteBuffer.position() + 4);
if (!abcNameFilter.accept(name)) {
byteBuffer.limit(byteBuffer.position() - 6);
byteBuffer.position(lastWrittenPosition);
outputFileChannel.write(byteBuffer);
lastWrittenPosition=byteBuffer.limit() + length + 6;
byteBuffer.limit(byteBuffer.capacity());
byteBuffer.position(lastWrittenPosition);
continue;
}
 else if (doAbc2(length,name,outputFileChannel)) {
continue;
}
default :
byteBuffer.position(byteBuffer.position() + length);
break;
}
}
}
