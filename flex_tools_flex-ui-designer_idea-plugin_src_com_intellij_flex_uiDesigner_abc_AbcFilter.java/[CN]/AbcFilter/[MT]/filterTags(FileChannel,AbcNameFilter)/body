{
  lastWrittenPosition=0;
  while (buffer.position() < buffer.limit()) {
    int tagCodeAndLength=buffer.getShort();
    int type=tagCodeAndLength >> 6;
    int length=tagCodeAndLength & 0x3F;
    if (length == 63) {
      length=buffer.getInt();
    }
switch (type) {
case TagTypes.End:
      buffer.position(lastWrittenPosition);
    outFileChannel.write(buffer);
  return;
case TagTypes.SymbolClass:
{
  final int tagStartPosition=buffer.position();
  if (replaceMainClass) {
    lastWrittenPosition=parseSymbolClassTagAndRenameClassAssociatedWithMainTimeline(lastWrittenPosition,outFileChannel,length);
  }
  buffer.position(tagStartPosition + length);
}
break;
case TagTypes.DoABC2:
String name=readAbcName(buffer.position() + 4);
if (!abcNameFilter.accept(name)) {
buffer.limit(buffer.position() - 6);
buffer.position(lastWrittenPosition);
outFileChannel.write(buffer);
lastWrittenPosition=buffer.limit() + length + 6;
buffer.limit(buffer.capacity());
buffer.position(lastWrittenPosition);
continue;
}
 else if (doAbc2(length,name,outFileChannel)) {
continue;
}
default :
buffer.position(buffer.position() + length);
break;
}
}
}
