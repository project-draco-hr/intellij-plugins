{
  final LibraryTable projectLibraryTable=ProjectLibraryTable.getInstance(project);
  final Library existingLibrary=projectLibraryTable.getLibraryByName(DART_PACKAGES_LIBRARY_NAME);
  final Library library=existingLibrary != null ? existingLibrary : ApplicationManager.getApplication().runWriteAction(new Computable<Library>(){
    @Override public Library compute(){
      return projectLibraryTable.createLibrary(DART_PACKAGES_LIBRARY_NAME);
    }
  }
);
  final String[] existingUrls=library.getUrls(OrderRootType.CLASSES);
  if (existingUrls.length != libRootUrls.size() || !libRootUrls.containsAll(Arrays.asList(existingUrls))) {
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      @Override public void run(){
        final Library.ModifiableModel model=library.getModifiableModel();
        for (        String url : existingUrls) {
          model.removeRoot(url,OrderRootType.CLASSES);
        }
        for (        String url : libRootUrls) {
          model.addRoot(url,OrderRootType.CLASSES);
        }
        model.commit();
      }
    }
);
  }
  return library;
}
