{
  if (project.getUserData(DART_PACKAGE_ROOTS_UPDATE_SCHEDULED_OR_IN_PROGRESS) == Boolean.TRUE) {
    return;
  }
  setDartPackageRootUpdateScheduledOrInProgress(project,Boolean.TRUE);
  DumbService.getInstance(project).smartInvokeLater(new Runnable(){
    @Override public void run(){
      try {
        final DartSdk sdk=DartSdk.getDartSdk(project);
        final Library library=actualizePackagesLibrary(project,sdk);
        if (library == null) {
          removeDartPackagesLibraryAndDependencies(project);
        }
 else {
          final Condition<Module> moduleFilter=new Condition<Module>(){
            @Override public boolean value(            final Module module){
              return DartSdkGlobalLibUtil.isDartSdkGlobalLibAttached(module,sdk.getGlobalLibName());
            }
          }
;
          updateDependenciesOnDartPackagesLibrary(project,moduleFilter,library);
        }
      }
  finally {
        setDartPackageRootUpdateScheduledOrInProgress(project,false);
      }
    }
  }
,ModalityState.NON_MODAL);
}
