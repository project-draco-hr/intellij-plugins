{
  PsiBuilder.Marker functionMarker=myBuilder.mark();
  if (!anonymous) {
    if (ACCESS_KEYWORDS.contains(myBuilder.getTokenType())) {
      myBuilder.advanceLexer();
    }
    if (myBuilder.getTokenType() != FUNCTION_KEYWORD) {
      parseType(myBuilder);
    }
  }
  if (myBuilder.getTokenType() != FUNCTION_KEYWORD) {
    myBuilder.error(CfmlBundle.message("cfml.parsing.function.expected"));
    functionMarker.drop();
    return;
  }
  myBuilder.advanceLexer();
  if (myBuilder.getTokenType() != IDENTIFIER && !(myBuilder.getTokenType() == DEFAULT_KEYWORD) && !anonymous) {
    myBuilder.error(CfmlBundle.message("cfml.parsing.identifier.expected"));
  }
 else {
    if (!anonymous)     myBuilder.advanceLexer();
  }
  parseParametersListInBrackets(myBuilder);
  CfmlParser.parseAttributes(myBuilder,"cffunction",IDENTIFIER,true);
  parseFunctionBody(myBuilder);
  functionMarker.done(CfmlElementTypes.FUNCTION_DEFINITION);
}
