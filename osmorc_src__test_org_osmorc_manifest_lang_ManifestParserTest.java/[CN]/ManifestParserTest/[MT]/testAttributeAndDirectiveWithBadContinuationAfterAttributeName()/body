{
  PsiBuilder builder=createBuilder("Import-Package: com.acme;att\n=attvlue;dir:=dirvalue\n");
  ASTNode node=testObject.parse(ManifestStubElementTypes.FILE,builder);
  assertThat(node.getElementType(),sameInstance((IElementType)ManifestStubElementTypes.FILE));
  checkContainsNodes(node,ManifestElementTypes.SECTION);
  node=node.getChildren(null)[0];
  checkContainsNodes(node,ManifestElementTypes.HEADER,ManifestElementTypes.HEADER);
  ASTNode section=node;
  node=section.getChildren(null)[0];
  checkContainsNodes(node,ManifestTokenType.HEADER_NAME,ManifestTokenType.COLON,ManifestTokenType.SIGNIFICANT_SPACE,ManifestElementTypes.CLAUSE);
  node=node.getChildren(null)[3];
  checkContainsNodes(node,ManifestElementTypes.HEADER_VALUE_PART,ManifestTokenType.SEMICOLON,ManifestElementTypes.HEADER_VALUE_PART);
  node=section.getChildren(null)[1];
  checkContainsNodes(node,TokenType.BAD_CHARACTER,TokenType.BAD_CHARACTER,TokenType.BAD_CHARACTER,TokenType.BAD_CHARACTER,TokenType.BAD_CHARACTER,TokenType.BAD_CHARACTER,TokenType.BAD_CHARACTER,TokenType.BAD_CHARACTER,TokenType.BAD_CHARACTER,TokenType.BAD_CHARACTER,TokenType.BAD_CHARACTER,TokenType.BAD_CHARACTER,ManifestTokenType.COLON,TokenType.BAD_CHARACTER,ManifestElementTypes.CLAUSE);
  node=node.getChildren(null)[14];
  checkContainsNodes(node,ManifestElementTypes.HEADER_VALUE_PART);
}
