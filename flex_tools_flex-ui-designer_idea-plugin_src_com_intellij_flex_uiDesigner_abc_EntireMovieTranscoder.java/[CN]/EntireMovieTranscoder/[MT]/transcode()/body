{
  lastWrittenPosition=0;
  TIntArrayList ignoredBytesPositions=null;
  int ignoredBytesCount;
  int tagStart;
  analyze:   while ((tagStart=buffer.position()) < buffer.limit()) {
    final int tagCodeAndLength=buffer.getShort();
    final int type=tagCodeAndLength >> 6;
    int length=tagCodeAndLength & 0x3F;
    if (length == 63) {
      length=buffer.getInt();
    }
switch (type) {
case TagTypes.End:
      break analyze;
case TagTypes.ExportAssets:
case TagTypes.SymbolClass:
    if (ignoredBytesPositions == null) {
      ignoredBytesPositions=new TIntArrayList();
    }
  ignoredBytesPositions.add(tagStart);
final int fullLength=length + (buffer.position() - tagStart);
ignoredBytesPositions.add(tagStart + fullLength);
ignoredBytesCount-=fullLength;
}
buffer.position(position + length);
}
}
