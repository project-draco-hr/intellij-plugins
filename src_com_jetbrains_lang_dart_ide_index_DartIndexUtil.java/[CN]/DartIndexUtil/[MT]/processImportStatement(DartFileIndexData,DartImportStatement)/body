{
  final String pathValue=FileUtil.toSystemIndependentName(importStatement.getLibraryName());
  final Set<String> showComponentNames=new THashSet<String>();
  for (  DartShowCombinator showCombinator : importStatement.getShowCombinatorList()) {
    for (    DartExpression expression : showCombinator.getLibraryReferenceList().getExpressionList()) {
      showComponentNames.add(expression.getText());
    }
  }
  final Set<String> hideComponentNames=new THashSet<String>();
  for (  DartHideCombinator hideCombinator : importStatement.getHideCombinatorList()) {
    for (    DartExpression expression : hideCombinator.getLibraryReferenceList().getExpressionList()) {
      hideComponentNames.add(expression.getText());
    }
  }
  final DartComponentName prefixName=importStatement.getComponentName();
  final String prefix=prefixName != null ? prefixName.getName() : null;
  result.addImport(new DartPathInfo(pathValue,prefix,showComponentNames,hideComponentNames));
  result.addComponentInfo(prefix,new DartComponentInfo(importStatement.getContainingFile().getName(),DartComponentType.LABEL));
}
