{
  FileBasedIndex fileBasedIndex=FileBasedIndex.getInstance();
  GlobalSearchScope scope=module.getModuleWithDependenciesAndLibrariesScope(false);
  Set<JSClass> visited=new HashSet<JSClass>();
  Set<CssPropertyDescriptor> result=new HashSet<CssPropertyDescriptor>();
  Project project=module.getProject();
  for (  CssSimpleSelector selector : selectors) {
    final JSClass jsClass=getClassFromMxmlDescriptor(selector,module);
    if (jsClass != null) {
      fillPropertyDescriptorsDynamically(jsClass,visited,result);
      continue;
    }
    final String shortClassName=selector.getElementName();
    Collection<JSQualifiedNamedElement> candidates=JSResolveUtil.findElementsByName(shortClassName,project,scope);
    for (    JSQualifiedNamedElement candidate : candidates) {
      if (candidate instanceof JSClass) {
        fillPropertyDescriptorsDynamically((JSClass)candidate,visited,result);
      }
    }
  }
  for (Iterator<CssPropertyDescriptor> iterator=result.iterator(); iterator.hasNext(); ) {
    CssPropertyDescriptor propertyDescriptor=iterator.next();
    List<Set<FlexStyleIndexInfo>> values=fileBasedIndex.getValues(FlexStyleIndex.INDEX_ID,propertyDescriptor.getPropertyName(),scope);
    if (values.size() == 0) {
      iterator.remove();
    }
  }
  return result;
}
