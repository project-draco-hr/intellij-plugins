{
  final FlexIdeBuildConfiguration bc=moduleAndBC.second;
  final Sdk sdk=bc.getSdk();
  if (sdk == null) {
    throw new RuntimeConfigurationError(FlexBundle.message("sdk.not.set.for.bc.0.of.module.1",bc.getName(),moduleAndBC.first.getName()));
  }
  if (myOverrideMainClass) {
    if (myOverriddenMainClass.isEmpty()) {
      throw new RuntimeConfigurationError(FlexBundle.message("main.class.not.set"));
    }
    if (myOverriddenOutputFileName.isEmpty()) {
      throw new RuntimeConfigurationError(FlexBundle.message("output.file.name.not.specified"));
    }
    if (!myOverriddenOutputFileName.toLowerCase().endsWith(".swf")) {
      throw new RuntimeConfigurationError(FlexBundle.message("output.file.must.have.swf.extension"));
    }
  }
 else {
    if (bc.getOutputType() != OutputType.Application) {
      throw new RuntimeConfigurationError(FlexBundle.message("bc.does.not.produce.app",getBCName(),getModuleName()));
    }
  }
switch (bc.getTargetPlatform()) {
case Web:
    if (myLaunchUrl) {
      try {
        if (BrowserUtil.getURL(myUrl) == null)         throw new RuntimeConfigurationError(FlexBundle.message("flex.run.config.incorrect.url"));
      }
 catch (      MalformedURLException e) {
        throw new RuntimeConfigurationError(FlexBundle.message("flex.run.config.incorrect.url"));
      }
      if (myLauncherParameters.getLauncherType() == LauncherParameters.LauncherType.Player) {
        throw new RuntimeConfigurationError(FlexBundle.message("flex.run.config.url.can.not.be.run.with.flash.player"));
      }
    }
  if (myLauncherParameters.getLauncherType() == LauncherParameters.LauncherType.Player && bc.getTargetPlatform() == TargetPlatform.Web && bc.isUseHtmlWrapper()) {
    throw new RuntimeConfigurationError(FlexBundle.message("html.wrapper.can.not.be.run.with.flash.player"));
  }
break;
case Desktop:
checkAdlAndAirRuntime(sdk);
break;
case Mobile:
if (bc.getOutputType() == OutputType.Application && myMobileRunTarget == AirMobileRunTarget.AndroidDevice && !bc.getAndroidPackagingOptions().isEnabled()) {
throw new RuntimeConfigurationError(FlexBundle.message("android.disabled.in.bc",getBCName(),getModuleName()));
}
if (myMobileRunTarget == AirMobileRunTarget.Emulator) {
checkAdlAndAirRuntime(sdk);
}
break;
}
}
