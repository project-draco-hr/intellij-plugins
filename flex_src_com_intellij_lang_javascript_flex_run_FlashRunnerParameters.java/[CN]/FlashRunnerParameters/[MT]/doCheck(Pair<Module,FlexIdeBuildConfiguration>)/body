{
  final FlexIdeBuildConfiguration bc=moduleAndBC.second;
  final Sdk sdk=bc.getSdk();
  if (sdk == null) {
    throw new RuntimeConfigurationError(FlexBundle.message("sdk.not.set.for.bc.0.of.module.1",bc.getName(),moduleAndBC.first.getName()));
  }
  String mainClass=myOverrideMainClass ? myOverriddenMainClass : bc.getMainClass();
  if (mainClass.isEmpty()) {
    throw new RuntimeConfigurationError(FlexBundle.message("main.class.not.set"));
  }
  PsiElement clazz=JSResolveUtil.unwrapProxy(JSResolveUtil.findClassByQName(mainClass,moduleAndBC.first.getModuleScope(false)));
  if (!(clazz instanceof JSClass)) {
    throw new RuntimeConfigurationError(FlexBundle.message("main.class.not.found",mainClass,bc.getName()));
  }
  JSClassChooserDialog.PublicInheritor mainClassFilter=BCUtils.getMainClassFilter(moduleAndBC.first,bc,false);
  if (!mainClassFilter.value((JSClass)clazz)) {
    throw new RuntimeConfigurationError(FlexBundle.message("main.class.is.not.a.subclass.of",mainClass,mainClassFilter.getSuperClassName()));
  }
  if (myOverrideMainClass) {
    if (myOverriddenOutputFileName.isEmpty()) {
      throw new RuntimeConfigurationError(FlexBundle.message("output.file.name.not.specified"));
    }
    if (!myOverriddenOutputFileName.toLowerCase().endsWith(".swf")) {
      throw new RuntimeConfigurationError(FlexBundle.message("output.file.must.have.swf.extension"));
    }
  }
 else {
    if (bc.getOutputType() != OutputType.Application) {
      throw new RuntimeConfigurationError(FlexBundle.message("bc.does.not.produce.app",getBCName(),getModuleName()));
    }
  }
switch (bc.getTargetPlatform()) {
case Web:
    if (myLaunchUrl) {
      try {
        if (BrowserUtil.getURL(myUrl) == null)         throw new RuntimeConfigurationError(FlexBundle.message("flex.run.config.incorrect.url"));
      }
 catch (      MalformedURLException e) {
        throw new RuntimeConfigurationError(FlexBundle.message("flex.run.config.incorrect.url"));
      }
    }
  break;
case Desktop:
checkAdlAndAirRuntime(sdk);
checkCustomDescriptor(bc.getAirDesktopPackagingOptions());
break;
case Mobile:
if (bc.getOutputType() == OutputType.Application && myMobileRunTarget == AirMobileRunTarget.AndroidDevice) {
final AndroidPackagingOptions packagingOptions=bc.getAndroidPackagingOptions();
checkCustomDescriptor(packagingOptions);
}
if (myMobileRunTarget == AirMobileRunTarget.Emulator) {
checkAdlAndAirRuntime(sdk);
switch (myAppDescriptorForEmulator) {
case Generated:
break;
case Android:
checkCustomDescriptor(bc.getAndroidPackagingOptions());
break;
case IOS:
checkCustomDescriptor(bc.getIosPackagingOptions());
break;
}
}
break;
}
}
