{
  final String testFile=System.getProperty("testFile");
  final Pair<String[],String[]> pair=getTestFiles();
  final String[] files;
  if (testFile == null) {
    files=pair.getFirst();
  }
 else {
    files=new String[]{getTestPath() + "/" + testFile+ ".mxml"};
  }
  final String[] auxFiles=pair.getSecond();
  final int auxFilesCount=auxFiles == null ? 0 : auxFiles.length;
  final VirtualFile[] vFiles=new VirtualFile[files.length + auxFilesCount];
  for (int i=0; i < files.length; i++) {
    vFiles[i]=getVFile(files[i]);
  }
  if (auxFiles != null) {
    for (int i=files.length, j=0; j < auxFiles.length; ) {
      vFiles[i++]=getVFile(auxFiles[j++]);
    }
  }
  testFiles(vFiles.length - auxFilesCount,vFiles);
  String[] problems=getLastProblems();
  if (testFile != null) {
    assertThat(problems,emptyArray());
  }
 else {
    assertThat(problems,"<b>Flex UI Designer</b><ul><li>Initializer for Group cannot be represented in text (line: 2)</li><li>Initializer for Container cannot be represented in text (line: 5)</li><li>Children of Accordion must be mx.core.INavigatorContent (line: 8)</li></ul>",m("Unresolved variable unresolvedData"),m("Support only MXML-based component AuxActionScriptProjectComponent"),m("<a href=\"http://youtrack.jetbrains.net/issue/IDEA-72175\">Inline components are not supported</a> (line: 9)"),m("Invalid color name invalidcolorname (line: 2)"),m("Default property not found for Rect (line: 2)"),m("spark.components.supportClasses.TrackBase is abstract class (line: 3)"));
  }
}
