{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  JSLibraryMappings libraryMappings=ServiceManager.getService(project,JSLibraryMappings.class);
  Map<VirtualFile,ScriptingLibraryModel> allMappings=libraryMappings.getMappings();
  List<VirtualFile> roots=Lists.newArrayList();
  for (  Map.Entry<VirtualFile,ScriptingLibraryModel> entry : allMappings.entrySet()) {
    ScriptingLibraryModel libraryModel=entry.getValue();
    final List<ScriptingLibraryModel> libraryModels;
    if (libraryModel instanceof ScriptingLibraryMappings.CompoundLibrary) {
      ScriptingLibraryMappings.CompoundLibrary compoundLibrary=(ScriptingLibraryMappings.CompoundLibrary)libraryModel;
      libraryModels=ImmutableList.copyOf(compoundLibrary.getLibraries());
    }
 else {
      libraryModels=Collections.singletonList(libraryModel);
    }
    for (    ScriptingLibraryModel model : libraryModels) {
      if (LIBRARY_NAME.equals(model.getName())) {
        roots.add(entry.getKey());
      }
    }
  }
  return roots;
}
