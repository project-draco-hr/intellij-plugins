{
  LOG.assertTrue(!documentOpening);
  final boolean appClosed=isApplicationClosed();
  if (appClosed || !Client.getInstance().isModuleRegistered(module)) {
    Sdk sdk=FlexUtils.getFlexSdkForFlexModuleOrItsFlexFacets(module);
    if (sdk == null || !checkFlexSdkVersion(sdk.getVersionString())) {
      reportInvalidFlexSdk(module,debug,sdk);
      return;
    }
  }
  documentOpening=true;
  if (appClosed) {
    ProgressManager.getInstance().run(new DesignerApplicationLauncher(module,debug,new FirstOpenDocumentTask(psiFile)));
  }
 else {
    ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
      @Override public void run(){
        Client client=Client.getInstance();
        try {
          final ProblemsHolder problemsHolder=new ProblemsHolder();
          if (!client.isModuleRegistered(module)) {
            try {
              final XmlFile[] unregisteredDocumentReferences=LibraryManager.getInstance().initLibrarySets(module,true,problemsHolder);
              if (unregisteredDocumentReferences != null && !client.registerDocumentReferences(unregisteredDocumentReferences,module,problemsHolder)) {
                return;
              }
            }
 catch (            InitException e) {
              DesignerApplicationLauncher.processInitException(e,module,debug);
            }
          }
          client.openDocument(module,psiFile,problemsHolder);
          client.flush();
        }
  finally {
          documentOpening=false;
        }
      }
    }
);
  }
}
