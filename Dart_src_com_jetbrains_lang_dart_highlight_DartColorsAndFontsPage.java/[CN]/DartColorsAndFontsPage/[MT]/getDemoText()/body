{
  return "/* Block comment */\n" + "\n" + "/**\n"+ " Document comment\n"+ "**/\n"+ "class <class>SomeClass</class> implements <interface>IOther</interface> { // some comment\n"+ "  var <instance.member.variable>field</instance.member.variable> = null;\n"+ "  <builtin>num</builtin> <instance.member.variable>unusedField</instance.member.variable> = 12345.67890;\n"+ "  <builtin>String</builtin> <instance.member.variable>anotherString</instance.member.variable> = \"Another\\nStrin\\g\";\n"+ "  static var <static.member.variable>staticField</static.member.variable> = 0;\n"+ "\n"+ "  static <static.member.function>inc</static.member.function>() {\n"+ "    <static.member.variable>staticField</static.member.variable>++;\n"+ "  }\n"+ "  <instance.member.function>foo</instance.member.function>(<interface>AnInterface</interface> <parameter>param</parameter>) {\n"+ "    print(<instance.member.variable>anotherString</instance.member.variable> + <parameter>param</parameter>);\n"+ "    var <local.variable>reassignedValue</local.variable> = <class>SomeClass</class>.<static.member.variable>staticField</static.member.variable>; \n"+ "    <local.variable>reassignedValue</local.variable> ++; \n"+ "    <function>localFunction</function>() {\n"+ "      var <local.variable>a</local.variable> = @@@;// bad character\n"+ "    };\n"+ "    parseData(<label>fileName</label>:'file.txt');\n"+ "  }\n"+ "}";
}
