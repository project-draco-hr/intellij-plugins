{
  JstdRunProfileState jstdState=JstdRunProfileState.cast(state);
  if (jstdState.getRunSettings().isExternalServerType()) {
    return AsyncResult.<RunProfileStarter>done(new MyStarter(null,this));
  }
  JstdToolWindowManager jstdToolWindowManager=JstdToolWindowManager.getInstance(project);
  jstdToolWindowManager.setAvailable(true);
  JstdServer server=JstdServerRegistry.getInstance().getServer();
  if (server != null && !server.isStopped()) {
    return AsyncResult.<RunProfileStarter>done(new MyStarter(server,this));
  }
  final AsyncResult<RunProfileStarter> result=new AsyncResult<RunProfileStarter>();
  jstdToolWindowManager.restartServer(new NullableConsumer<JstdServer>(){
    @Override public void consume(    @Nullable JstdServer server){
      if (server != null) {
        result.setDone(new MyStarter(server,JstdRunProgramRunner.this));
      }
 else {
        result.setDone(null);
      }
    }
  }
);
  return result;
}
