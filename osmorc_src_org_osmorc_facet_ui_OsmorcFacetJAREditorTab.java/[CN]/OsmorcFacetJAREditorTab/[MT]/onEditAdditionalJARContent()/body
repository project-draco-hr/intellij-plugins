{
  int row=myAdditionalJARContentsTable.getSelectedRow();
  if (row > -1) {
    Pair<String,String> additionalJARContent=myAdditionalJARContentsTableModel.getAdditionalJARContent(row);
    Project project=myEditorContext.getProject();
    FileChooserDescriptor descriptor=new FileChooserDescriptor(true,true,true,true,false,false);
    descriptor.setTitle("Choose source file or folder");
    FileChooserDialog fileChooserDialog=FileChooserFactory.getInstance().createFileChooser(descriptor,project);
    VirtualFile preselectedPath=LocalFileSystem.getInstance().findFileByPath(additionalJARContent.getFirst());
    if (preselectedPath == null) {
      Module module=myEditorContext.getModule();
      VirtualFile[] contentRoots=ModuleRootManager.getInstance(module).getContentRoots();
      if (contentRoots.length > 0) {
        for (        VirtualFile contentRoot : contentRoots) {
          VirtualFile path=VfsUtil.findRelativeFile(additionalJARContent.getFirst(),contentRoot);
          if (path != null) {
            preselectedPath=path;
            break;
          }
        }
        if (preselectedPath == null) {
          preselectedPath=contentRoots[0];
        }
      }
 else       if (project.getBaseDir() != null) {
        preselectedPath=project.getBaseDir();
      }
    }
    VirtualFile[] files=fileChooserDialog.choose(preselectedPath,project);
    if (files.length > 0) {
      String sourcePath=files[0].getPath();
      String destPath=determineMostLikelyLocationInJAR(files[0]);
      myAdditionalJARContentsTableModel.changeAdditionalJARConent(row,sourcePath,destPath);
      myAdditionalJARContentsTable.editCellAt(row,1);
      myAdditionalJARContentsTable.getEditorComponent().requestFocus();
    }
  }
}
