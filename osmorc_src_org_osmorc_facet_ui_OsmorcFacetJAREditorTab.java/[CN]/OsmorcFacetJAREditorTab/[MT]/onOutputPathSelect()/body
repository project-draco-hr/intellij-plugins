{
  String currentFile=getSelectedOutputPath();
  VirtualFile moduleCompilerOutputPath=CompilerModuleExtension.getInstance(myEditorContext.getModule()).getCompilerOutputPath();
  if (moduleCompilerOutputPath == null) {
    String outputPathUrl=CompilerModuleExtension.getInstance(myEditorContext.getModule()).getCompilerOutputUrl();
    try {
      VfsUtil.createDirectories(VfsUtil.urlToPath(outputPathUrl));
    }
 catch (    IOException e) {
      Messages.showErrorDialog(myRoot,OsmorcBundle.message("error"),OsmorcBundle.message("facet.editor.cannot.create.output.path"));
      return;
    }
    moduleCompilerOutputPath=CompilerModuleExtension.getInstance(myEditorContext.getModule()).getCompilerOutputPath();
    if (moduleCompilerOutputPath == null) {
      throw new IllegalStateException("Cannot access compiler output path.");
    }
  }
  VirtualFile preselectedFile=StringUtil.isNotEmpty(currentFile) ? LocalFileSystem.getInstance().findFileByPath(currentFile) : moduleCompilerOutputPath;
  FileChooserDescriptor descriptor=FileChooserDescriptorFactory.createSingleFolderDescriptor();
  descriptor.setTitle("Select bundle output directory");
  VirtualFile file=FileChooser.chooseFile(descriptor,myEditorContext.getProject(),preselectedFile);
  if (file != null) {
    if (VfsUtil.isAncestor(moduleCompilerOutputPath,file,false)) {
      Messages.showErrorDialog(myEditorContext.getProject(),OsmorcBundle.message("facet.editor.jar.cannot.be.in.output.path"),OsmorcBundle.message("error"));
      myJarOutputPathChooser.setText("");
      return;
    }
    myJarOutputPathChooser.setText(file.getPath());
  }
}
