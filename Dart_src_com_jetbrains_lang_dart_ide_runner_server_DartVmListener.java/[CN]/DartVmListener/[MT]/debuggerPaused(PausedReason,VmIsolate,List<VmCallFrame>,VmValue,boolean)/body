{
  LOG.debug("debugger paused, reason: " + reason.name());
  final VmCallFrame topFrame=frames.isEmpty() ? null : frames.get(0);
  final XLineBreakpoint<?> breakpoint;
  if (isolate.isFirstBreak()) {
    isolate.setFirstBreak(false);
    myDebugProcess.isolateCreated(isolate);
    final VmLocation vmLocation=topFrame == null ? null : topFrame.getLocation();
    breakpoint=myBreakpointsHandler.handleIsolateCreatedAndReturnBreakpointAtPosition(isolate,vmLocation);
    if (PausedReason.breakpoint == reason && breakpoint == null) {
      resume(isolate);
      return;
    }
  }
 else   if (PausedReason.breakpoint == reason && !isStepping && topFrame != null) {
    breakpoint=myBreakpointsHandler.getBreakpointForLocation(topFrame.getLocation());
  }
 else {
    breakpoint=null;
  }
  if (breakpoint != null) {
    if ("false".equals(evaluateExpression(isolate,topFrame,breakpoint.getConditionExpression()))) {
      resume(isolate);
      return;
    }
    final boolean suspend=myDebugProcess.getSession().breakpointReached(breakpoint,evaluateExpression(isolate,topFrame,breakpoint.getLogExpressionObject()),new DartSuspendContext(myDebugProcess,isolate,frames,exception));
    if (suspend) {
      myDebugProcess.isolateSuspended(isolate);
    }
 else {
      resume(isolate);
    }
    return;
  }
  final DartSuspendContext suspendContext=new DartSuspendContext(myDebugProcess,isolate,frames,exception);
  myDebugProcess.getSession().positionReached(suspendContext);
  myDebugProcess.isolateSuspended(isolate);
  suspendContext.selectUpperNavigatableStackFrame(myDebugProcess.getSession());
}
