{
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      boolean insideContentRoots=ProjectRootUtils.isInsideContentRoots(myProject,myExtractDirectory);
      if (insideContentRoots) {
        return;
      }
      String libraryName=myJsLibraryNameTextField.getText();
      ScriptingLibraryModel libraryModel=myJsLibraryHelper.createJsLibrary(libraryName,extractedAdapterSourceFiles);
      String dialogTitle="Adding " + myAssertionFrameworkName + " adapter support for JsTestDriver";
      if (libraryModel == null) {
        Messages.showErrorDialog("Unable to create '" + libraryName + "' JavaScript library",dialogTitle);
        return;
      }
      VirtualFile projectRootDir=myProject.getBaseDir();
      if (projectRootDir == null) {
        LOG.error("Project baseDir is null!");
        return;
      }
      boolean associated=myJsLibraryHelper.associateLibraryWithDir(libraryModel,projectRootDir);
      if (!associated) {
        Messages.showErrorDialog("Unable to associate '" + libraryName + "' JavaScript library with project",dialogTitle);
      }
    }
  }
);
}
