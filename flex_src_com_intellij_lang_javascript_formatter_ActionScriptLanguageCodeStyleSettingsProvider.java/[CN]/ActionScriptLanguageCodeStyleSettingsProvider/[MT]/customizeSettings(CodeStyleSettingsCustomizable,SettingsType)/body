{
  if (settingsType == SettingsType.SPACING_SETTINGS) {
    consumer.showStandardOptions(JSLanguageCodeStyleSettingsProvider.STANDARD_SPACING_OPTIONS);
    consumer.showCustomOption(ECMA4CodeStyleSettings.class,"SPACE_BEFORE_PROPERTY_COLON",JSBundle.message("space.before.name.value.separator"),CodeStyleSettingsCustomizable.SPACES_OTHER);
    consumer.showCustomOption(ECMA4CodeStyleSettings.class,"SPACE_AFTER_PROPERTY_COLON",JSBundle.message("space.after.name.value.separator"),CodeStyleSettingsCustomizable.SPACES_OTHER);
    consumer.showCustomOption(ECMA4CodeStyleSettings.class,"SPACE_AFTER_DOTS_IN_REST_PARAMETER",JSBundle.message("space.after.dots.in.rest.parameter"),CodeStyleSettingsCustomizable.SPACES_OTHER);
    consumer.showCustomOption(JSCodeStyleSettings.class,"SPACE_BEFORE_FUNCTION_LEFT_PARENTH",JSBundle.message("space.before.function.left.parenth"),CodeStyleSettingsCustomizable.SPACES_BEFORE_PARENTHESES);
    consumer.showCustomOption(ECMA4CodeStyleSettings.class,"SPACE_BEFORE_TYPE_COLON",JSBundle.message("space.before.type.colon"),CodeStyleSettingsCustomizable.SPACES_OTHER);
    consumer.showCustomOption(ECMA4CodeStyleSettings.class,"SPACE_AFTER_TYPE_COLON",JSBundle.message("space.after.type.colon"),CodeStyleSettingsCustomizable.SPACES_OTHER);
  }
 else   if (settingsType == SettingsType.BLANK_LINES_SETTINGS) {
    List<String> blankLinesOptions=new ArrayList<String>();
    blankLinesOptions.addAll(Arrays.asList(JSLanguageCodeStyleSettingsProvider.STANDARD_BLANK_LINES_OPTIONS));
    blankLinesOptions.addAll(Arrays.asList("BLANK_LINES_AFTER_IMPORTS","BLANK_LINES_BEFORE_IMPORTS","BLANK_LINES_AROUND_METHOD","KEEP_BLANK_LINES_IN_CODE","BLANK_LINES_BEFORE_PACKAGE","BLANK_LINES_AFTER_PACKAGE"));
    consumer.showStandardOptions(ArrayUtil.toStringArray(blankLinesOptions));
  }
 else   if (settingsType == SettingsType.WRAPPING_AND_BRACES_SETTINGS) {
    List<String> wrappingOptions=new ArrayList<String>();
    wrappingOptions.addAll(Arrays.asList(JSLanguageCodeStyleSettingsProvider.STANDARD_WRAPPING_OPTIONS));
    wrappingOptions.addAll(Arrays.asList("CLASS_BRACE_STYLE","EXTENDS_LIST_WRAP","ALIGN_MULTILINE_EXTENDS_LIST","EXTENDS_KEYWORD_WRAP"));
    consumer.showStandardOptions(ArrayUtil.toStringArray(wrappingOptions));
    consumer.renameStandardOption("ARRAY_INITIALIZER_LBRACE_ON_NEXT_LINE",JSBundle.message("js.array.new.line.after.left.bracket"));
    consumer.renameStandardOption("ARRAY_INITIALIZER_RBRACE_ON_NEXT_LINE",JSBundle.message("js.array.new.line.before.right.bracket"));
  }
 else   if (settingsType == SettingsType.LANGUAGE_SPECIFIC) {
    consumer.showStandardOptions("LINE_COMMENT_AT_FIRST_COLUMN");
  }
}
