{
switch (bc.getTargetPlatform()) {
case Web:
    final String urlOrPath=runnerParameters.isLaunchUrl() ? runnerParameters.getUrl() : bc.isUseHtmlWrapper() ? PathUtil.getParentPath(bc.getActualOutputFilePath()) + "/" + BCUtils.getWrapperFileName(bc) : bc.getActualOutputFilePath();
  launchWithSelectedApplication(urlOrPath,runnerParameters.getLauncherParameters());
break;
case Desktop:
return standardLaunch(module.getProject(),executor,state,contentToReuse,environment);
case Mobile:
switch (runnerParameters.getMobileRunTarget()) {
case Emulator:
return standardLaunch(module.getProject(),executor,state,contentToReuse,environment);
case AndroidDevice:
final String androidAppId=getApplicationId(getAirDescriptorPath(bc,bc.getAndroidPackagingOptions()));
if (packAndInstallToAndroidDevice(module,bc,runnerParameters,androidAppId,false)) {
launchOnAndroidDevice(module.getProject(),bc.getSdk(),androidAppId,false);
}
return null;
case iOSSimulator:
final String iosAppId=getApplicationId(getAirDescriptorPath(bc,bc.getIosPackagingOptions()));
if (packAndInstallToIOSSimulator(module,bc,runnerParameters,iosAppId,false)) {
launchOnIosSimulator(module.getProject(),bc.getSdk(),iosAppId,runnerParameters.getIOSSimulatorSdkPath(),false);
}
return null;
}
break;
}
return null;
}
