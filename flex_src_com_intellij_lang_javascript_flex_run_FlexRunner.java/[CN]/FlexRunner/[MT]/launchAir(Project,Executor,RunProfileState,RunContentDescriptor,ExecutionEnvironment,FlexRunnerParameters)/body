{
  final ExecutionResult executionResult;
  if (flexRunnerParameters instanceof FlexUnitRunnerParameters) {
    final SwfPolicyFileConnection policyFileConnection=new SwfPolicyFileConnection();
    final FlexUnitRunnerParameters params=(FlexUnitRunnerParameters)flexRunnerParameters;
    policyFileConnection.open(params.getSocketPolicyPort());
    final FlexUnitConnection flexUnitConnection=new FlexUnitConnection();
    flexUnitConnection.open(params.getPort());
    executionResult=state.execute(executor,this);
    if (executionResult == null) {
      flexUnitConnection.close();
      policyFileConnection.close();
      return null;
    }
    flexUnitConnection.addListener(new FlexUnitListener(executionResult.getProcessHandler()));
    executionResult.getProcessHandler().addProcessListener(new ProcessAdapter(){
      @Override public void processWillTerminate(      ProcessEvent event,      boolean willBeDestroyed){
        flexUnitConnection.write("Finish");
      }
      @Override public void processTerminated(      ProcessEvent event){
        flexUnitConnection.close();
        policyFileConnection.close();
      }
    }
);
  }
 else {
    executionResult=state.execute(executor,this);
    if (executionResult == null)     return null;
  }
  final RunContentBuilder contentBuilder=new RunContentBuilder(project,this,executor);
  contentBuilder.setExecutionResult(executionResult);
  contentBuilder.setEnvironment(env);
  return contentBuilder.showRunContent(contentToReuse);
}
