{
  final ExecutionResult executionResult;
  final SwfPolicyFileConnection policyFileConnection=new SwfPolicyFileConnection();
  policyFileConnection.open(params.getSocketPolicyPort());
  final FlexUnitConnection flexUnitConnection=new FlexUnitConnection();
  flexUnitConnection.open(params.getPort());
  executionResult=state.execute(executor,this);
  if (executionResult == null) {
    flexUnitConnection.close();
    policyFileConnection.close();
    return null;
  }
  flexUnitConnection.addListener(new FlexUnitListener(executionResult.getProcessHandler()));
  executionResult.getProcessHandler().addProcessListener(new ProcessAdapter(){
    @Override public void processWillTerminate(    ProcessEvent event,    boolean willBeDestroyed){
      flexUnitConnection.write("Finish");
    }
    @Override public void processTerminated(    ProcessEvent event){
      flexUnitConnection.close();
      policyFileConnection.close();
    }
  }
);
  final RunContentBuilder contentBuilder=new RunContentBuilder(project,this,executor,executionResult,env);
  return contentBuilder.showRunContent(contentToReuse);
}
