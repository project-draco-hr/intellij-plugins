{
  final SwfPolicyFileConnection policyFileConnection=new SwfPolicyFileConnection();
  policyFileConnection.open(params.getSocketPolicyPort());
  final FlexUnitConnection flexUnitConnection=new FlexUnitConnection();
  flexUnitConnection.open(params.getPort());
  final ProcessHandler processHandler=new DefaultDebugProcessHandler(){
    @Override protected void destroyProcessImpl(){
      flexUnitConnection.write("Finish");
      flexUnitConnection.close();
      policyFileConnection.close();
      super.destroyProcessImpl();
    }
    @Override public boolean detachIsDefault(){
      return false;
    }
  }
;
  final ExecutionConsole console=createFlexUnitRunnerConsole(project,env,processHandler,executor);
  flexUnitConnection.addListener(new FlexUnitListener(processHandler));
  launchWithSelectedApplication(swfFilePath,params.getLauncherParameters());
  final RunContentBuilder contentBuilder=new RunContentBuilder(project,this,executor);
  contentBuilder.setExecutionResult(new DefaultExecutionResult(console,processHandler));
  contentBuilder.setEnvironment(env);
  Disposer.register(project,contentBuilder);
  return contentBuilder.showRunContent(contentToReuse);
}
