{
  PsiFile activatorClassFile=TestUtil.loadPsiFile(myFixture.getProject(),"t1","t1/Activator.java");
  OsmorcFacet facet=OsmorcFacet.getInstance(activatorClassFile);
  assertNotNull(facet);
  final OsmorcFacetConfiguration configuration=facet.getConfiguration();
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      configuration.setManifestGenerationMode(OsmorcFacetConfiguration.ManifestGenerationMode.OsmorcControlled);
      configuration.setBundleActivator("t1.Activator");
    }
  }
);
  final PsiClass activatorClass=PsiTreeUtil.getChildOfType(activatorClassFile,PsiClass.class);
  CommandProcessor.getInstance().executeCommand(myFixture.getProject(),new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          ModuleRootManager rootManager=TestUtil.getModuleRootManager(myFixture.getProject(),"t1");
          JavaRefactoringFactory factory=JavaRefactoringFactory.getInstance(myFixture.getProject());
          MoveDestination moveDestination=factory.createSourceRootMoveDestination("tx",rootManager.getSourceRoots()[0]);
          factory.createMoveClassesOrPackages(new PsiElement[]{activatorClass},moveDestination).run();
        }
      }
);
    }
  }
,"test","testid");
  assertThat(configuration.getBundleActivator(),equalTo("tx.Activator"));
}
