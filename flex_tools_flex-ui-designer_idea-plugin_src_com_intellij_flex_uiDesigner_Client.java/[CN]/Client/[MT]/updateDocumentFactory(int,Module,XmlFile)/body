{
  boolean hasError=true;
  final ProblemsHolder problemsHolder=new ProblemsHolder();
  try {
    beginMessage(ClientMethod.updateDocumentFactory);
    writeId(module);
    out.writeShort(factoryId);
    RequiredAssetsInfo requiredAssetsInfo=new RequiredAssetsInfo();
    writeDocumentFactory(module,psiFile,problemsHolder,requiredAssetsInfo);
    beginMessage(ClientMethod.updateDocuments);
    writeId(module);
    out.writeShort(factoryId);
    hasError=false;
  }
 catch (  Throwable e) {
    problemsHolder.add(e,psiFile.getVirtualFile());
  }
 finally {
    if (hasError) {
      blockOut.rollback();
    }
  }
  if (!problemsHolder.isEmpty()) {
    DocumentProblemManager.getInstance().report(module.getProject(),problemsHolder);
  }
}
