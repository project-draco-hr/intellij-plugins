{
  MxmlWriter.Result result=mxmlWriter.write(psiFile);
  if (result.problems != null) {
    StringBuilder builder=StringBuilderSpinAllocator.alloc();
    FlexUIDesignerApplicationManager.appendTitle(builder);
    try {
      builder.append("<ul>");
      for (      String problem : result.problems) {
        builder.append("<li>").append(problem).append("</li>");
      }
      builder.append("</ul></html>");
      FlexUIDesignerApplicationManager.getInstance().reportProblem(module.getProject(),builder.toString());
    }
  finally {
      StringBuilderSpinAllocator.dispose(builder);
    }
  }
  if (result.subDocuments != null) {
    for (    XmlFile subDocument : result.subDocuments) {
      Module moduleForFile=ModuleUtil.findModuleForFile(virtualFile,psiFile.getProject());
      if (module != moduleForFile) {
        FlexUIDesignerApplicationManager.LOG.error("Currently, support subdocument only from current module");
      }
      registerDocumentFactoryIfNeed(module,subDocument,documentFileManager,true);
    }
  }
}
