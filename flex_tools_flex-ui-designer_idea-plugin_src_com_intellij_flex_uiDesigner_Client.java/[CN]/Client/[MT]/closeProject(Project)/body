{
  boolean hasError=true;
  try {
    beginMessage(ClientMethod.closeProject);
    writeId(project);
    hasError=false;
  }
  finally {
    registeredProjects.remove(project);
    if (registeredProjects.isEmpty()) {
      registeredModules.clear();
    }
 else {
      registeredModules.remove(new TObjectProcedure<Module>(){
        @Override public boolean execute(        Module module){
          return module.getProject() == project;
        }
      }
);
    }
    if (hasError) {
      blockOut.rollback();
    }
 else {
      out.flush();
    }
  }
}
