{
  MojoExecution flexmojosMojoExecution=null;
  MojoExecution flexmojosGeneratorMojoExecution=null;
  for (  Plugin plugin : project.getBuildPlugins()) {
    if (plugin.getGroupId().equals("org.sonatype.flexmojos")) {
      if (flexmojosMojoExecution == null && plugin.getArtifactId().equals("flexmojos-maven-plugin")) {
        flexmojosMojoExecution=createMojoExecution(plugin,"compile-" + project.getPackaging(),project);
      }
 else       if (flexmojosGeneratorMojoExecution == null && plugin.getArtifactId().equals("flexmojos-generator-mojo")) {
        flexmojosGeneratorMojoExecution=createMojoExecution(plugin,"generate",project);
      }
      if (flexmojosMojoExecution != null && flexmojosGeneratorMojoExecution != null) {
        break;
      }
    }
  }
  if (flexmojosMojoExecution == null) {
    return;
  }
  ClassRealm flexmojosPluginRealm=pluginManager.getPluginRealm(session,flexmojosMojoExecution.getMojoDescriptor().getPluginDescriptor());
  flexmojosPluginRealm.addURL(new URL("file:///Users/develar/Documents/idea/flex/lib/flexmojos-idea-configurator.jar"));
  flexmojosPluginRealm.importFrom(getClass().getClassLoader(),"com.intellij.flex.maven.FlexConfigGenerator");
  flexmojosPluginRealm.importFrom(getClass().getClassLoader(),"com.intellij.flex.maven.Utils");
  Mojo mojo=null;
  try {
    mojo=mavenPluginManager.getConfiguredMojo(Mojo.class,session,flexmojosMojoExecution);
    for (    String configuratorClassName : configurators) {
      Class configuratorClass=flexmojosPluginRealm.loadClass(configuratorClassName);
      FlexConfigGenerator configurator=(FlexConfigGenerator)configuratorClass.getConstructor(MavenSession.class,File.class).newInstance(session,null);
      configurator.preGenerate(project,getClassifier(mojo),flexmojosGeneratorMojoExecution);
      if ("swc".equals(project.getPackaging())) {
        configurator.generate(mojo);
      }
 else {
        configurator.generate(mojo,getSourceFileForSwf(mojo));
      }
      configurator.postGenerate(project);
    }
  }
  finally {
    mavenPluginManager.releaseMojo(mojo,mojoExecution);
  }
}
