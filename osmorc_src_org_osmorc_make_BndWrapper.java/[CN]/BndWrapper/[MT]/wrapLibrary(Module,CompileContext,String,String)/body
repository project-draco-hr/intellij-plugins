{
  String messagePrefix="[" + module.getName() + "] ";
  try {
    File targetDir=new File(outputPath);
    File sourceFile=new File(VfsUtil.urlToPath(sourceJarUrl));
    if (!sourceFile.exists()) {
      compileContext.addMessage(CompilerMessageCategory.WARNING,messagePrefix + "The library " + sourceFile.getPath()+ " does not exist. Please check your module settings. Ignoring missing library.",null,0,0);
      return null;
    }
    if (sourceFile.isDirectory()) {
      return null;
    }
    File targetFile=new File(targetDir.getPath() + File.separator + sourceFile.getName());
    Map<String,String> additionalProperties=new HashMap<String,String>();
    long lastModified=Long.MIN_VALUE;
    ApplicationSettings settings=ServiceManager.getService(ApplicationSettings.class);
    for (    LibraryBundlificationRule bundlificationRule : settings.getLibraryBundlificationRules()) {
      if (bundlificationRule.appliesTo(sourceFile.getName())) {
        if (bundlificationRule.isDoNotBundle()) {
          return null;
        }
        additionalProperties.putAll(bundlificationRule.getAdditionalPropertiesMap());
        lastModified=Math.max(lastModified,bundlificationRule.getLastModified());
        if (bundlificationRule.isStopAfterThisRule()) {
          break;
        }
      }
    }
    if (!targetFile.exists() || targetFile.lastModified() < sourceFile.lastModified() || targetFile.lastModified() < lastModified) {
      if (doWrap(module,compileContext,sourceFile,targetFile,additionalProperties)) {
        return VfsUtil.pathToUrl(targetFile.getCanonicalPath());
      }
    }
 else {
      return VfsUtil.pathToUrl(targetFile.getCanonicalPath());
    }
  }
 catch (  final Exception e) {
    compileContext.addMessage(CompilerMessageCategory.WARNING,MessageFormat.format(messagePrefix + "There was an unexpected problem when trying to bundlify {0}: {1}",sourceJarUrl,StacktraceUtil.stackTraceToString(e)),null,0,0);
  }
  return null;
}
