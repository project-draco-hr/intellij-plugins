{
  if (myExtension.isUseBndFile()) {
    String fileLocation=myExtension.getBndFileLocation();
    File bndFile=myExtension.findFileInModuleContentRoots(fileLocation);
    if (bndFile != null && bndFile.canRead()) {
      return bndFile;
    }
 else {
      throw new OsmorcBuildException("The bnd file for the module does not exist",fileLocation);
    }
  }
  Map<String,String> buildProperties=new LinkedHashMap<String,String>();
  if (myExtension.isManifestManuallyEdited() || myExtension.isOsmorcControlsManifest()) {
    if (myExtension.isOsmorcControlsManifest()) {
      buildProperties.putAll(myExtension.getBndFileProperties());
    }
 else     if (myExtension.isManifestManuallyEdited()) {
      File manifestFile=myExtension.getManifestFile();
      if (manifestFile == null) {
        throw new OsmorcBuildException("Manifest file for the module does not exist or cannot be found. Check that file exists and is not excluded from the module",myExtension.getManifestLocation());
      }
      buildProperties.put("-manifest",manifestFile.getAbsolutePath());
    }
    StringBuilder pathBuilder=new StringBuilder();
    pathBuilder.append(myModuleOutputDir.getPath());
    for (    OsmorcJarContentEntry contentEntry : myExtension.getAdditionalJARContents()) {
      if (pathBuilder.length() > 0)       pathBuilder.append(",");
      pathBuilder.append(contentEntry.myDestination).append(" = ").append(contentEntry.mySource);
    }
    StringBuilder includedResources=new StringBuilder();
    if (!myExtension.isManifestManuallyEdited()) {
      String resources=myExtension.getAdditionalPropertiesAsMap().get("Include-Resource");
      if (resources != null) {
        includedResources.append(resources).append(",").append(pathBuilder);
      }
 else {
        includedResources.append(pathBuilder);
      }
    }
 else {
      includedResources.append(pathBuilder);
    }
    buildProperties.put("Include-Resource",includedResources.toString());
    if (!myExtension.getIgnoreFilePattern().isEmpty()) {
      if (!myExtension.isIgnorePatternValid()) {
        throw new OsmorcBuildException("The file ignore pattern in the facet configuration is invalid");
      }
      buildProperties.put("-donotcopy",myExtension.getIgnoreFilePattern());
    }
    if (myExtension.isOsmorcControlsManifest()) {
      progressMessage("Calculating local packages");
      LocalPackageCollector.addLocalPackages(myModuleOutputDir,buildProperties);
    }
  }
 else   if (!myExtension.isUseBundlorFile()) {
    throw new OsmorcBuildException("OSGi facet configuration for the module seems to be invalid. " + "No supported manifest handling method is set up. Please check configuration and try again.");
  }
  return myBndWrapper.makeBndFile(buildProperties);
}
