{
  PsiElement childByType=findChildByType(CfmlElementTypes.COMPONENT_REFERENCE);
  if (childByType == null) {
    CfmlStringLiteralExpression childrenByClass=findChildByClass(CfmlStringLiteralExpression.class);
    if (childrenByClass != null) {
      childByType=childrenByClass.getValueElement();
    }
  }
  if (childByType != null) {
    ASTNode node=childByType.getNode();
    if (node != null) {
      return new CfmlComponentReference(node,this){
        @NotNull @Override public ResolveResult[] multiResolve(        boolean incompleteCode){
          ResolveResult[] resolveResults=super.multiResolve(incompleteCode);
          List<CfmlFunction> result=new LinkedList<CfmlFunction>();
          for (          ResolveResult resolveResult : resolveResults) {
            PsiElement element=resolveResult.getElement();
            if (element instanceof CfmlComponent) {
              CfmlComponent component=(CfmlComponent)element;
              CfmlFunction[] functions=component.getFunctions();
              for (              CfmlFunction function : functions) {
                if ("init".equalsIgnoreCase(function.getName())) {
                  result.add(function);
                }
              }
            }
          }
          return CfmlResolveResult.create(result);
        }
      }
;
    }
  }
  return null;
}
