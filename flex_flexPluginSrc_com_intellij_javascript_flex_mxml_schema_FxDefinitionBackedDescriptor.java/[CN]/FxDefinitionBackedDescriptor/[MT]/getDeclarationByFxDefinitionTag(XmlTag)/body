{
  if (!xmlTag.isValid() || xmlTag.getParent() instanceof XmlDocument) {
    return null;
  }
  XmlTag rootTag=xmlTag;
  XmlTag parent;
  while ((parent=rootTag.getParentTag()) != null) {
    rootTag=parent;
  }
  final XmlTag[] subTags=rootTag.getSubTags();
  final XmlTag libraryTag=subTags.length > 0 && FlexPredefinedTagNames.LIBRARY.equals(subTags[0].getLocalName()) && JavaScriptSupportLoader.MXML_URI3.equals(subTags[0].getNamespace()) ? subTags[0] : null;
  final XmlTag[] definitionTags=libraryTag == null ? XmlTag.EMPTY : libraryTag.findSubTags(CodeContext.DEFINITION_TAG_NAME,JavaScriptSupportLoader.MXML_URI3);
  final String localName=xmlTag.getLocalName();
  for (  final XmlTag definitionTag : definitionTags) {
    final XmlAttribute nameAttribute=definitionTag.getAttribute(MxmlLanguageTagsUtil.NAME_ATTRIBUTE);
    final XmlAttributeValue attributeValue=nameAttribute == null ? null : nameAttribute.getValueElement();
    if (attributeValue != null && localName.equals(attributeValue.getValue())) {
      return attributeValue;
    }
  }
  return null;
}
