{
  final String filePath=FileUtil.toSystemDependentName(_filePath);
  final Ref<SourceFileEdit> resultRef=new Ref<>();
  final AnalysisServer server=myServer;
  if (server == null)   return null;
  final CountDownLatch latch=new CountDownLatch(1);
  server.edit_sortMembers(filePath,new SortMembersConsumer(){
    @Override public void computedEdit(    final SourceFileEdit edit){
      resultRef.set(edit);
      latch.countDown();
    }
    @Override public void onError(    final RequestError error){
      if (RequestErrorCode.SORT_MEMBERS_PARSE_ERRORS.equals(error.getCode()) || RequestErrorCode.SORT_MEMBERS_INVALID_FILE.equals(error.getCode())) {
        LOG.info(getShortErrorMessage("edit_sortMembers()",filePath,error));
      }
 else {
        logError("edit_sortMembers()",filePath,error);
      }
      latch.countDown();
    }
  }
);
  awaitForLatchCheckingCanceled(server,latch,EDIT_SORT_MEMBERS_TIMEOUT);
  if (latch.getCount() > 0) {
    LOG.info("edit_sortMembers() took too long for file " + filePath);
  }
  return resultRef.get();
}
