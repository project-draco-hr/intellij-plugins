{
  final String filePath=FileUtil.toSystemDependentName(file.getPath());
  final Ref<FormatResult> resultRef=new Ref<>();
  final AnalysisServer server=myServer;
  if (server == null)   return null;
  final CountDownLatch latch=new CountDownLatch(1);
  final int selectionOffset=getOriginalOffset(file,_selectionOffset);
  final int selectionLength=getOriginalOffset(file,_selectionOffset + _selectionLength) - selectionOffset;
  server.edit_format(filePath,selectionOffset,selectionLength,lineLength,new FormatConsumer(){
    @Override public void computedFormat(    final List<SourceEdit> edits,    final int selectionOffset,    final int selectionLength){
      resultRef.set(new FormatResult(edits,selectionOffset,selectionLength));
      latch.countDown();
    }
    @Override public void onError(    final RequestError error){
      if (RequestErrorCode.FORMAT_WITH_ERRORS.equals(error.getCode()) || RequestErrorCode.FORMAT_INVALID_FILE.equals(error.getCode())) {
        LOG.info(getShortErrorMessage("edit_format()",filePath,error));
      }
 else {
        logError("edit_format()",filePath,error);
      }
      latch.countDown();
    }
  }
);
  awaitForLatchCheckingCanceled(server,latch,EDIT_FORMAT_TIMEOUT);
  if (latch.getCount() > 0) {
    LOG.info("edit_format() took too long for file " + filePath);
  }
  return resultRef.get();
}
