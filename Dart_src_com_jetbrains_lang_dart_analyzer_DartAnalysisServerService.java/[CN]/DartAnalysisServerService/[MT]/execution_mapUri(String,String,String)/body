{
  if ((_filePath == null && _uri == null) || (_filePath != null && _uri != null)) {
    LOG.error("One of _filePath and _uri must be non-null.");
    return null;
  }
  final String filePath=_filePath != null ? FileUtil.toSystemDependentName(_filePath) : null;
  final Ref<String> resultRef=new Ref<String>();
  final AnalysisServer server=myServer;
  if (server == null)   return null;
  final CountDownLatch latch=new CountDownLatch(1);
  server.execution_mapUri(_id,filePath,_uri,new MapUriConsumer(){
    @Override public void computedFileOrUri(    final String file,    final String uri){
      if (uri != null) {
        resultRef.set(uri);
      }
 else {
        resultRef.set(file);
      }
      latch.countDown();
    }
    @Override public void onError(    final RequestError error){
      LOG.warn("execution_mapUri(" + _id + ", "+ filePath+ ", "+ _uri+ ") returned error "+ error.getCode()+ ": "+ error.getMessage());
      latch.countDown();
    }
  }
);
  awaitForLatchCheckingCanceled(server,latch,EXECUTION_MAP_URI_TIMEOUT);
  if (latch.getCount() > 0) {
    LOG.info("execution_mapUri() took too long for contextID " + _id + " and file or uri "+ (filePath != null ? filePath : _uri));
    return null;
  }
  if (_uri != null && !resultRef.isNull()) {
    return FileUtil.toSystemIndependentName(resultRef.get());
  }
  return resultRef.get();
}
