{
  final DartSdk sdk=DartSdk.getGlobalDartSdk();
  if (sdk == null) {
    LOG.error("No SDK");
    return;
  }
  final String sdkPath=ApplicationManager.getApplication().isUnitTestMode() ? System.getProperty("dart.sdk") : sdk.getHomePath();
  final String runtimePath=sdkPath + "/bin/dart";
  final String analysisServerPath=sdkPath + "/bin/snapshots/analysis_server.dart.snapshot";
  final DebugPrintStream debugStream=new DebugPrintStream(){
    @Override public void println(    String str){
    }
  }
;
  final StdioServerSocket serverSocket;
  if (!ApplicationManager.getApplication().isInternal()) {
    serverSocket=new StdioServerSocket(runtimePath,analysisServerPath,null,debugStream,new String[]{},false,false,0,false);
  }
 else {
    int availablePort=10000;
    try {
      availablePort=NetUtils.findAvailableSocketPort();
    }
 catch (    IOException e) {
      LOG.error(e.getMessage(),e);
    }
    LOG.debug("Go to http://localhost:" + availablePort + "/status to see status of analysis server");
    serverSocket=new StdioServerSocket(runtimePath,analysisServerPath,null,debugStream,new String[]{"--port=" + availablePort},false,false,0,false);
  }
  myServer=new RemoteAnalysisServerImpl(serverSocket);
  try {
    myServer.start();
  }
 catch (  Exception e) {
    LOG.debug(e.getMessage(),e);
  }
  setAnalysisRoots(ProjectManager.getInstance().getOpenProjects());
  setOptions();
  myServer.addAnalysisServerListener(myListener);
}
