{
  final VirtualFile vFile=DartResolveUtil.getRealVirtualFile(psiFile);
  if (vFile == null)   return null;
  final Ref<AnalysisError[]> resultError=new Ref<AnalysisError[]>();
  final Semaphore semaphore=new Semaphore();
  semaphore.down();
  try {
    final String path=FileUtil.toSystemDependentName(vFile.getPath());
    myServer.analysis_getErrors(path,new GetErrorsConsumer(){
      @Override public void computedErrors(      final AnalysisError[] errors){
        if (semaphore.tryUp()) {
          resultError.set(errors);
        }
 else {
          LOG.info("analysis_getErrors() took too long for file " + path + ", restarting daemon");
          ApplicationManager.getApplication().runReadAction(new Runnable(){
            @Override public void run(){
              final Project project=psiFile.isValid() ? psiFile.getProject() : null;
              if (project != null && !project.isDisposed()) {
                DaemonCodeAnalyzer.getInstance(project).restart(psiFile);
              }
            }
          }
);
        }
      }
      @Override public void onError(      final RequestError error){
        semaphore.up();
        LOG.error("Error from analysis_getErrors() for file " + path + ", code="+ error.getCode()+ ": "+ error.getMessage());
      }
    }
);
    semaphore.waitFor(GET_ERRORS_TIMEOUT);
  }
  finally {
    semaphore.up();
  }
  return resultError.get();
}
