{
synchronized (myLock) {
    if (myServer != null) {
      LOG.debug("stopping server");
      myServer.removeAnalysisServerListener(myAnalysisServerListener);
      myServer.server_shutdown();
      long startTime=System.currentTimeMillis();
      while (myServerSocket != null && myServerSocket.isOpen()) {
        if (System.currentTimeMillis() - startTime > SEND_REQUEST_TIMEOUT) {
          myServerSocket.stop();
          break;
        }
        Uninterruptibles.sleepUninterruptibly(CHECK_CANCELLED_PERIOD,TimeUnit.MILLISECONDS);
      }
    }
    stopShowingServerProgress();
    myServerSocket=null;
    myServer=null;
    mySdkHome=null;
    myFilePathWithOverlaidContentToTimestamp.clear();
    myVisibleFiles.clear();
    myChangedDocuments.clear();
    myServerData.clearData();
    final List<Project> projects=new ArrayList<Project>(myRootsHandler.getTrackedProjects());
    myRootsHandler.reset();
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      @Override public void run(){
        clearAllErrors(projects);
      }
    }
,ModalityState.NON_MODAL);
  }
}
