{
  Disposer.register(ApplicationManager.getApplication(),new Disposable(){
    public void dispose(){
      stopServer();
    }
  }
);
  ApplicationManager.getApplication().getMessageBus().connect().subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER,new FileEditorManagerAdapter(){
    @Override public void fileOpened(    @NotNull final FileEditorManager source,    @NotNull final VirtualFile file){
      if (PubspecYamlUtil.PUBSPEC_YAML.equals(file.getName()) || file.getFileType() == DartFileType.INSTANCE) {
        DartSdkUpdateChecker.mayBeCheckForSdkUpdate(source.getProject());
      }
    }
    @Override public void fileClosed(    @NotNull final FileEditorManager source,    @NotNull final VirtualFile file){
      if (isDartOrHtmlFile(file)) {
        removePriorityFile(file);
      }
    }
  }
);
  EditorFactory.getInstance().getEventMulticaster().addDocumentListener(new DocumentAdapter(){
    @Override public void beforeDocumentChange(    DocumentEvent e){
      updateInformationFromServer(e);
    }
  }
);
}
