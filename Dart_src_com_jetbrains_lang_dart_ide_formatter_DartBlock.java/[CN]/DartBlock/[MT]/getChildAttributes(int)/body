{
  final IElementType elementType=myNode.getElementType();
  final DartBlock previousBlock=newIndex == 0 ? null : getSubDartBlocks().get(newIndex - 1);
  final IElementType previousType=previousBlock == null ? null : previousBlock.getNode().getElementType();
  if (previousType == LBRACE || previousType == LBRACKET) {
    return new ChildAttributes(Indent.getNormalIndent(),null);
  }
  if (previousType == RPAREN && STATEMENTS_WITH_OPTIONAL_BRACES.contains(elementType)) {
    return new ChildAttributes(Indent.getNormalIndent(),null);
  }
  if (previousType == COLON && (elementType == SWITCH_CASE || elementType == DEFAULT_CASE)) {
    return new ChildAttributes(Indent.getNormalIndent(),null);
  }
  if (previousType == SWITCH_CASE || previousType == DEFAULT_CASE) {
    if (previousBlock != null) {
      final List<DartBlock> subBlocks=previousBlock.getSubDartBlocks();
      if (!subBlocks.isEmpty()) {
        final DartBlock lastChildInPrevBlock=subBlocks.get(subBlocks.size() - 1);
        final List<DartBlock> subSubBlocks=lastChildInPrevBlock.getSubDartBlocks();
        if (isLastTokenInSwitchCase(subSubBlocks)) {
          return new ChildAttributes(Indent.getNormalIndent(),null);
        }
      }
    }
    final int indentSize=mySettings.getIndentSize(DartFileType.INSTANCE) * 2;
    return new ChildAttributes(Indent.getIndent(Indent.Type.SPACES,indentSize,false,false),null);
  }
  if (previousBlock == null) {
    return new ChildAttributes(Indent.getNoneIndent(),null);
  }
  if (!previousBlock.isIncomplete() && newIndex < getSubDartBlocks().size() && previousType != TokenType.ERROR_ELEMENT) {
    return new ChildAttributes(previousBlock.getIndent(),previousBlock.getAlignment());
  }
  if (myParent instanceof DartBlock && ((DartBlock)myParent).isIncomplete()) {
    ASTNode child=myNode.getFirstChildNode();
    if (child == null || !(child.getElementType() == OPEN_QUOTE && child.getText().length() == 3)) {
      return new ChildAttributes(Indent.getContinuationIndent(),null);
    }
  }
  if (myParent == null && isIncomplete()) {
    return new ChildAttributes(Indent.getContinuationIndent(),null);
  }
  return new ChildAttributes(previousBlock.getIndent(),previousBlock.getAlignment());
}
