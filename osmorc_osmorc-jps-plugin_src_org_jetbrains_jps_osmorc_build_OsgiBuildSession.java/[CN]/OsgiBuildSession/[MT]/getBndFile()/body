{
  if (myExtension.isUseBndFile()) {
    String bndPath=myExtension.getBndFileLocation();
    File bndFile=OsgiBuildUtil.findFileInModuleContentRoots(myModule,bndPath);
    if (bndFile != null && bndFile.canRead()) {
      return bndFile;
    }
    throw new OsgiBuildException("Bnd file missing '" + bndPath + "' - please check OSGi facet settings.");
  }
  Map<String,String> buildProperties=new LinkedHashMap<String,String>();
  if (myExtension.isManifestManuallyEdited() || myExtension.isOsmorcControlsManifest()) {
    if (myExtension.isOsmorcControlsManifest()) {
      buildProperties.putAll(myExtension.getAdditionalProperties());
      buildProperties.put(Constants.BUNDLE_SYMBOLICNAME,myExtension.getBundleSymbolicName());
      buildProperties.put(Constants.BUNDLE_VERSION,myExtension.getBundleVersion());
      String activator=myExtension.getBundleActivator();
      if (!StringUtil.isEmptyOrSpaces(activator))       buildProperties.put(Constants.BUNDLE_ACTIVATOR,activator);
    }
 else {
      File manifestFile=myExtension.getManifestFile();
      if (manifestFile == null) {
        throw new OsgiBuildException("Manifest file '" + myExtension.getManifestLocation() + "' missing - please check OSGi facet settings.");
      }
      buildProperties.put("-manifest",manifestFile.getAbsolutePath());
    }
    StringBuilder pathBuilder=new StringBuilder();
    pathBuilder.append(myModuleOutputDir.getPath());
    for (    OsmorcJarContentEntry contentEntry : myExtension.getAdditionalJarContents()) {
      if (pathBuilder.length() > 0)       pathBuilder.append(",");
      pathBuilder.append(contentEntry.myDestination).append(" = ").append(contentEntry.mySource);
    }
    StringBuilder includedResources=new StringBuilder();
    if (!myExtension.isManifestManuallyEdited()) {
      String resources=myExtension.getAdditionalProperties().get("Include-Resource");
      if (resources != null)       includedResources.append(resources).append(',');
      includedResources.append(pathBuilder);
    }
 else {
      includedResources.append(pathBuilder);
    }
    buildProperties.put("Include-Resource",includedResources.toString());
    String pattern=myExtension.getIgnoreFilePattern();
    if (!StringUtil.isEmptyOrSpaces(pattern)) {
      try {
        Pattern.compile(pattern);
      }
 catch (      PatternSyntaxException e) {
        throw new OsgiBuildException("The file ignore pattern is invalid - please check OSGi facet settings.");
      }
      buildProperties.put("-donotcopy",pattern);
    }
    if (myExtension.isOsmorcControlsManifest()) {
      progress("Calculating local packages");
      LocalPackageCollector.addLocalPackages(myModuleOutputDir,buildProperties);
    }
  }
 else   if (!myExtension.isUseBundlorFile()) {
    throw new OsgiBuildException("Bundle creation method not specified - please check OSGi facet settings.");
  }
  String comment="Generated by IDEA for module '" + myModule.getName() + "' in project '"+ myModule.getProject().getName()+ "'";
  return myBndWrapper.makeBndFile(buildProperties,comment,myOutputDir);
}
