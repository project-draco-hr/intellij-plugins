{
  bundleManager=createMock(BundleManager.class);
  moduleRootManager=createMock(ModuleRootManager.class);
  application=createMock(Application.class);
  libraryHandler=createMock(LibraryHandler.class);
  modifiableRootModel=createMock(ModifiableRootModel.class);
  module=createMock(Module.class);
  osmorcFacetUtil=createMock(OsmorcFacetUtil.class);
  expect(moduleRootManager.getModule()).andReturn(module).anyTimes();
  module1=createMock(Module.class);
  module2=createMock(Module.class);
  module3=createMock(Module.class);
  module4=createMock(Module.class);
  library1=createMock(LibraryEx.class);
  library2=createMock(Library.class);
  library3=createMock(Library.class);
  library4=createMock(Library.class);
  moduleOrderEntry1=createMock(ModuleOrderEntry.class);
  expect(moduleOrderEntry1.getModule()).andReturn(module1).anyTimes();
  moduleOrderEntry2=createMock(ModuleOrderEntry.class);
  expect(moduleOrderEntry2.getModule()).andReturn(module2).anyTimes();
  libraryOrderEntry1=createMock(LibraryOrderEntry.class);
  expect(libraryOrderEntry1.getLibrary()).andReturn(library1).anyTimes();
  libraryOrderEntry2=createMock(LibraryOrderEntry.class);
  expect(libraryOrderEntry2.getLibrary()).andReturn(library2).anyTimes();
}
