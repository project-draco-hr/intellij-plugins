{
  _bundleManager=createMock(BundleManager.class);
  _moduleRootManager=createMock(ModuleRootManager.class);
  _application=createMock(Application.class);
  _libraryHandler=createMock(LibraryHandler.class);
  _modifiableRootModel=createMock(ModifiableRootModel.class);
  _module=createMock(Module.class);
  _osmorcFacetUtil=createMock(OsmorcFacetUtil.class);
  expect(_moduleRootManager.getModule()).andReturn(_module).anyTimes();
  _module1=createMock(Module.class);
  _module2=createMock(Module.class);
  _module3=createMock(Module.class);
  _module4=createMock(Module.class);
  _library1=createMock(Library.class);
  _library2=createMock(Library.class);
  _library3=createMock(Library.class);
  _library4=createMock(Library.class);
  _moduleOrderEntry1=createMock(ModuleOrderEntry.class);
  expect(_moduleOrderEntry1.getModule()).andReturn(_module1).anyTimes();
  _moduleOrderEntry2=createMock(ModuleOrderEntry.class);
  expect(_moduleOrderEntry2.getModule()).andReturn(_module2).anyTimes();
  _libraryOrderEntry1=createMock(LibraryOrderEntry.class);
  expect(_libraryOrderEntry1.getLibrary()).andReturn(_library1).anyTimes();
  _libraryOrderEntry2=createMock(LibraryOrderEntry.class);
  expect(_libraryOrderEntry2.getLibrary()).andReturn(_library2).anyTimes();
}
