{
  ModifiableRootModel modelMock=createMock(ModifiableRootModel.class);
  modelMock.removeOrderEntry(moduleOrderEntry1);
  modelMock.removeOrderEntry(libraryOrderEntry1);
  replay(bundleManager,moduleRootManager,application,libraryHandler,modifiableRootModel,module,osmorcFacetUtil,module1,module2,module3,module4,moduleOrderEntry1,moduleOrderEntry2,library1,library2,library3,library4,libraryOrderEntry1,libraryOrderEntry2,modelMock);
  List<OrderEntry> oldOrderEntries=new ArrayList<OrderEntry>();
  oldOrderEntries.add(moduleOrderEntry1);
  oldOrderEntries.add(libraryOrderEntry1);
  ModuleDependencySynchronizer testObject=new ModuleDependencySynchronizer(bundleManager,moduleRootManager,application,libraryHandler,osmorcFacetUtil);
  assertThat(testObject.removeObsoleteModuleDependencies(modelMock,oldOrderEntries),equalTo(true));
  assertThat(testObject.removeObsoleteModuleDependencies(modelMock,new ArrayList<OrderEntry>()),equalTo(false));
  verify(bundleManager,moduleRootManager,application,libraryHandler,modifiableRootModel,module,osmorcFacetUtil,module1,module2,module3,module4,moduleOrderEntry1,moduleOrderEntry2,library1,library2,library3,library4,libraryOrderEntry1,libraryOrderEntry2,modelMock);
}
