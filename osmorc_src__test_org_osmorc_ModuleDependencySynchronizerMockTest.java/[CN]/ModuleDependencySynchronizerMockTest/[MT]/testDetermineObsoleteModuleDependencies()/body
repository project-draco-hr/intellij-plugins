{
  replay(_bundleManager,_moduleRootManager,_application,_libraryHandler,_modifiableRootModel,_module,_osmorcFacetUtil,_module1,_module2,_module3,_module4,_moduleOrderEntry1,_moduleOrderEntry2,_library1,_library2,_library3,_library4,_libraryOrderEntry1,_libraryOrderEntry2);
  List<OrderEntry> oldOrderEntries=new ArrayList<OrderEntry>();
  oldOrderEntries.add(_moduleOrderEntry1);
  oldOrderEntries.add(_moduleOrderEntry2);
  oldOrderEntries.add(_libraryOrderEntry1);
  oldOrderEntries.add(_libraryOrderEntry2);
  List<Object> newBundles=new ArrayList<Object>();
  newBundles.add(_module1);
  newBundles.add(_library4);
  newBundles.add(_module3);
  newBundles.add(_module4);
  newBundles.add(_library2);
  newBundles.add(_library3);
  ModuleDependencySynchronizer testObject=new ModuleDependencySynchronizer(_bundleManager,_moduleRootManager,_application,_libraryHandler,_osmorcFacetUtil);
  List<OrderEntry> obsoleteEntries=testObject.determineObsoleteModuleDependencies(oldOrderEntries,newBundles);
  assertThat(obsoleteEntries.size(),equalTo(2));
  assertThat(obsoleteEntries,hasItem((OrderEntry)_moduleOrderEntry2));
  assertThat(obsoleteEntries,hasItem((OrderEntry)_libraryOrderEntry1));
  verify(_bundleManager,_moduleRootManager,_application,_libraryHandler,_modifiableRootModel,_module,_osmorcFacetUtil,_module1,_module2,_module3,_module4,_moduleOrderEntry1,_moduleOrderEntry2,_library1,_library2,_library3,_library4,_libraryOrderEntry1,_libraryOrderEntry2);
}
