{
  return new FacetEditorContext(){
    @NotNull public Project getProject(){
      return myProject;
    }
    @Nullable public Library findLibrary(    @NotNull final String name){
      return null;
    }
    @Nullable public ModuleBuilder getModuleBuilder(){
      return null;
    }
    @NotNull public Facet getFacet(){
      throw new UnsupportedOperationException();
    }
    @Nullable public Facet getParentFacet(){
      return null;
    }
    @NotNull public FacetsProvider getFacetsProvider(){
      throw new UnsupportedOperationException("'getFacetsProvider' not implemented in " + getClass().getName());
    }
    @NotNull public ModulesProvider getModulesProvider(){
      throw new UnsupportedOperationException("'getModulesProvider' not implemented in " + getClass().getName());
    }
    @NotNull public ModifiableRootModel getModifiableRootModel(){
      throw new UnsupportedOperationException();
    }
    @NotNull public ModuleRootModel getRootModel(){
      throw new UnsupportedOperationException();
    }
    public boolean isNewFacet(){
      return false;
    }
    @NotNull public Module getModule(){
      return myModule;
    }
    public Library[] getLibraries(){
      return new Library[0];
    }
    @Nullable public WizardContext getWizardContext(){
      return null;
    }
    public Library createProjectLibrary(    final String name,    final VirtualFile[] roots,    final VirtualFile[] sources){
      throw new UnsupportedOperationException("'createProjectLibrary' not implemented in " + getClass().getName());
    }
    public VirtualFile[] getLibraryFiles(    final Library library,    final OrderRootType rootType){
      return VirtualFile.EMPTY_ARRAY;
    }
    @NotNull public String getFacetName(){
      return "";
    }
    public <T>T getUserData(    @NotNull final Key<T> key){
      return null;
    }
    public <T>void putUserData(    @NotNull final Key<T> key,    final T value){
    }
  }
;
}
