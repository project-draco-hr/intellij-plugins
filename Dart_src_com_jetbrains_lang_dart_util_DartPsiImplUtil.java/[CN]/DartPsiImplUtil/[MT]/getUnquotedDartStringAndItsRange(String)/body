{
  final int startOffset;
  final int endOffset;
  if (quotedDartString.startsWith(TRIPLE_APOS)) {
    startOffset=TRIPLE_APOS.length();
    endOffset=quotedDartString.endsWith(TRIPLE_APOS) && quotedDartString.length() >= TRIPLE_APOS.length() * 2 ? quotedDartString.length() - TRIPLE_APOS.length() : quotedDartString.length();
  }
 else   if (quotedDartString.startsWith(TRIPLE_QUOTE)) {
    startOffset=TRIPLE_QUOTE.length();
    endOffset=quotedDartString.endsWith(TRIPLE_QUOTE) && quotedDartString.length() >= TRIPLE_QUOTE.length() * 2 ? quotedDartString.length() - TRIPLE_QUOTE.length() : quotedDartString.length();
  }
 else   if (quotedDartString.startsWith(APOS)) {
    startOffset=APOS.length();
    endOffset=quotedDartString.endsWith(APOS) && quotedDartString.length() >= APOS.length() * 2 ? quotedDartString.length() - APOS.length() : quotedDartString.length();
  }
 else   if (quotedDartString.startsWith(QUOTE)) {
    startOffset=QUOTE.length();
    endOffset=quotedDartString.endsWith(QUOTE) && quotedDartString.length() >= QUOTE.length() * 2 ? quotedDartString.length() - QUOTE.length() : quotedDartString.length();
  }
 else   if (quotedDartString.startsWith(R_TRIPLE_APOS)) {
    startOffset=R_TRIPLE_APOS.length();
    endOffset=quotedDartString.endsWith(TRIPLE_APOS) && quotedDartString.length() >= R_TRIPLE_APOS.length() + TRIPLE_APOS.length() ? quotedDartString.length() - TRIPLE_APOS.length() : quotedDartString.length();
  }
 else   if (quotedDartString.startsWith(R_TRIPLE_QUOTE)) {
    startOffset=R_TRIPLE_QUOTE.length();
    endOffset=quotedDartString.endsWith(TRIPLE_QUOTE) && quotedDartString.length() >= R_TRIPLE_QUOTE.length() + TRIPLE_QUOTE.length() ? quotedDartString.length() - TRIPLE_QUOTE.length() : quotedDartString.length();
  }
 else   if (quotedDartString.startsWith(R_APOS)) {
    startOffset=R_APOS.length();
    endOffset=quotedDartString.endsWith(APOS) && quotedDartString.length() >= R_APOS.length() + APOS.length() ? quotedDartString.length() - APOS.length() : quotedDartString.length();
  }
 else   if (quotedDartString.startsWith(R_QUOTE)) {
    startOffset=R_QUOTE.length();
    endOffset=quotedDartString.endsWith(QUOTE) && quotedDartString.length() >= R_QUOTE.length() + QUOTE.length() ? quotedDartString.length() - QUOTE.length() : quotedDartString.length();
  }
 else {
    startOffset=0;
    endOffset=quotedDartString.length();
  }
  return Pair.create(quotedDartString.substring(startOffset,endOffset),TextRange.create(startOffset,endOffset));
}
