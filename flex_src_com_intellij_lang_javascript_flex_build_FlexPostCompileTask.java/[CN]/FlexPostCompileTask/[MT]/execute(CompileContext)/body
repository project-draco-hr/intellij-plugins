{
  if (!CompilerWorkspaceConfiguration.getInstance(context.getProject()).useOutOfProcessBuild()) {
    return true;
  }
  try {
    final CompilerMessage[] infoMessages=context.getMessages(CompilerMessageCategory.INFORMATION);
    for (    final Pair<Module,FlexBuildConfiguration> moduleAndBC : FlexCompiler.getModulesAndBCsToCompile(context.getCompileScope())) {
      final String prefix="[" + FlexCompilationTask.getPresentableName(moduleAndBC.first,moduleAndBC.second) + "]";
      final List<String> ownMessages=filterOwnMessages(infoMessages,prefix);
      if (ownMessages.size() > 0 && ownMessages.get(ownMessages.size() - 1).endsWith(FlexCommonBundle.message("compilation.successful"))) {
        try {
          FlexCompilationUtils.performPostCompileActions(moduleAndBC.first,moduleAndBC.second,ownMessages);
        }
 catch (        FlexCompilerException e) {
          context.addMessage(CompilerMessageCategory.ERROR,e.getMessage(),e.getUrl(),e.getLine(),e.getColumn());
        }
      }
    }
  }
 catch (  ConfigurationException ignore) {
  }
  return true;
}
