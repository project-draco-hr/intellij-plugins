{
  PsiFile fromText=PsiFileFactory.getInstance(_fixture.getProject()).createFileFromText("DUMMY.MF","Require-Bundle:t1;d1:=p1;a1=p2; d2 := p3 ;  a2 = p4");
  PsiElement currentElement=fromText.getFirstChild();
  assertThat(currentElement,is(ManifestHeader.class));
  currentElement=currentElement.getFirstChild();
  assertThat(currentElement,is(ManifestHeaderName.class));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(LeafPsiElement.class));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(ManifestClause.class));
  currentElement=currentElement.getFirstChild();
  assertThat(currentElement,is(ManifestHeaderValue.class));
  ManifestHeaderValue headerValue=(ManifestHeaderValue)currentElement;
  assertThat(headerValue.getValueText(),equalTo("t1"));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(LeafPsiElement.class));
  assertThat(((LeafPsiElement)currentElement).getElementType(),equalTo(ManifestTokenTypes.PARAMETER_SEPARATOR));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(ManifestDirective.class));
  assertThat(((ManifestDirective)currentElement).getName(),equalTo("d1"));
  assertThat(((ManifestDirective)currentElement).getValue().getValueText(),equalTo("p1"));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(LeafPsiElement.class));
  assertThat(((LeafPsiElement)currentElement).getElementType(),equalTo(ManifestTokenTypes.PARAMETER_SEPARATOR));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(ManifestAttribute.class));
  assertThat(((ManifestAttribute)currentElement).getName(),equalTo("a1"));
  assertThat(((ManifestAttribute)currentElement).getValue().getValueText(),equalTo("p2"));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(LeafPsiElement.class));
  assertThat(((LeafPsiElement)currentElement).getElementType(),equalTo(ManifestTokenTypes.PARAMETER_SEPARATOR));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(PsiWhiteSpace.class));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(ManifestDirective.class));
  assertThat(((ManifestDirective)currentElement).getName(),equalTo("d2"));
  assertThat(((ManifestDirective)currentElement).getValue().getValueText(),equalTo("p3"));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(LeafPsiElement.class));
  assertThat(((LeafPsiElement)currentElement).getElementType(),equalTo(ManifestTokenTypes.PARAMETER_SEPARATOR));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(PsiWhiteSpace.class));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(PsiWhiteSpace.class));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(ManifestAttribute.class));
  assertThat(((ManifestAttribute)currentElement).getName(),equalTo("a2"));
  assertThat(((ManifestAttribute)currentElement).getValue().getValueText(),equalTo("p4"));
}
