{
  PsiFile fromText=PsiFileFactory.getInstance(fixture.getProject()).createFileFromText("DUMMY.MF","Require-Bundle: t1;d1:=p1;a1=p2; d2 := p3 ;  a2 = p4");
  PsiElement currentElement=fromText.getFirstChild();
  assertThat(currentElement,is(Section.class));
  currentElement=currentElement.getFirstChild();
  assertThat(currentElement,is(Header.class));
  currentElement=currentElement.getFirstChild();
  assertThat(currentElement,is(ManifestToken.class));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(ManifestToken.class));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(ManifestToken.class));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(Clause.class));
  currentElement=currentElement.getFirstChild();
  assertThat(currentElement,is(HeaderValuePart.class));
  HeaderValuePart headerValue=(HeaderValuePart)currentElement;
  assertThat(headerValue.getUnwrappedText(),equalTo("t1"));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(ManifestToken.class));
  assertThat(((ManifestToken)currentElement).getTokenType(),equalTo(ManifestTokenType.SEMICOLON));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(Directive.class));
  assertThat(((Directive)currentElement).getName(),equalTo("d1"));
  assertThat(((Directive)currentElement).getValue(),equalTo("p1"));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(ManifestToken.class));
  assertThat(((ManifestToken)currentElement).getTokenType(),equalTo(ManifestTokenType.SEMICOLON));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(Attribute.class));
  assertThat(((Attribute)currentElement).getName(),equalTo("a1"));
  assertThat(((Attribute)currentElement).getValue(),equalTo("p2"));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(ManifestToken.class));
  assertThat(((ManifestToken)currentElement).getTokenType(),equalTo(ManifestTokenType.SEMICOLON));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(Directive.class));
  assertThat(((Directive)currentElement).getName(),equalTo("d2"));
  assertThat(((Directive)currentElement).getValue(),equalTo("p3"));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(ManifestToken.class));
  assertThat(((ManifestToken)currentElement).getTokenType(),equalTo(ManifestTokenType.SEMICOLON));
  currentElement=currentElement.getNextSibling();
  assertThat(currentElement,is(Attribute.class));
  assertThat(((Attribute)currentElement).getName(),equalTo("a2"));
  assertThat(((Attribute)currentElement).getValue(),equalTo("p4"));
}
