{
  final JSClass jsClass=FlexUnitTestFinder.findContextClass(file);
  if (jsClass == null)   return;
  final String testClassName;
  final String packageName;
  final JSClass superClass;
  final PsiDirectory targetDirectory;
  final boolean generateSetUp;
  final boolean generateTearDown;
  final JSMemberInfo[] selectedMemberInfos;
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    testClassName=jsClass.getName() + "Test";
    packageName=StringUtil.getPackageName(jsClass.getQualifiedName());
    superClass=null;
    targetDirectory=jsClass.getContainingFile().getContainingDirectory();
    generateSetUp=true;
    generateTearDown=true;
    selectedMemberInfos=new JSMemberInfo[0];
  }
 else {
    final CreateFlexUnitTestDialog dialog=new CreateFlexUnitTestDialog(ModuleUtilCore.findModuleForPsiElement(jsClass),jsClass);
    dialog.show();
    if (dialog.getExitCode() != DialogWrapper.OK_EXIT_CODE) {
      return;
    }
    testClassName=dialog.getTestClassName();
    packageName=dialog.getPackageName();
    superClass=dialog.getSuperClass();
    targetDirectory=dialog.getTargetDirectory();
    generateSetUp=dialog.isGenerateSetUp();
    generateTearDown=dialog.isGenerateTearDown();
    selectedMemberInfos=dialog.getSelectedMemberInfos();
  }
  final Consumer<JSClass> postProcessRunnable=new Consumer<JSClass>(){
    public void consume(    final JSClass createdClass){
      final String methodsText=getMethodsText(createdClass,generateSetUp,generateTearDown,selectedMemberInfos);
      if (!methodsText.isEmpty()) {
        final PsiElement methods=JSChangeUtil.createJSTreeFromText(project,"{" + methodsText + "}",JavaScriptSupportLoader.ECMA_SCRIPT_L4).getPsi();
        if (methods != null) {
          for (          final PsiElement psiElement : methods.getChildren()) {
            createdClass.add(psiElement);
          }
        }
      }
      CodeStyleManager.getInstance(project).reformat(createdClass);
      createdClass.navigate(true);
    }
  }
;
  CreateClassOrInterfaceFix.createClass(JavaScriptSupportLoader.ACTION_SCRIPT_CLASS_WITH_SUPERS_TEMPLATE_NAME,testClassName,packageName,superClass,Collections.<String>emptyList(),targetDirectory,CodeInsightBundle.message("intention.create.test"),true,Collections.<String,Object>emptyMap(),postProcessRunnable);
}
