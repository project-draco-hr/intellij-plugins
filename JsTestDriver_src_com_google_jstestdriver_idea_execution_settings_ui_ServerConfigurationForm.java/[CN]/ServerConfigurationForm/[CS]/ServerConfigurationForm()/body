{
  myRunningInIDERadioButton.addActionListener(createSwitchServerTypeAction(ServerType.INTERNAL));
  myAtAddressRadioButton.addActionListener(createSwitchServerTypeAction(ServerType.EXTERNAL));
  myTestConnectionResult.setText("");
  myTestConnectionButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      String serverUrl=myAtAddressRadioButton.isSelected() ? myServerAddress.getText() : "http://localhost:" + JstdToolWindowPanel.serverPort;
      myTestConnectionButton.setEnabled(false);
      myTestConnectionResult.setText("Connecting to " + serverUrl + " ...");
      final ModalityState currentModalityState=ModalityState.current();
      JstdServerUtils.asyncFetchServerInfo(serverUrl,new Consumer<JstdServerFetchResult>(){
        @Override public void consume(        final JstdServerFetchResult serverFetchResult){
          ApplicationManager.getApplication().invokeLater(new Runnable(){
            @Override public void run(){
              StringBuilder str=new StringBuilder();
              if (serverFetchResult.isError()) {
                str.append(buildErrorTextParagraph(serverFetchResult.getErrorMessage()));
              }
 else {
                JstdServerInfo serverInfo=serverFetchResult.getServerInfo();
                int capturedBrowsers=serverInfo.getCapturedBrowsers().size();
                final String browserMessage;
                if (capturedBrowsers == 0) {
                  browserMessage="no captured browsers";
                }
 else                 if (capturedBrowsers == 1) {
                  browserMessage="1 captured browser";
                }
 else {
                  browserMessage=capturedBrowsers + " captured browsers";
                }
                str.append(buildOKTextParagraph("Connection to " + serverInfo.getServerUrl() + " is OK, "+ browserMessage));
              }
              myTestConnectionResult.setText(XmlStringUtil.wrapInHtml(str));
              myTestConnectionButton.setEnabled(true);
            }
          }
,currentModalityState);
        }
      }
);
    }
  }
);
  SwingUtils.addTextChangeListener(myServerAddress,new TextChangeListener(){
    @Override public void textChanged(    String oldText,    @NotNull String newText){
      myTestConnectionResult.setText("");
    }
  }
);
}
