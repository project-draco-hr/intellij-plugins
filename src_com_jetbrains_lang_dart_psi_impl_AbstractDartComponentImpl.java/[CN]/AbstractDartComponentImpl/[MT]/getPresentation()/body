{
  return new ItemPresentation(){
    @Override public String getPresentableText(){
      final StringBuilder result=new StringBuilder();
      result.append(getComponentName());
      final DartComponentType type=DartComponentType.typeOf(AbstractDartComponentImpl.this);
      if ((type == DartComponentType.METHOD || type == DartComponentType.FUNCTION || type == DartComponentType.CONSTRUCTOR) && !(isGetter() || isSetter())) {
        final String parameterList=DartPresentableUtil.getPresentableParameterList(AbstractDartComponentImpl.this);
        result.append("(").append(parameterList).append(")");
      }
      if (type == DartComponentType.METHOD || type == DartComponentType.FIELD || type == DartComponentType.FUNCTION) {
        final DartReturnType returnType=PsiTreeUtil.getChildOfType(AbstractDartComponentImpl.this,DartReturnType.class);
        final DartType dartType=returnType == null ? PsiTreeUtil.getChildOfType(AbstractDartComponentImpl.this,DartType.class) : returnType.getType();
        if (dartType != null) {
          result.append(":");
          result.append(DartPresentableUtil.buildTypeText(AbstractDartComponentImpl.this,dartType));
        }
      }
      return result.toString();
    }
    @Nullable private String getComponentName(){
      if (AbstractDartComponentImpl.this instanceof DartFactoryConstructorDeclaration) {
        DartClass dartClass=PsiTreeUtil.getParentOfType(AbstractDartComponentImpl.this,DartClass.class);
        return dartClass != null ? dartClass.getName() : null;
      }
      return getName();
    }
    @Override public String getLocationString(){
      if (!isValid()) {
        return "";
      }
      if (!(AbstractDartComponentImpl.this instanceof DartClass)) {
        final DartClass dartClass=PsiTreeUtil.getParentOfType(AbstractDartComponentImpl.this,DartClass.class);
        if (dartClass != null) {
          return dartClass.getName();
        }
      }
      DartExecutionScope root=PsiTreeUtil.getTopmostParentOfType(AbstractDartComponentImpl.this,DartExecutionScope.class);
      DartPartOfStatement partOfStatement=PsiTreeUtil.getChildOfType(root,DartPartOfStatement.class);
      return partOfStatement == null ? null : partOfStatement.getLibraryId().toString();
    }
    @Override public Icon getIcon(    boolean open){
      return AbstractDartComponentImpl.this.getIcon(0);
    }
  }
;
}
