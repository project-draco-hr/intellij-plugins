{
  JSCallExpression callExpression=CastUtils.tryCast(element,JSCallExpression.class);
  if (callExpression != null) {
    JSReferenceExpression referenceExpression=CastUtils.tryCast(callExpression.getMethodExpression(),JSReferenceExpression.class);
    JSArgumentList jsArgumentList=callExpression.getArgumentList();
    if (referenceExpression != null && jsArgumentList != null) {
      JSExpression[] arguments=ObjectUtils.notNull(jsArgumentList.getArguments(),JSExpression.EMPTY_ARRAY);
      boolean subject="TestCase".equals(referenceExpression.getReferencedName()) && arguments.length <= 3;
      subject=subject || ("AsyncTestCase".equals(referenceExpression.getReferencedName()) && arguments.length <= 2);
      if (subject) {
        boolean resolved=canBeResolved(referenceExpression);
        if (!resolved) {
          installAnnotation(holder,referenceExpression);
        }
      }
    }
  }
}
