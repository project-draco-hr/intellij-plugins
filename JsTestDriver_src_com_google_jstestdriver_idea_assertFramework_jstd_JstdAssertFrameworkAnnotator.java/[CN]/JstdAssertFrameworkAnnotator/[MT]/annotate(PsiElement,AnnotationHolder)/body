{
  JSCallExpression callExpression=CastUtils.tryCast(element,JSCallExpression.class);
  if (callExpression != null) {
    JSReferenceExpression referenceExpression=CastUtils.tryCast(callExpression.getMethodExpression(),JSReferenceExpression.class);
    if (referenceExpression != null) {
      JSArgumentList jsArgumentList=callExpression.getArgumentList();
      if (jsArgumentList != null) {
        JSExpression[] arguments=jsArgumentList.getArguments();
        boolean subject="TestCase".equals(referenceExpression.getReferencedName()) && arguments.length <= 3;
        subject=subject || ("AsyncTestCase".equals(referenceExpression.getReferencedName()) && arguments.length <= 2);
        if (subject) {
          boolean resolved=canBeResolved(referenceExpression);
          if (!resolved) {
            installAnnotation(holder,referenceExpression);
          }
        }
      }
    }
  }
}
