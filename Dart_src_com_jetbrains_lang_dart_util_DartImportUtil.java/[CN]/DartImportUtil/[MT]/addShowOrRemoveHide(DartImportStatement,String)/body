{
  for (  DartHideCombinator hideCombinator : importStatement.getHideCombinatorList()) {
    final DartLibraryReferenceList libraryReferenceList=hideCombinator.getLibraryReferenceList();
    if (libraryReferenceList != null) {
      final List<DartLibraryComponentReferenceExpression> libraryComponents=libraryReferenceList.getLibraryComponentReferenceExpressionList();
      for (      DartLibraryComponentReferenceExpression libraryComponentReferenceExpression : libraryComponents) {
        if (componentName.equals(libraryComponentReferenceExpression.getText())) {
          final PsiElement toRemove=libraryComponents.size() > 1 ? libraryComponentReferenceExpression : hideCombinator;
          toRemove.delete();
          return;
        }
      }
    }
  }
  final List<DartShowCombinator> showCombinators=importStatement.getShowCombinatorList();
  if (showCombinators.isEmpty()) {
    return;
  }
  final DartShowCombinator combinatorToAdd=showCombinators.iterator().next();
  final DartLibraryComponentReferenceExpression libraryComponentReference=DartElementGenerator.createLibraryComponentReference(importStatement.getProject(),componentName);
  final DartLibraryReferenceList libraryReferenceList=combinatorToAdd.getLibraryReferenceList();
  if (libraryComponentReference != null && libraryReferenceList != null) {
    libraryReferenceList.getNode().addLeaf(DartTokenTypes.COMMA,",",null);
    libraryReferenceList.getNode().addLeaf(DartTokenTypesSets.WHITE_SPACE," ",null);
    libraryReferenceList.add(libraryComponentReference);
  }
}
