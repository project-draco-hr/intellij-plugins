{
  if (!recursion_guard_(b,l,"shiftExpression"))   return false;
  if (!nextTokenIs(b,"<shift expression>",LT_LT,GT))   return false;
  boolean r;
  Marker m=enter_section_(b,l,_LEFT_,"<shift expression>");
  r=shiftOperator(b,l + 1);
  r=r && additiveExpressionWrapper(b,l + 1);
  exit_section_(b,l,m,SHIFT_EXPRESSION,r,false,null);
  return r;
}
