{
  if (!recursion_guard_(builder_,level_,"equalityOperator"))   return false;
  if (!nextTokenIs(builder_,NEQ) && !nextTokenIs(builder_,NEQ_EQ) && !nextTokenIs(builder_,EQ_EQ)&& !nextTokenIs(builder_,EQ_EQ_EQ)&& replaceVariants(builder_,4,"<equality operator>"))   return false;
  boolean result_=false;
  Marker marker_=enter_section_(builder_,level_,_NONE_,"<equality operator>");
  result_=consumeToken(builder_,EQ_EQ);
  if (!result_)   result_=consumeToken(builder_,NEQ);
  if (!result_)   result_=consumeToken(builder_,EQ_EQ_EQ);
  if (!result_)   result_=consumeToken(builder_,NEQ_EQ);
  exit_section_(builder_,level_,marker_,EQUALITY_OPERATOR,result_,false,null);
  return result_;
}
