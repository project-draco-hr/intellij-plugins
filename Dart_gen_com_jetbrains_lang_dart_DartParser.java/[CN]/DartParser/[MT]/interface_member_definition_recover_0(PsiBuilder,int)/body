{
  if (!recursion_guard_(builder_,level_,"interface_member_definition_recover_0"))   return false;
  boolean result_=false;
  Marker marker_=builder_.mark();
  result_=consumeToken(builder_,ABSTRACT);
  if (!result_)   result_=consumeToken(builder_,ASSERT);
  if (!result_)   result_=consumeToken(builder_,CLASS);
  if (!result_)   result_=consumeToken(builder_,CONST);
  if (!result_)   result_=consumeToken(builder_,EXTENDS);
  if (!result_)   result_=consumeToken(builder_,FACTORY);
  if (!result_)   result_=consumeToken(builder_,FINAL);
  if (!result_)   result_=consumeToken(builder_,GET);
  if (!result_)   result_=consumeToken(builder_,IMPLEMENTS);
  if (!result_)   result_=consumeToken(builder_,IMPORT);
  if (!result_)   result_=consumeToken(builder_,INTERFACE);
  if (!result_)   result_=consumeToken(builder_,IS);
  if (!result_)   result_=consumeToken(builder_,LIBRARY);
  if (!result_)   result_=consumeToken(builder_,NATIVE);
  if (!result_)   result_=consumeToken(builder_,NEGATE);
  if (!result_)   result_=consumeToken(builder_,OPERATOR);
  if (!result_)   result_=consumeToken(builder_,SET);
  if (!result_)   result_=consumeToken(builder_,AT);
  if (!result_)   result_=consumeToken(builder_,SOURCE);
  if (!result_)   result_=consumeToken(builder_,STATIC);
  if (!result_)   result_=consumeToken(builder_,TYPEDEF);
  if (!result_)   result_=consumeToken(builder_,VAR);
  if (!result_)   result_=consumeToken(builder_,RBRACE);
  if (!result_)   result_=nonStrictID(builder_,level_ + 1);
  if (!result_) {
    marker_.rollbackTo();
  }
 else {
    marker_.drop();
  }
  return result_;
}
