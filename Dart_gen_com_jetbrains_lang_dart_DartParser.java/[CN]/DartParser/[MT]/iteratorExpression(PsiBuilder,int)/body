{
  if (!recursion_guard_(builder_,level_,"iteratorExpression"))   return false;
  boolean result_=false;
  Marker left_marker_=(Marker)builder_.getLatestDoneMarker();
  if (!invalid_left_marker_guard_(builder_,left_marker_,"iteratorExpression"))   return false;
  Marker marker_=builder_.mark();
  enterErrorRecordingSection(builder_,level_,_SECTION_GENERAL_,"<iterator expression>");
  result_=consumeToken(builder_,"...");
  result_=result_ && ternaryExpressionWrapper(builder_,level_ + 1);
  if (result_) {
    marker_.drop();
    left_marker_.precede().done(ITERATOR_EXPRESSION);
  }
 else {
    marker_.rollbackTo();
  }
  result_=exitErrorRecordingSection(builder_,level_,result_,false,_SECTION_GENERAL_,null);
  return result_;
}
