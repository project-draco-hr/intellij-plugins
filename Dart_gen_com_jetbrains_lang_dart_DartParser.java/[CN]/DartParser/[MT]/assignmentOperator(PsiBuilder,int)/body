{
  if (!recursion_guard_(b,l,"assignmentOperator"))   return false;
  if (!nextTokenIs(b,"<assignment operator>",REM_EQ,AND_EQ,MUL_EQ,PLUS_EQ,MINUS_EQ,DIV_EQ,LT_LT_EQ,EQ,GT_GT_EQ,XOR_EQ,OR_EQ,INT_DIV_EQ))   return false;
  boolean r;
  Marker m=enter_section_(b,l,_NONE_,"<assignment operator>");
  r=consumeToken(b,EQ);
  if (!r)   r=consumeToken(b,MUL_EQ);
  if (!r)   r=consumeToken(b,DIV_EQ);
  if (!r)   r=consumeToken(b,INT_DIV_EQ);
  if (!r)   r=consumeToken(b,REM_EQ);
  if (!r)   r=consumeToken(b,PLUS_EQ);
  if (!r)   r=consumeToken(b,MINUS_EQ);
  if (!r)   r=consumeToken(b,LT_LT_EQ);
  if (!r)   r=consumeToken(b,GT_GT_EQ);
  if (!r)   r=consumeToken(b,AND_EQ);
  if (!r)   r=consumeToken(b,XOR_EQ);
  if (!r)   r=consumeToken(b,OR_EQ);
  exit_section_(b,l,m,ASSIGNMENT_OPERATOR,r,false,null);
  return r;
}
