{
  if (!recursion_guard_(b,l,"assignmentOperator"))   return false;
  boolean r;
  Marker m=enter_section_(b,l,_NONE_,ASSIGNMENT_OPERATOR,"<assignment operator>");
  r=consumeToken(b,EQ);
  if (!r)   r=consumeToken(b,MUL_EQ);
  if (!r)   r=consumeToken(b,DIV_EQ);
  if (!r)   r=consumeToken(b,INT_DIV_EQ);
  if (!r)   r=consumeToken(b,REM_EQ);
  if (!r)   r=consumeToken(b,PLUS_EQ);
  if (!r)   r=consumeToken(b,MINUS_EQ);
  if (!r)   r=consumeToken(b,LT_LT_EQ);
  if (!r)   r=gtGtEq(b,l + 1);
  if (!r)   r=consumeToken(b,AND_EQ);
  if (!r)   r=consumeToken(b,AND_AND_EQ);
  if (!r)   r=consumeToken(b,XOR_EQ);
  if (!r)   r=consumeToken(b,OR_EQ);
  if (!r)   r=consumeToken(b,OR_OR_EQ);
  if (!r)   r=consumeToken(b,QUEST_QUEST_EQ);
  exit_section_(b,l,m,r,false,null);
  return r;
}
