{
  if (!recursion_guard_(builder_,level_,"logicAndExpression"))   return false;
  if (!nextTokenIs(builder_,AND_AND))   return false;
  boolean result_=false;
  Marker marker_=enter_section_(builder_,level_,_LEFT_,null);
  result_=consumeToken(builder_,AND_AND);
  result_=result_ && compareExpressionWrapper(builder_,level_ + 1);
  exit_section_(builder_,level_,marker_,LOGIC_AND_EXPRESSION,result_,false,null);
  return result_;
}
