{
  boolean r;
  b=adapt_builder_(t,b,this,EXTENDS_SETS_);
  Marker m=enter_section_(b,0,_COLLAPSE_,null);
  if (t == ADDITIVE_EXPRESSION) {
    r=additiveExpression(b,0);
  }
 else   if (t == ADDITIVE_OPERATOR) {
    r=additiveOperator(b,0);
  }
 else   if (t == ARGUMENT_LIST) {
    r=argumentList(b,0);
  }
 else   if (t == ARGUMENTS) {
    r=arguments(b,0);
  }
 else   if (t == ARRAY_ACCESS_EXPRESSION) {
    r=arrayAccessExpression(b,0);
  }
 else   if (t == AS_EXPRESSION) {
    r=asExpression(b,0);
  }
 else   if (t == ASSERT_STATEMENT) {
    r=assertStatement(b,0);
  }
 else   if (t == ASSIGN_EXPRESSION) {
    r=assignExpression(b,0);
  }
 else   if (t == ASSIGNMENT_OPERATOR) {
    r=assignmentOperator(b,0);
  }
 else   if (t == AWAIT_EXPRESSION) {
    r=awaitExpression(b,0);
  }
 else   if (t == BITWISE_EXPRESSION) {
    r=bitwiseExpression(b,0);
  }
 else   if (t == BITWISE_OPERATOR) {
    r=bitwiseOperator(b,0);
  }
 else   if (t == BLOCK) {
    r=block(b,0);
  }
 else   if (t == BREAK_STATEMENT) {
    r=breakStatement(b,0);
  }
 else   if (t == CALL_EXPRESSION) {
    r=callExpression(b,0);
  }
 else   if (t == CASCADE_REFERENCE_EXPRESSION) {
    r=cascadeReferenceExpression(b,0);
  }
 else   if (t == CATCH_PART) {
    r=catchPart(b,0);
  }
 else   if (t == CLASS_BODY) {
    r=classBody(b,0);
  }
 else   if (t == CLASS_DEFINITION) {
    r=classDefinition(b,0);
  }
 else   if (t == CLASS_MEMBERS) {
    r=classMembers(b,0);
  }
 else   if (t == COMPARE_EXPRESSION) {
    r=compareExpression(b,0);
  }
 else   if (t == COMPONENT_NAME) {
    r=componentName(b,0);
  }
 else   if (t == CONTINUE_STATEMENT) {
    r=continueStatement(b,0);
  }
 else   if (t == DEFAULT_CASE) {
    r=defaultCase(b,0);
  }
 else   if (t == DEFAULT_FORMAL_NAMED_PARAMETER) {
    r=defaultFormalNamedParameter(b,0);
  }
 else   if (t == DO_WHILE_STATEMENT) {
    r=doWhileStatement(b,0);
  }
 else   if (t == ENUM_CONSTANT_DECLARATION) {
    r=enumConstantDeclaration(b,0);
  }
 else   if (t == ENUM_DEFINITION) {
    r=enumDefinition(b,0);
  }
 else   if (t == EQUALITY_OPERATOR) {
    r=equalityOperator(b,0);
  }
 else   if (t == EXPORT_STATEMENT) {
    r=exportStatement(b,0);
  }
 else   if (t == EXPRESSION) {
    r=expression(b,0);
  }
 else   if (t == EXPRESSION_LIST) {
    r=expressionList(b,0);
  }
 else   if (t == FACTORY_CONSTRUCTOR_DECLARATION) {
    r=factoryConstructorDeclaration(b,0);
  }
 else   if (t == FIELD_FORMAL_PARAMETER) {
    r=fieldFormalParameter(b,0);
  }
 else   if (t == FIELD_INITIALIZER) {
    r=fieldInitializer(b,0);
  }
 else   if (t == FINALLY_PART) {
    r=finallyPart(b,0);
  }
 else   if (t == FOR_IN_PART) {
    r=forInPart(b,0);
  }
 else   if (t == FOR_LOOP_PARTS) {
    r=forLoopParts(b,0);
  }
 else   if (t == FOR_LOOP_PARTS_IN_BRACES) {
    r=forLoopPartsInBraces(b,0);
  }
 else   if (t == FOR_STATEMENT) {
    r=forStatement(b,0);
  }
 else   if (t == FORMAL_PARAMETER_LIST) {
    r=formalParameterList(b,0);
  }
 else   if (t == FUNCTION_BODY) {
    r=functionBody(b,0);
  }
 else   if (t == FUNCTION_DECLARATION_WITH_BODY) {
    r=functionDeclarationWithBody(b,0);
  }
 else   if (t == FUNCTION_DECLARATION_WITH_BODY_OR_NATIVE) {
    r=functionDeclarationWithBodyOrNative(b,0);
  }
 else   if (t == FUNCTION_EXPRESSION) {
    r=functionExpression(b,0);
  }
 else   if (t == FUNCTION_EXPRESSION_BODY) {
    r=functionExpressionBody(b,0);
  }
 else   if (t == FUNCTION_SIGNATURE) {
    r=functionSignature(b,0);
  }
 else   if (t == FUNCTION_TYPE_ALIAS) {
    r=functionTypeAlias(b,0);
  }
 else   if (t == GETTER_DECLARATION) {
    r=getterDeclaration(b,0);
  }
 else   if (t == HIDE_COMBINATOR) {
    r=hideCombinator(b,0);
  }
 else   if (t == ID) {
    r=id(b,0);
  }
 else   if (t == IF_NULL_EXPRESSION) {
    r=ifNullExpression(b,0);
  }
 else   if (t == IF_STATEMENT) {
    r=ifStatement(b,0);
  }
 else   if (t == IMPORT_STATEMENT) {
    r=importStatement(b,0);
  }
 else   if (t == INCOMPLETE_DECLARATION) {
    r=incompleteDeclaration(b,0);
  }
 else   if (t == INITIALIZERS) {
    r=initializers(b,0);
  }
 else   if (t == INTERFACES) {
    r=interfaces(b,0);
  }
 else   if (t == IS_EXPRESSION) {
    r=isExpression(b,0);
  }
 else   if (t == LABEL) {
    r=label(b,0);
  }
 else   if (t == LIBRARY_COMPONENT_REFERENCE_EXPRESSION) {
    r=libraryComponentReferenceExpression(b,0);
  }
 else   if (t == LIBRARY_ID) {
    r=libraryId(b,0);
  }
 else   if (t == LIBRARY_NAME_ELEMENT) {
    r=libraryNameElement(b,0);
  }
 else   if (t == LIBRARY_REFERENCE_LIST) {
    r=libraryReferenceList(b,0);
  }
 else   if (t == LIBRARY_STATEMENT) {
    r=libraryStatement(b,0);
  }
 else   if (t == LIST_LITERAL_EXPRESSION) {
    r=listLiteralExpression(b,0);
  }
 else   if (t == LITERAL_EXPRESSION) {
    r=literalExpression(b,0);
  }
 else   if (t == LOGIC_AND_EXPRESSION) {
    r=logicAndExpression(b,0);
  }
 else   if (t == LOGIC_OR_EXPRESSION) {
    r=logicOrExpression(b,0);
  }
 else   if (t == LONG_TEMPLATE_ENTRY) {
    r=longTemplateEntry(b,0);
  }
 else   if (t == MAP_LITERAL_ENTRY) {
    r=mapLiteralEntry(b,0);
  }
 else   if (t == MAP_LITERAL_EXPRESSION) {
    r=mapLiteralExpression(b,0);
  }
 else   if (t == METADATA) {
    r=metadata(b,0);
  }
 else   if (t == METHOD_DECLARATION) {
    r=methodDeclaration(b,0);
  }
 else   if (t == MIXIN_APPLICATION) {
    r=mixinApplication(b,0);
  }
 else   if (t == MIXINS) {
    r=mixins(b,0);
  }
 else   if (t == MULTIPLICATIVE_EXPRESSION) {
    r=multiplicativeExpression(b,0);
  }
 else   if (t == MULTIPLICATIVE_OPERATOR) {
    r=multiplicativeOperator(b,0);
  }
 else   if (t == NAMED_ARGUMENT) {
    r=namedArgument(b,0);
  }
 else   if (t == NAMED_CONSTRUCTOR_DECLARATION) {
    r=namedConstructorDeclaration(b,0);
  }
 else   if (t == NAMED_FORMAL_PARAMETERS) {
    r=namedFormalParameters(b,0);
  }
 else   if (t == NEW_EXPRESSION) {
    r=newExpression(b,0);
  }
 else   if (t == NORMAL_FORMAL_PARAMETER) {
    r=normalFormalParameter(b,0);
  }
 else   if (t == ON_PART) {
    r=onPart(b,0);
  }
 else   if (t == OPERATOR_DECLARATION) {
    r=operatorDeclaration(b,0);
  }
 else   if (t == PARAMETER_NAME_REFERENCE_EXPRESSION) {
    r=parameterNameReferenceExpression(b,0);
  }
 else   if (t == PARENTHESIZED_EXPRESSION) {
    r=parenthesizedExpression(b,0);
  }
 else   if (t == PART_OF_STATEMENT) {
    r=partOfStatement(b,0);
  }
 else   if (t == PART_STATEMENT) {
    r=partStatement(b,0);
  }
 else   if (t == PREFIX_EXPRESSION) {
    r=prefixExpression(b,0);
  }
 else   if (t == PREFIX_OPERATOR) {
    r=prefixOperator(b,0);
  }
 else   if (t == REDIRECTION) {
    r=redirection(b,0);
  }
 else   if (t == REFERENCE_EXPRESSION) {
    r=referenceExpression(b,0);
  }
 else   if (t == RELATIONAL_OPERATOR) {
    r=relationalOperator(b,0);
  }
 else   if (t == RETHROW_STATEMENT) {
    r=rethrowStatement(b,0);
  }
 else   if (t == RETURN_STATEMENT) {
    r=returnStatement(b,0);
  }
 else   if (t == RETURN_TYPE) {
    r=returnType(b,0);
  }
 else   if (t == SETTER_DECLARATION) {
    r=setterDeclaration(b,0);
  }
 else   if (t == SHIFT_EXPRESSION) {
    r=shiftExpression(b,0);
  }
 else   if (t == SHIFT_OPERATOR) {
    r=shiftOperator(b,0);
  }
 else   if (t == SHORT_TEMPLATE_ENTRY) {
    r=shortTemplateEntry(b,0);
  }
 else   if (t == SHOW_COMBINATOR) {
    r=showCombinator(b,0);
  }
 else   if (t == SIMPLE_FORMAL_PARAMETER) {
    r=simpleFormalParameter(b,0);
  }
 else   if (t == STATEMENTS) {
    r=statements(b,0);
  }
 else   if (t == STRING_LITERAL_EXPRESSION) {
    r=stringLiteralExpression(b,0);
  }
 else   if (t == SUFFIX_EXPRESSION) {
    r=suffixExpression(b,0);
  }
 else   if (t == SUPER_CALL_OR_FIELD_INITIALIZER) {
    r=superCallOrFieldInitializer(b,0);
  }
 else   if (t == SUPER_EXPRESSION) {
    r=superExpression(b,0);
  }
 else   if (t == SUPERCLASS) {
    r=superclass(b,0);
  }
 else   if (t == SWITCH_CASE) {
    r=switchCase(b,0);
  }
 else   if (t == SWITCH_STATEMENT) {
    r=switchStatement(b,0);
  }
 else   if (t == SYMBOL_LITERAL_EXPRESSION) {
    r=symbolLiteralExpression(b,0);
  }
 else   if (t == TERNARY_EXPRESSION) {
    r=ternaryExpression(b,0);
  }
 else   if (t == THIS_EXPRESSION) {
    r=thisExpression(b,0);
  }
 else   if (t == THROW_EXPRESSION) {
    r=throwExpression(b,0);
  }
 else   if (t == TRY_STATEMENT) {
    r=tryStatement(b,0);
  }
 else   if (t == TYPE) {
    r=type(b,0);
  }
 else   if (t == TYPE_ARGUMENTS) {
    r=typeArguments(b,0);
  }
 else   if (t == TYPE_LIST) {
    r=typeList(b,0);
  }
 else   if (t == TYPE_PARAMETER) {
    r=typeParameter(b,0);
  }
 else   if (t == TYPE_PARAMETERS) {
    r=typeParameters(b,0);
  }
 else   if (t == URI_ELEMENT) {
    r=uriElement(b,0);
  }
 else   if (t == USER_DEFINABLE_OPERATOR) {
    r=userDefinableOperator(b,0);
  }
 else   if (t == VALUE_EXPRESSION) {
    r=valueExpression(b,0);
  }
 else   if (t == VAR_ACCESS_DECLARATION) {
    r=varAccessDeclaration(b,0);
  }
 else   if (t == VAR_DECLARATION_LIST) {
    r=varDeclarationList(b,0);
  }
 else   if (t == VAR_DECLARATION_LIST_PART) {
    r=varDeclarationListPart(b,0);
  }
 else   if (t == VAR_INIT) {
    r=varInit(b,0);
  }
 else   if (t == WHILE_STATEMENT) {
    r=whileStatement(b,0);
  }
 else   if (t == YIELD_EACH_STATEMENT) {
    r=yieldEachStatement(b,0);
  }
 else   if (t == YIELD_STATEMENT) {
    r=yieldStatement(b,0);
  }
 else {
    r=parse_root_(t,b,0);
  }
  exit_section_(b,0,m,t,r,true,TRUE_CONDITION);
}
