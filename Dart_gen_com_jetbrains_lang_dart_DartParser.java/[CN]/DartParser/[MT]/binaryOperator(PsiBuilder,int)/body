{
  if (!recursion_guard_(builder_,level_,"binaryOperator"))   return false;
  if (!nextTokenIs(builder_,"",REM,AND,MUL,PLUS,MINUS,DIV,LT,LT_LT,LT_EQ,EQ_EQ,GT,GT_EQ,XOR,OR,INT_DIV))   return false;
  boolean result_=false;
  Marker marker_=enter_section_(builder_);
  result_=multiplicativeOperator(builder_,level_ + 1);
  if (!result_)   result_=additiveOperator(builder_,level_ + 1);
  if (!result_)   result_=shiftOperator(builder_,level_ + 1);
  if (!result_)   result_=relationalOperator(builder_,level_ + 1);
  if (!result_)   result_=consumeToken(builder_,EQ_EQ);
  if (!result_)   result_=bitwiseOperator(builder_,level_ + 1);
  exit_section_(builder_,marker_,null,result_);
  return result_;
}
