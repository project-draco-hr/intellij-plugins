{
  if (!recursion_guard_(b,l,"binaryOperator"))   return false;
  boolean r;
  Marker m=enter_section_(b);
  r=multiplicativeOperator(b,l + 1);
  if (!r)   r=additiveOperator(b,l + 1);
  if (!r)   r=shiftOperator(b,l + 1);
  if (!r)   r=relationalOperator(b,l + 1);
  if (!r)   r=consumeToken(b,EQ_EQ);
  if (!r)   r=bitwiseOperator(b,l + 1);
  exit_section_(b,m,null,r);
  return r;
}
