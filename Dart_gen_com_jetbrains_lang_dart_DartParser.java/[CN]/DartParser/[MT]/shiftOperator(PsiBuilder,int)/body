{
  if (!recursion_guard_(b,l,"shiftOperator"))   return false;
  if (!nextTokenIs(b,"<shift operator>",LT_LT,GT))   return false;
  boolean r;
  Marker m=enter_section_(b,l,_NONE_,"<shift operator>");
  r=consumeToken(b,LT_LT);
  if (!r)   r=shiftRightOperator(b,l + 1);
  exit_section_(b,l,m,SHIFT_OPERATOR,r,false,null);
  return r;
}
