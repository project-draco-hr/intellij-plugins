{
  if (!recursion_guard_(builder_,level_,"shiftOperator"))   return false;
  if (!nextTokenIs(builder_,LT_LT) && !nextTokenIs(builder_,GT) && replaceVariants(builder_,2,"<shift operator>"))   return false;
  boolean result_=false;
  Marker marker_=builder_.mark();
  enterErrorRecordingSection(builder_,level_,_SECTION_GENERAL_,"<shift operator>");
  result_=consumeToken(builder_,LT_LT);
  if (!result_)   result_=shiftRightOperator(builder_,level_ + 1);
  if (result_) {
    marker_.done(SHIFT_OPERATOR);
  }
 else {
    marker_.rollbackTo();
  }
  result_=exitErrorRecordingSection(builder_,level_,result_,false,_SECTION_GENERAL_,null);
  return result_;
}
