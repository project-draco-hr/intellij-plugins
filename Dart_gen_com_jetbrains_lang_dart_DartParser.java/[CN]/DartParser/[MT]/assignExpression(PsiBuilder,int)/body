{
  if (!recursion_guard_(builder_,level_,"assignExpression"))   return false;
  if (!nextTokenIs(builder_,REM_EQ) && !nextTokenIs(builder_,AND_EQ) && !nextTokenIs(builder_,MUL_EQ)&& !nextTokenIs(builder_,PLUS_EQ)&& !nextTokenIs(builder_,MINUS_EQ)&& !nextTokenIs(builder_,DIV_EQ)&& !nextTokenIs(builder_,LT_LT_EQ)&& !nextTokenIs(builder_,EQ)&& !nextTokenIs(builder_,GT_GT_EQ)&& !nextTokenIs(builder_,GT_GT_GT_EQ)&& !nextTokenIs(builder_,XOR_EQ)&& !nextTokenIs(builder_,OR_EQ)&& !nextTokenIs(builder_,INT_DIV_EQ)&& replaceVariants(builder_,13,"<assign expression>"))   return false;
  boolean result_=false;
  boolean pinned_=false;
  Marker marker_=enter_section_(builder_,level_,_LEFT_,"<assign expression>");
  result_=assignmentOperator(builder_,level_ + 1);
  pinned_=result_;
  result_=result_ && iteratorExpressionWrapper(builder_,level_ + 1);
  exit_section_(builder_,level_,marker_,ASSIGN_EXPRESSION,result_,pinned_,null);
  return result_ || pinned_;
}
