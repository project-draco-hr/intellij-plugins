{
  if (!recursion_guard_(b,l,"assignExpression"))   return false;
  if (!nextTokenIs(b,"<assign expression>",REM_EQ,AND_EQ,MUL_EQ,PLUS_EQ,MINUS_EQ,DIV_EQ,LT_LT_EQ,EQ,GT_GT_EQ,XOR_EQ,OR_EQ,INT_DIV_EQ))   return false;
  boolean r, p;
  Marker m=enter_section_(b,l,_LEFT_,"<assign expression>");
  r=assignmentOperator(b,l + 1);
  p=r;
  r=r && ternaryExpressionWrapper(b,l + 1);
  exit_section_(b,l,m,ASSIGN_EXPRESSION,r,p,null);
  return r || p;
}
