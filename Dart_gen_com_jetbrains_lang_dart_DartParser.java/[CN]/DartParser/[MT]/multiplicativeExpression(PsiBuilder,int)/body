{
  if (!recursion_guard_(builder_,level_,"multiplicativeExpression"))   return false;
  if (!nextTokenIs(builder_,REM) && !nextTokenIs(builder_,MUL) && !nextTokenIs(builder_,DIV)&& !nextTokenIs(builder_,INT_DIV)&& replaceVariants(builder_,4,"<multiplicative expression>"))   return false;
  boolean result_=false;
  Marker marker_=enter_section_(builder_,level_,_LEFT_,"<multiplicative expression>");
  result_=multiplicativeOperator(builder_,level_ + 1);
  result_=result_ && prefixExpression(builder_,level_ + 1);
  exit_section_(builder_,level_,marker_,MULTIPLICATIVE_EXPRESSION,result_,false,null);
  return result_;
}
