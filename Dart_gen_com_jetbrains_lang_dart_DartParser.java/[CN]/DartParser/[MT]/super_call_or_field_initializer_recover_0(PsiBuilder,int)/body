{
  if (!recursion_guard_(builder_,level_,"super_call_or_field_initializer_recover_0"))   return false;
  boolean result_=false;
  Marker marker_=builder_.mark();
  result_=consumeToken(builder_,RPAREN);
  if (!result_)   result_=consumeToken(builder_,COMMA);
  if (!result_)   result_=consumeToken(builder_,COLON);
  if (!result_)   result_=consumeToken(builder_,SEMICOLON);
  if (!result_)   result_=consumeToken(builder_,EQ);
  if (!result_)   result_=consumeToken(builder_,EXPRESSION_BODY_DEF);
  if (!result_)   result_=consumeToken(builder_,RBRACKET);
  if (!result_)   result_=consumeToken(builder_,ABSTRACT);
  if (!result_)   result_=consumeToken(builder_,CONST);
  if (!result_)   result_=consumeToken(builder_,FACTORY);
  if (!result_)   result_=consumeToken(builder_,FINAL);
  if (!result_)   result_=consumeToken(builder_,GET);
  if (!result_)   result_=consumeToken(builder_,NATIVE);
  if (!result_)   result_=consumeToken(builder_,OPERATOR);
  if (!result_)   result_=consumeToken(builder_,SET);
  if (!result_)   result_=consumeToken(builder_,STATIC);
  if (!result_)   result_=consumeToken(builder_,VAR);
  if (!result_)   result_=consumeToken(builder_,LBRACE);
  if (!result_)   result_=consumeToken(builder_,RBRACE);
  if (!result_)   result_=nonStrictID(builder_,level_ + 1);
  if (!result_) {
    marker_.rollbackTo();
  }
 else {
    marker_.drop();
  }
  return result_;
}
