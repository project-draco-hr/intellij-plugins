{
  if (!recursion_guard_(builder_,level_,"pathOrLibraryReference"))   return false;
  if (!nextTokenIs(builder_,OPEN_QUOTE) && !nextTokenIs(builder_,RAW_SINGLE_QUOTED_STRING) && !nextTokenIs(builder_,RAW_TRIPLE_QUOTED_STRING)&& replaceVariants(builder_,3,"<path or library reference>"))   return false;
  boolean result_=false;
  Marker marker_=builder_.mark();
  enterErrorRecordingSection(builder_,level_,_SECTION_GENERAL_,"<path or library reference>");
  result_=stringLiteralExpression(builder_,level_ + 1);
  if (result_) {
    marker_.done(PATH_OR_LIBRARY_REFERENCE);
  }
 else {
    marker_.rollbackTo();
  }
  result_=exitErrorRecordingSection(builder_,level_,result_,false,_SECTION_GENERAL_,null);
  return result_;
}
