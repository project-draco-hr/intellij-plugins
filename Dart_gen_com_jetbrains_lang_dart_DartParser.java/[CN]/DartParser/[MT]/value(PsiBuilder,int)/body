{
  if (!recursion_guard_(builder_,level_,"value"))   return false;
  boolean result_=false;
  Marker marker_=builder_.mark();
  result_=value_0(builder_,level_ + 1);
  if (!result_)   result_=functionExpression(builder_,level_ + 1);
  if (!result_)   result_=compoundLiteralExpression(builder_,level_ + 1);
  if (!result_)   result_=value_3(builder_,level_ + 1);
  if (!result_)   result_=value_4(builder_,level_ + 1);
  if (!result_) {
    marker_.rollbackTo();
  }
 else {
    marker_.drop();
  }
  return result_;
}
