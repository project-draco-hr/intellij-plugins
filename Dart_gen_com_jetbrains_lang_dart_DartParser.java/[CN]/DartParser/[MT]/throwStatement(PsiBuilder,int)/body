{
  if (!recursion_guard_(b,l,"throwStatement"))   return false;
  if (!nextTokenIs(b,THROW))   return false;
  boolean r, p;
  Marker m=enter_section_(b,l,_NONE_,null);
  r=consumeToken(b,THROW);
  p=r;
  r=r && throwStatement_1(b,l + 1);
  exit_section_(b,l,m,THROW_STATEMENT,r,p,null);
  return r || p;
}
