{
  if (!recursion_guard_(builder_,level_,"compareExpression"))   return false;
  if (!nextTokenIs(builder_,NEQ) && !nextTokenIs(builder_,NEQ_EQ) && !nextTokenIs(builder_,LT)&& !nextTokenIs(builder_,LT_EQ)&& !nextTokenIs(builder_,EQ_EQ)&& !nextTokenIs(builder_,EQ_EQ_EQ)&& !nextTokenIs(builder_,GT)&& !nextTokenIs(builder_,GT_EQ)&& replaceVariants(builder_,8,"<compare expression>"))   return false;
  boolean result_=false;
  Marker left_marker_=(Marker)builder_.getLatestDoneMarker();
  if (!invalid_left_marker_guard_(builder_,left_marker_,"compareExpression"))   return false;
  Marker marker_=builder_.mark();
  enterErrorRecordingSection(builder_,level_,_SECTION_GENERAL_,"<compare expression>");
  result_=compareExpression_0(builder_,level_ + 1);
  result_=result_ && bitwiseExpressionWrapper(builder_,level_ + 1);
  if (result_) {
    marker_.drop();
    left_marker_.precede().done(COMPARE_EXPRESSION);
  }
 else {
    marker_.rollbackTo();
  }
  result_=exitErrorRecordingSection(builder_,level_,result_,false,_SECTION_GENERAL_,null);
  return result_;
}
