{
  if (descriptor.isRichTextContent()) {
    writeString(valueProvider,descriptor);
    return null;
  }
  if (valueProvider instanceof XmlAttributeValueProvider && isInlineArray(valueProvider.getTrimmed())) {
    writeInlineArray(valueProvider);
    return null;
  }
  if (valueProvider instanceof XmlTagValueProvider) {
    final XmlTagChild[] children=((XmlTagValueProvider)valueProvider).getTag().getValue().getChildren();
    final int length=countActualChildren(children);
    if (length > 0) {
      if (length == 1) {
        out.write(Amf3Types.OBJECT);
        return isStyle ? COMPLEX_STYLE : COMPLEX;
      }
 else {
        out.write(Amf3Types.ARRAY);
        return ARRAY;
      }
    }
  }
  final CharSequence charSequence=writeIfEmpty(valueProvider);
  if (charSequence == null) {
    return null;
  }
  final String value=charSequence.toString();
  try {
    out.writeAmfInt(Integer.parseInt(value));
  }
 catch (  NumberFormatException e) {
    try {
      out.writeAmfDouble(Double.parseDouble(value));
    }
 catch (    NumberFormatException ignored) {
      writer.string(charSequence);
    }
  }
  return null;
}
