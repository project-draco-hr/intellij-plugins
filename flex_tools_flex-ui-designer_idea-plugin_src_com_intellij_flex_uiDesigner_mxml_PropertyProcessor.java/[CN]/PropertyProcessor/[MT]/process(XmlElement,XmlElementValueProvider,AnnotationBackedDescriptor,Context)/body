{
  if (descriptor.isPredefined()) {
    MxmlWriter.LOG.error("unknown language element " + descriptor.getName());
    return null;
  }
  name=descriptor.getName();
  isStyle=descriptor.isStyle();
  isEffect=false;
  final @Nullable String type=descriptor.getType();
  final String typeName=descriptor.getTypeName();
  if (type == null) {
    if (typeName.equals(FlexAnnotationNames.EFFECT)) {
      isStyle=true;
      isEffect=true;
    }
 else {
      if (!typeName.equals(FlexAnnotationNames.BINDABLE)) {
        MxmlWriter.LOG.error("unsupported element: " + element.getText());
      }
      return null;
    }
  }
 else   if (typeName.equals(FlexAnnotationNames.EVENT) || type.equals(JSCommonTypeNames.FUNCTION_CLASS_NAME)) {
    return null;
  }
  ValueWriter valueWriter=processInjected(valueProvider,descriptor,isStyle,context);
  if (valueWriter != null) {
    return valueWriter == InjectedASWriter.IGNORE ? null : valueWriter;
  }
 else   if (descriptor.isAllowsPercentage()) {
    return processPercentable(valueProvider,descriptor);
  }
 else   if (isSkinClass(descriptor)) {
    valueWriter=getSkinProjectClassValueWriter(getSkinProjectClassDocumentFactoryId(valueProvider));
    if (valueWriter != null) {
      return valueWriter;
    }
  }
  return this;
}
