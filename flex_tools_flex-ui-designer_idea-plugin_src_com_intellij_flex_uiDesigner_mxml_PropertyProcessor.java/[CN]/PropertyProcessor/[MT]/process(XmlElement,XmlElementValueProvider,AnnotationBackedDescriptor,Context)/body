{
  if (descriptor.isPredefined()) {
    LOG.error("unknown language element " + descriptor.getName());
    return null;
  }
  name=descriptor.getName();
  isStyle=descriptor.isStyle();
  final @Nullable String type=descriptor.getType();
  final String typeName=descriptor.getTypeName();
  if (type == null) {
    if (typeName.equals(FlexAnnotationNames.EFFECT)) {
      isStyle=true;
      isEffect=true;
    }
 else {
      if (!typeName.equals(FlexAnnotationNames.BINDABLE)) {
        LOG.error("unsupported element: " + element.getText());
      }
      return null;
    }
  }
 else   if (typeName.equals(FlexAnnotationNames.EVENT)) {
    return null;
  }
  ValueWriter valueWriter=injectedASWriter.processProperty(valueProvider,name,type,isStyle,context);
  if (valueWriter == InjectedASWriter.IGNORE) {
    return null;
  }
 else   if (valueWriter != null) {
    if (valueWriter instanceof ClassValueWriter && isSkinClass(descriptor)) {
      SkinProjectClassValueWriter skinProjectClassValueWriter=getSkinProjectClassValueWriter(getSkinProjectClassDocumentFactoryId(((ClassValueWriter)valueWriter).getJsClas(),valueProvider));
      if (skinProjectClassValueWriter != null) {
        return skinProjectClassValueWriter;
      }
    }
    return valueWriter;
  }
 else   if (descriptor.isAllowsPercentage()) {
    return processPercentable(valueProvider,descriptor);
  }
 else   if (isSkinClass(descriptor)) {
    valueWriter=getSkinProjectClassValueWriter(getSkinProjectClassDocumentFactoryId(valueProvider));
    if (valueWriter != null) {
      return valueWriter;
    }
  }
  if (AsCommonTypeNames.CLASS.equals(type)) {
    return new ClassStringValueWriter(valueProvider.getTrimmed());
  }
 else {
    return new ValueWriterImpl(valueProvider,descriptor);
  }
}
