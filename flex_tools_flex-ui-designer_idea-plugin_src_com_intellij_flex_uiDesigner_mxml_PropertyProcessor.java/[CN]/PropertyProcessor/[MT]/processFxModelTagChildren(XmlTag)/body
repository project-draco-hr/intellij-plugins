{
  writer.objectHeader("mx.utils.ObjectProxy");
  final XmlTag[] parentSubTags=parent.getSubTags();
  for (  XmlTag tag : parentSubTags) {
    final String tagLocalName=tag.getLocalName();
    final XmlTag[] subTags=parent.findSubTags(tagLocalName,tag.getNamespace());
    if (subTags.length > 1) {
      writer.property(tagLocalName);
      final int lengthPosition=writer.arrayHeader();
      int length=0;
      for (      XmlTag subTag : subTags) {
        if (writeFxModelTagIfContainsXmlText(subTag,tagLocalName) || processFxModelTagChildren(subTag)) {
          length++;
        }
      }
      writer.getOut().putShort(length,lengthPosition);
    }
 else     if (!writeFxModelTagIfContainsXmlText(tag,tagLocalName)) {
      writer.property(tagLocalName);
      processFxModelTagChildren(tag);
    }
  }
  for (  final XmlAttribute attribute : parent.getAttributes()) {
    mxmlWriter.writeProperty(attribute,new AnyXmlAttributeDescriptorWrapper(attribute.getDescriptor()),null,false,true);
  }
  injectedASWriter.lastMxmlObjectReference=null;
  writer.endObject();
  return true;
}
