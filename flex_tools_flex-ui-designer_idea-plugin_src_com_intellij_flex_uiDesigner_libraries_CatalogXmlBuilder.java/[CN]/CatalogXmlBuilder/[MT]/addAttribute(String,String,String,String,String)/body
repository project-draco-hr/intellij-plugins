{
  if (name.charAt(0) == 'm') {
    mod=value;
  }
 else   if (dependenciesProcessing) {
    if (name.charAt(0) == 'i') {
      dep=value;
    }
 else     if (name.charAt(0) == 't' && (value.charAt(0) == 'i' || value.charAt(0) == 'n') && !skipDependency.value(dep)) {
      dependencies.add(dep);
    }
  }
 else   if (defProcessing) {
    if (skipDefinition.value(value)) {
      System.out.print(value + " skipped\n");
      return;
    }
    Definition oldDefinition=definitionMap.get(value);
    long time=-1;
    if (oldDefinition != null) {
      if (library == null || (time=Long.parseLong(mod)) > oldDefinition.getTime()) {
        oldDefinition.markAsUnresolved();
      }
 else {
        return;
      }
    }
    definition=new Definition(library);
    if (time == -1) {
      definition.setTimeAsString(mod);
    }
 else {
      definition.time=time;
    }
    definitionMap.put(value,definition);
    if (library != null) {
      library.definitionCounter++;
    }
    dependenciesProcessing=true;
  }
 else   if (filesProcessing && name.equals("path")) {
    if (value.startsWith(LOCALE_PREFIX) && value.endsWith(LibraryManager.PROPERTIES_EXTENSION)) {
      final int vlength=value.length();
      final int secondSlashPosition=StringUtil.lastIndexOf(value,'/',LOCALE_PREFIX_LENGTH + 2,vlength - PROPERTIES_EXTENSION_LENGTH - 1);
      final String locale=value.substring(LOCALE_PREFIX_LENGTH,secondSlashPosition);
      @SuppressWarnings("ConstantConditions") THashSet<String> bundles=library.library.resourceBundles.get(locale);
      if (bundles == null) {
        bundles=new THashSet<String>();
        library.library.resourceBundles.put(locale,bundles);
      }
      bundles.add(value.substring(secondSlashPosition + 1,vlength - PROPERTIES_EXTENSION_LENGTH));
    }
  }
}
