{
  final String message;
  if (debuggableActiveCapturedBrowsers.isEmpty()) {
    List<DebuggableWebBrowser> debuggableActiveBrowsers=toDebuggableWebBrowsers(WebBrowserManager.getInstance().getActiveBrowsers());
    if (debuggableActiveBrowsers.isEmpty()) {
      message="<html><body>" + "No supported browsers found." + "<p/>"+ "JavaScript debugging is currently supported in Chrome or Firefox"+ "</body></html>";
    }
 else     if (debuggableActiveBrowsers.size() == 1) {
      return debuggableActiveBrowsers.get(0);
    }
 else {
      message=formatBrowserSelectionHtml(debuggableActiveBrowsers);
    }
  }
 else {
    message=formatBrowserSelectionHtml(debuggableActiveCapturedBrowsers);
  }
  ToolWindowManager.getInstance(environment.getProject()).notifyByBalloon(environment.getExecutor().getToolWindowId(),MessageType.WARNING,message,null,new HyperlinkAdapter(){
    @Override protected void hyperlinkActivated(    HyperlinkEvent e){
      WebBrowser browser=WebBrowserManager.getInstance().findBrowserById(e.getDescription());
      if (browser != null) {
        setWebBrowserToReuse(browser);
        ExecutionUtil.restart(environment);
      }
    }
  }
);
  return null;
}
