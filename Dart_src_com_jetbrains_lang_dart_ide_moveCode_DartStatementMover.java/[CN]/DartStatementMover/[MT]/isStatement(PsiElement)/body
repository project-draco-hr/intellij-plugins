{
  boolean[] result=new boolean[1];
  result[0]=false;
  element.accept(new DartVisitor(){
    public void visitAssertStatement(    @NotNull DartAssertStatement o){
      result[0]=true;
    }
    public void visitBreakStatement(    @NotNull DartBreakStatement o){
      result[0]=true;
    }
    public void visitContinueStatement(    @NotNull DartContinueStatement o){
      result[0]=true;
    }
    public void visitDoWhileStatement(    @NotNull DartDoWhileStatement o){
      result[0]=true;
    }
    public void visitForStatement(    @NotNull DartForStatement o){
      result[0]=true;
    }
    public void visitIfStatement(    @NotNull DartIfStatement o){
      result[0]=true;
    }
    public void visitRethrowStatement(    @NotNull DartRethrowStatement o){
      result[0]=true;
    }
    public void visitReturnStatement(    @NotNull DartReturnStatement o){
      result[0]=true;
    }
    public void visitSwitchStatement(    @NotNull DartSwitchStatement o){
      result[0]=true;
    }
    public void visitTryStatement(    @NotNull DartTryStatement o){
      result[0]=true;
    }
    public void visitWhileStatement(    @NotNull DartWhileStatement o){
      result[0]=true;
    }
    public void visitYieldEachStatement(    @NotNull DartYieldEachStatement o){
      result[0]=true;
    }
    public void visitYieldStatement(    @NotNull DartYieldStatement o){
      result[0]=true;
    }
    public void visitVarDeclarationList(    @NotNull DartVarDeclarationList o){
      result[0]=expressionStatementTeminator(o) != null;
    }
    public void visitExpression(    @NotNull DartExpression o){
      result[0]=expressionStatementTeminator(o) != null;
    }
  }
);
  return result[0];
}
