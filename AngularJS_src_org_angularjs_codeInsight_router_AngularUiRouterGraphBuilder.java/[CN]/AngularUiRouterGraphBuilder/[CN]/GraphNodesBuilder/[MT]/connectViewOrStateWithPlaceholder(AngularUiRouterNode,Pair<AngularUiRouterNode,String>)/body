{
  final String placeholderName=pair.getSecond();
  String usedTemplateUrl=null;
  final Type nodeType=pair.getFirst().getIdentifyingElement().getType();
  if (Type.template.equals(nodeType) || Type.topLevelTemplate.equals(nodeType)) {
    usedTemplateUrl=pair.getFirst().getIdentifyingElement().getName();
  }
 else   if (Type.state.equals(nodeType)) {
    final String parentState=pair.getFirst().getIdentifyingElement().getName();
    final UiRouterState parentStateObject=myStatesMap.get(parentState);
    if (parentStateObject != null) {
      if (parentStateObject.hasViews()) {
        final List<UiView> parentViews=parentStateObject.getViews();
        for (        UiView parentView : parentViews) {
          if (placeholderName.equals(parentView.getName())) {
            usedTemplateUrl=parentView.getTemplate();
            break;
          }
        }
      }
 else       if (!StringUtil.isEmptyOrSpaces(parentStateObject.getTemplateUrl())) {
        usedTemplateUrl=parentStateObject.getTemplateUrl();
      }
    }
  }
  usedTemplateUrl=normalizeTemplateUrl(usedTemplateUrl);
  final DiagramObject placeholder=templatePlaceHoldersNodes.get(Pair.create(usedTemplateUrl,placeholderName));
  if (placeholder != null && placeholder.getParent() != null) {
    final AngularUiRouterEdge edge=new AngularUiRouterEdge(viewNode,placeholder.getParent(),"fills");
    edge.setTargetAnchor(placeholder);
    edges.add(edge);
  }
}
