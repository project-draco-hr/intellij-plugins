{
  if (calls.list.size() < 2) {
    return noSpace();
  }
  boolean isAllProperties=true;
  boolean mustSplit=false;
  boolean mustStopAtNextMethod=false;
  List<TextRange> ranges=new ArrayList<>();
  for (  ASTNode node : calls.list) {
    if (doesMessageHaveArguments(node)) {
      if (mustStopAtNextMethod) {
        return Spacing.createDependentLFSpacing(0,0,ranges,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE);
      }
      isAllProperties=false;
    }
 else {
      if (!isAllProperties) {
        mustSplit=true;
      }
    }
    TextRange range=node.getTextRange();
    ranges.add(new TextRange(range.getStartOffset() - 1,range.getEndOffset()));
    if (node2 == node && isAllProperties) {
      mustStopAtNextMethod=true;
    }
  }
  if (isAllProperties && ranges.size() > 7) {
    mustSplit=true;
  }
  if (mustSplit) {
    return Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE);
  }
 else {
    return Spacing.createDependentLFSpacing(0,0,ranges,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE);
  }
}
