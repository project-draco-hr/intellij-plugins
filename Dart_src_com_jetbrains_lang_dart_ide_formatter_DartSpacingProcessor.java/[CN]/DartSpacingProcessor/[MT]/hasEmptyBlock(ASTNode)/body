{
  if (node.getElementType() == CLASS_DEFINITION)   return false;
  ASTNode child=node;
  while (true) {
    child=child.getLastChildNode();
    if (child == null)     return false;
    if (child.getElementType() == WHITE_SPACE)     child=FormatterUtil.getPreviousNonWhitespaceSibling(child);
    if (child == null)     return false;
    if (child.getElementType() == FUNCTION_BODY) {
      ASTNode next=child.getLastChildNode();
      if (next.getElementType() == WHITE_SPACE)       next=FormatterUtil.getPreviousNonWhitespaceSibling(next);
      if (next != null && next.getElementType() == SEMICOLON) {
        next=FormatterUtil.getPreviousNonWhitespaceSibling(next);
        if (next != null && DartIndentProcessor.EXPRESSIONS.contains(next.getElementType())) {
          ASTNode arrow=FormatterUtil.getPreviousNonWhitespaceSibling(next);
          if (arrow != null && arrow.getElementType() == EXPRESSION_BODY_DEF) {
            return true;
          }
        }
        return false;
      }
      continue;
    }
    if (child.getElementType() == SEMICOLON) {
      ASTNode prev=FormatterUtil.getPreviousNonWhitespaceSibling(child);
      return (prev != null && prev.getElementType() == INITIALIZERS);
    }
    if (!BLOCKS.contains(child.getElementType()))     continue;
    child=child.getLastChildNode();
    if (child == null)     return false;
    if (child.getElementType() == WHITE_SPACE)     child=FormatterUtil.getPreviousNonWhitespaceSibling(child);
    if (child == null)     return false;
    if (child.getElementType() != RBRACE)     return false;
    child=FormatterUtil.getPreviousNonWhitespaceSibling(child);
    return child != null && child.getElementType() == LBRACE;
  }
}
