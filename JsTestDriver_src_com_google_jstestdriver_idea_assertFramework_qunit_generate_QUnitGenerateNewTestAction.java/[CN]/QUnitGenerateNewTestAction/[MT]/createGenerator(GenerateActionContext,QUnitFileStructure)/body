{
  if (fileStructure.hasQUnitSymbols()) {
    final PsiElement psiElement=context.getPsiElementUnderCaret();
    if (psiElement == null) {
      return null;
    }
    return new Runnable(){
      @Override public void run(){
        final int caretOffset=context.getDocumentCaretOffset();
        QUnitTestMethodStructure testMethodStructure=fileStructure.findTestMethodStructureContainingOffset(caretOffset);
        PsiElement element=psiElement;
        if (testMethodStructure != null) {
          element=testMethodStructure.getCallExpression();
        }
        QUnitModuleStructure moduleStructureUnderCaret=fileStructure.findModuleStructureContainingOffset(caretOffset);
        if (moduleStructureUnderCaret != null) {
          element=moduleStructureUnderCaret.getEnclosingCallExpression();
        }
        int suitableCaretOffset=JsGeneratorUtils.findSuitableOffsetForNewStatement(element,caretOffset);
        context.getCaretModel().moveToOffset(suitableCaretOffset);
        Template template=JsGeneratorUtils.createDefaultTemplate("test(\"${test name}\", function() {|});");
        context.startTemplate(template);
      }
    }
;
  }
  return null;
}
