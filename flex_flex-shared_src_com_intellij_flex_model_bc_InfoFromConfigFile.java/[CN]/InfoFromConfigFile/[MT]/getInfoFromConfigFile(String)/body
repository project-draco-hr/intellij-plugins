{
  final File configFile=configFilePath.isEmpty() ? null : new File(configFilePath);
  if (configFile == null || !configFile.isFile()) {
    ourCache.remove(configFilePath);
    return DEFAULT;
  }
  String canonicalPath;
  try {
    canonicalPath=configFile.getCanonicalPath();
  }
 catch (  IOException e) {
    canonicalPath=configFile.getPath();
  }
  Pair<Long,InfoFromConfigFile> data=ourCache.get(canonicalPath);
  final Long currentTimestamp=configFile.lastModified();
  final Long cachedTimestamp=data == null ? null : data.first;
  if (cachedTimestamp == null || !cachedTimestamp.equals(currentTimestamp)) {
    ourCache.remove(canonicalPath);
    String mainClassPath=null;
    String outputPath=null;
    String targetPlayer=null;
    try {
      final Element rootElement=JDOMUtil.load(configFile);
      final Element fileSpecsElement=rootElement.getChild("file-specs",rootElement.getNamespace());
      mainClassPath=fileSpecsElement == null ? null : fileSpecsElement.getChildTextNormalize("path-element",rootElement.getNamespace());
      outputPath=rootElement.getChildTextNormalize("output",rootElement.getNamespace());
      if (outputPath != null && !FileUtil.isAbsolute(outputPath)) {
        try {
          outputPath=FileUtil.toSystemIndependentName(new File(configFile.getParent(),outputPath).getCanonicalPath());
        }
 catch (        IOException e) {
          outputPath=FileUtil.toSystemIndependentName(new File(configFile.getParent(),outputPath).getAbsolutePath());
        }
      }
      targetPlayer=rootElement.getChildTextNormalize("target-player",rootElement.getNamespace());
    }
 catch (    IOException ignore) {
    }
catch (    JDOMException ignore) {
    }
    final String outputFileName=outputPath == null ? null : PathUtilRt.getFileName(outputPath);
    final String outputFolderPath=outputPath == null ? null : PathUtilRt.getParentPath(outputPath);
    data=Pair.create(currentTimestamp,new InfoFromConfigFile(configFile,mainClassPath,outputFileName,outputFolderPath,targetPlayer));
    ourCache.put(canonicalPath,data);
  }
  return data.second;
}
