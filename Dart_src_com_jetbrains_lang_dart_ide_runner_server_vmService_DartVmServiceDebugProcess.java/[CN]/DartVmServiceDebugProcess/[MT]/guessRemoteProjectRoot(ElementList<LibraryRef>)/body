{
  final VirtualFile pubspec=myDartUrlResolver.getPubspecYamlFile();
  if (pubspec == null)   return;
  final VirtualFile localProjectRoot=pubspec.getParent();
  for (  LibraryRef library : libraries) {
    final String remoteUri=library.getUri();
    if (remoteUri.startsWith("dart:"))     continue;
    if (remoteUri.startsWith("package:"))     continue;
    final PsiFile[] localFilesWithSameName=ApplicationManager.getApplication().runReadAction(new Computable<PsiFile[]>(){
      @Override public PsiFile[] compute(){
        final String remoteFileName=PathUtil.getFileName(remoteUri);
        final GlobalSearchScope scope=GlobalSearchScopesCore.directoryScope(getSession().getProject(),localProjectRoot,true);
        return FilenameIndex.getFilesByName(getSession().getProject(),remoteFileName,scope);
      }
    }
);
    int howManyFilesMatch=0;
    for (    PsiFile psiFile : localFilesWithSameName) {
      final VirtualFile file=DartResolveUtil.getRealVirtualFile(psiFile);
      if (file == null)       continue;
      LOG.assertTrue(file.getPath().startsWith(localProjectRoot.getPath() + "/"),file.getPath() + "," + localProjectRoot.getPath());
      final String relPath=file.getPath().substring(localProjectRoot.getPath().length());
      if (relPath.startsWith("/lib/") && remoteUri.endsWith(relPath)) {
        howManyFilesMatch++;
        myRemoteProjectRootUri=remoteUri.substring(0,remoteUri.length() - relPath.length());
      }
    }
    if (howManyFilesMatch > 0) {
      break;
    }
  }
}
