{
  configureByFile(BASE_PATH + "15.js2");
  final Object[] items=getTopLevelItems();
  assertEquals(3,items.length);
  assertEquals("ZZZ",getText(items[1]));
  assertEquals("ZZZ2",getText(items[2]));
  assertEquals("A15",getText(items[0]));
  List<? extends AbstractTreeNode> treeNodes=getChildren(items[1]);
  assertEquals(4 + OBJECT_METHODS_COUNT,treeNodes.size());
  assertEquals("EE",getText(treeNodes.get(0)));
  assertEquals("aaa",getText(treeNodes.get(OBJECT_METHODS_COUNT + 1)));
  assertEquals("c2",getText(treeNodes.get(OBJECT_METHODS_COUNT + 2)));
  assertEquals("ttt",getText(treeNodes.get(OBJECT_METHODS_COUNT + 3)));
  treeNodes=getChildren(items[0]);
  assertEquals(7 + OBJECT_METHODS_COUNT,treeNodes.size());
  assertEquals("automation():Object",getText(treeNodes.get(0)));
  assertEquals("initialized():Boolean",getText(treeNodes.get(3)));
  assertEquals("register(c:Object):void",getText(treeNodes.get(8)));
  assertEquals("_automation:Object",getText(treeNodes.get(OBJECT_METHODS_COUNT + 3)));
  assertEquals("aaa",getText(treeNodes.get(OBJECT_METHODS_COUNT + 4)));
  assertEquals("c2",getText(treeNodes.get(OBJECT_METHODS_COUNT + 5)));
  assertEquals("delegate:Object",getText(treeNodes.get(OBJECT_METHODS_COUNT + 6)));
}
