{
  try {
    initSettingsIfNeeded();
    XMPPConnection.addConnectionListener(new ConnectionEstablishedListener(){
      public void connectionEstablished(      XMPPConnection connection){
        XMPPConnection.removeConnectionListener(this);
        fireConnected(connection);
      }
    }
);
    String serviceName=server;
    if ("talk.google.com".equals(server)) {
      serviceName="gmail.com";
    }
    String user=username;
    int at=username.indexOf('@');
    if (at > 0) {
      serviceName=username.substring(at + 1);
      user=username.substring(0,at);
    }
    XMPPConnection connection;
    if (forceOldSSL) {
      connection=new SSLXMPPConnection(server,port,serviceName);
    }
 else {
      connection=new XMPPConnection(server,port,serviceName);
    }
    if (createAccount && connection.getAccountManager().supportsAccountCreation()) {
      connection.getAccountManager().createAccount(user,password.replaceAll("&","&amp;"));
    }
    if (!connection.isConnected())     return StringUtil.getMsg("unable.to.connect.to",server,port);
    connection.login(user,password,IDETALK_RESOURCE);
    saveAccountData(server,port,username,password,forceOldSSL);
    if (rosterIsNotAvailable(connection)) {
      connection.close();
      return StringUtil.getMsg("no.roster.try.again");
    }
    myConnection=connection;
    fireAuthenticated();
    myConnection.addConnectionListener(new SmackConnectionListener());
  }
 catch (  XMPPException e) {
    LOG.info(getMessage(e),e);
    return getMessage(e);
  }
catch (  IllegalStateException e) {
    LOG.info(e,e);
    return e.getMessage();
  }
  return null;
}
