{
  final VirtualFile virtualFile=getFileToRun(context);
  if (virtualFile == null) {
    return false;
  }
  final Project project=configuration.getProject();
  final PsiElement element=context.getPsiLocation();
  if (element == null) {
    return false;
  }
  final Module module=ModuleUtilCore.findModuleForFile(virtualFile,project);
  if (module == null)   return false;
  String mainClassName=null;
  String formatterOptions=null;
  final Location location=context.getLocation();
  if (location != null) {
    if (LocationUtil.isJarAttached(location,PsiDirectory.EMPTY_ARRAY,CUCUMBER_1_0_MAIN_CLASS)) {
      mainClassName=CUCUMBER_1_0_MAIN_CLASS;
    }
 else     if (LocationUtil.isJarAttached(location,PsiDirectory.EMPTY_ARRAY,CUCUMBER_1_1_MAIN_CLASS)) {
      mainClassName=CUCUMBER_1_1_MAIN_CLASS;
    }
    if (LocationUtil.isJarAttached(location,PsiDirectory.EMPTY_ARRAY,CUCUMBER_1_2_PLUGIN_CLASS)) {
      formatterOptions=FORMATTER_OPTIONS_1_2;
    }
 else {
      formatterOptions=FORMATTER_OPTIONS;
    }
  }
  if (mainClassName == null) {
    return false;
  }
  final VirtualFile file=getFileToRun(context);
  if (file == null) {
    return false;
  }
  if (StringUtil.isEmpty(configuration.getGlue())) {
    final NullableComputable<String> glue=getStepsGlue(element);
    configuration.setGlue(glue);
  }
  configuration.setNameFilter(getNameFilter(context));
  configuration.setFilePath(file.getPath());
  configuration.setProgramParameters(formatterOptions);
  if (StringUtil.isEmpty(configuration.MAIN_CLASS_NAME)) {
    configuration.MAIN_CLASS_NAME=mainClassName;
  }
  if (configuration.getNameFilter() != null && configuration.getNameFilter().length() > 0) {
    final String newProgramParameters=configuration.getProgramParameters() + " --name \"" + configuration.getNameFilter()+ "\"";
    configuration.setProgramParameters(newProgramParameters);
  }
  configuration.myGeneratedName=getConfigurationName(context);
  configuration.setGeneratedName();
  setupConfigurationModule(context,configuration);
  JavaRunConfigurationExtensionManager.getInstance().extendCreatedConfiguration(configuration,location);
  return true;
}
