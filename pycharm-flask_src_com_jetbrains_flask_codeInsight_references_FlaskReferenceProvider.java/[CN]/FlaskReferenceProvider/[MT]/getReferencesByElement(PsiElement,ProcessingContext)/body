{
  PyStringLiteralExpression stringLiteral=(PyStringLiteralExpression)element;
  if (FlaskTemplateManager.isTemplateReference(stringLiteral)) {
    return new PyTemplateFileReferenceSet(stringLiteral).getAllReferences();
  }
 else   if (FlaskTemplateManager.isCallArgument(stringLiteral,0,FlaskNames.URL_FOR,FlaskNames.HELPERS_PY)) {
    return new PsiReference[]{new FlaskViewMethodReference(stringLiteral)};
  }
 else   if (isRouteDecoratorArgument(stringLiteral)) {
    WerkzeugRoutingRule rule=WerkzeugRoutingRule.parse(stringLiteral);
    List<PsiReference> refs=new ArrayList<PsiReference>();
    for (    WerkzeugRoutingRule.Parameter parameter : rule.parameters) {
      refs.add(new FlaskRouteParameterReference(stringLiteral,parameter));
    }
    return refs.toArray(new PsiReference[refs.size()]);
  }
  return PsiReference.EMPTY_ARRAY;
}
