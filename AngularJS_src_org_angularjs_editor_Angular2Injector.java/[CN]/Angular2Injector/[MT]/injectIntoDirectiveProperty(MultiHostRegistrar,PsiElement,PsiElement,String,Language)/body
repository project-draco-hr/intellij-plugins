{
  if (parent instanceof JSProperty && name.equals(((JSProperty)parent).getName())) {
    final JSCallExpression callExpression=PsiTreeUtil.getParentOfType(parent,JSCallExpression.class);
    final JSExpression expression=callExpression != null ? callExpression.getMethodExpression() : null;
    if (expression instanceof JSReferenceExpression) {
      final String command=((JSReferenceExpression)expression).getReferenceName();
      if (!AngularJS2IndexingHandler.isDirective(command) && !"View".equals(command))       return true;
      final TextRange range=ElementManipulators.getValueTextRange(context);
      registrar.startInjecting(language).addPlace(null,null,(PsiLanguageInjectionHost)context,range).doneInjecting();
    }
  }
  return false;
}
