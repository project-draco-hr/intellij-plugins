{
  final Project project=context.getProject();
  if (!AngularIndexUtil.hasAngularJS2(project))   return;
  final PsiElement parent=context.getParent();
  if (context instanceof JSLiteralExpressionImpl && ((JSLiteralExpressionImpl)context).isQuotedLiteral()) {
    if (injectIntoDirectiveProperty(registrar,context,parent,"template",Angular2HTMLLanguage.INSTANCE))     return;
    if (!(parent instanceof JSArrayLiteralExpression))     return;
    final JSProperty property=ObjectUtils.tryCast(parent.getParent(),JSProperty.class);
    if (injectIntoDirectiveProperty(registrar,context,property,"styles",CSSLanguage.INSTANCE))     return;
  }
  if (context instanceof XmlAttributeValueImpl && parent instanceof XmlAttribute) {
    final int length=context.getTextLength();
    if ((AngularAttributesRegistry.isEventAttribute(((XmlAttribute)parent).getName(),project) || AngularAttributesRegistry.isBindingAttribute(((XmlAttribute)parent).getName(),project)) && length > 0) {
      registrar.startInjecting(AngularJSLanguage.INSTANCE).addPlace(null,null,(PsiLanguageInjectionHost)context,ElementManipulators.getValueTextRange(context)).doneInjecting();
    }
  }
}
