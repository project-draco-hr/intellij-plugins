{
  String result="";
  if (regexp.startsWith(PREFIX_CHAR)) {
    regexp=regexp.substring(1);
  }
  if (regexp.endsWith(SUFFIX_CHAR)) {
    regexp=regexp.substring(0,regexp.length() - 1);
  }
  int par=0;
  int squareBrace=0;
  int brace=0;
  StringBuilder sb=new StringBuilder();
  for (int i=0; i < regexp.length(); i++) {
    char c=regexp.charAt(i);
    if (c == '#') {
      sb=new StringBuilder();
      continue;
    }
    if (c != ESCAPE_SLASH) {
      if (c == LEFT_PAR) {
        par++;
      }
      if (c == RIGHT_PAR) {
        if (par > 0) {
          par--;
        }
      }
      if (c == LEFT_BRACE) {
        brace++;
      }
      if (c == RIGHT_BRACE) {
        if (brace > 0) {
          brace--;
        }
      }
      if (c == LEFT_SQUARE_BRACE) {
        squareBrace++;
      }
      if (c == RIGHT_SQUARE_BRACE) {
        if (squareBrace > 0) {
          squareBrace--;
        }
      }
    }
 else {
      sb=new StringBuilder();
      i++;
    }
    if (par > 0 | squareBrace > 0 | brace > 0) {
      if (par + squareBrace + brace == 1) {
        sb=new StringBuilder();
      }
      continue;
    }
    if (isAlphabetCharOrSpace(c)) {
      sb.append(c);
      if (sb.length() > 0) {
        if (sb.toString().length() > result.length()) {
          result=sb.toString();
        }
      }
    }
 else {
      sb=new StringBuilder();
    }
  }
  if (sb.length() > 0) {
    if (sb.toString().length() > result.length()) {
      result=sb.toString();
    }
  }
  return result;
}
