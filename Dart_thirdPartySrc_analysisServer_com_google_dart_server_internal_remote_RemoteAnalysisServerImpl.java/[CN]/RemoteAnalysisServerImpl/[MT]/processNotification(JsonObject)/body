{
  JsonElement eventElement=response.get("event");
  if (eventElement == null || !eventElement.isJsonPrimitive()) {
    return false;
  }
  String event=eventElement.getAsString();
  if (event.equals(ANALYSIS_NOTIFICATION_ERRORS)) {
    new NotificationAnalysisErrorsProcessor(listener).process(response);
  }
 else   if (event.equals(ANALYSIS_NOTIFICATION_FLUSH_RESULTS)) {
    new NotificationAnalysisFlushResultsProcessor(listener).process(response);
  }
 else   if (event.equals(ANALYSIS_NOTIFICATION_HIGHTLIGHTS)) {
    new NotificationAnalysisHighlightsProcessor(listener).process(response);
  }
 else   if (event.equals(ANALYSIS_NOTIFICATION_IMPLEMENTED)) {
    new NotificationAnalysisImplementedProcessor(listener).process(response);
  }
 else   if (event.equals(ANALYSIS_NOTIFICATION_NAVIGATION)) {
    new NotificationAnalysisNavigationProcessor(listener).process(response);
  }
 else   if (event.equals(ANALYSIS_NOTIFICATION_OCCURRENCES)) {
    new NotificationAnalysisOccurrencesProcessor(listener).process(response);
  }
 else   if (event.equals(ANALYSIS_NOTIFICATION_OUTLINE)) {
    new NotificationAnalysisOutlineProcessor(listener).process(response);
  }
 else   if (event.equals(ANALYSIS_NOTIFICATION_OVERRIDES)) {
    new NotificationAnalysisOverridesProcessor(listener).process(response);
  }
 else   if (event.equals(ANALYSIS_NOTIFICATION_ANALYZED_FILES)) {
    new NotificationAnalysisAnalyzedFilesProcessor(listener).process(response);
  }
 else   if (event.equals(COMPLETION_NOTIFICATION_RESULTS)) {
    new NotificationCompletionResultsProcessor(listener).process(response);
  }
 else   if (event.equals(SEARCH_NOTIFICATION_RESULTS)) {
    new NotificationSearchResultsProcessor(listener).process(response);
  }
 else   if (event.equals(SERVER_NOTIFICATION_STATUS)) {
    new NotificationServerStatusProcessor(listener).process(response);
  }
 else   if (event.equals(SERVER_NOTIFICATION_ERROR)) {
    new NotificationServerErrorProcessor(listener).process(response);
  }
 else   if (event.equals(SERVER_NOTIFICATION_CONNECTED)) {
    new NotificationServerConnectedProcessor(listener).process(response);
  }
 else   if (event.equals(LAUNCH_DATA_NOTIFICATION_RESULTS)) {
    new NotificationExecutionLaunchDataProcessor(listener).process(response);
  }
  return true;
}
