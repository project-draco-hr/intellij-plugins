{
  final PsiElement attributeOrTag=context instanceof XmlAttributeValue ? context.getParent() : context;
  final String name=attributeOrTag instanceof XmlAttribute ? ((XmlAttribute)attributeOrTag).getName() : attributeOrTag instanceof XmlTag ? ((XmlTag)attributeOrTag).getName() : null;
  if (name != null && !name.contains(".")) {
    return FlexBundle.message("clear.directive.state.specific.error");
  }
  final PsiElement parent=attributeOrTag.getParent();
  final XmlElementDescriptor descriptor=parent instanceof XmlTag ? ((XmlTag)parent).getDescriptor() : null;
  final PsiElement declaration=descriptor instanceof ClassBackedElementDescriptor ? descriptor.getDeclaration() : null;
  final PsiElement iStyleClient=JSResolveUtil.findClassByQName(I_STYLE_CLIENT_CLASS,attributeOrTag);
  if (!(declaration instanceof JSClass) || !(iStyleClient instanceof JSClass) || !JSResolveUtil.checkClassHasParentOfAnotherOne((JSClass)JSResolveUtil.unwrapProxy(declaration),(JSClass)JSResolveUtil.unwrapProxy(iStyleClient),null)) {
    return FlexBundle.message("clear.directive.IStyleClient.error");
  }
  return null;
}
