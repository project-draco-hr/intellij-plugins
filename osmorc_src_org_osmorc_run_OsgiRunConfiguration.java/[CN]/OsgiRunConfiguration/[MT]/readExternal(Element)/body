{
  List<Element> children=element.getChildren(BUNDLE_ELEMENT);
  _bundlesToDeploy.clear();
  for (  Element child : children) {
    String name=child.getAttributeValue(NAME_ATTRIBUTE);
    String url=child.getAttributeValue(URL_ATTRIBUTE);
    String startLevel=child.getAttributeValue(START_LEVEL_ATTRIBUTE);
    String typeName=child.getAttributeValue(TYPE_ATTRIBUTE);
    SelectedBundle.BundleType type;
    try {
      type=SelectedBundle.BundleType.valueOf(typeName);
    }
 catch (    Exception e) {
      type=SelectedBundle.BundleType.Module;
    }
    SelectedBundle selectedBundle=new SelectedBundle(name,url,type);
    if (startLevel != null) {
      try {
        selectedBundle.setStartLevel(Integer.parseInt(startLevel));
      }
 catch (      NumberFormatException e) {
      }
    }
    _bundlesToDeploy.add(selectedBundle);
  }
  _vmParameters=element.getAttributeValue(VM_PARAMETERS_ATTRIBUTE);
  if (_vmParameters == null) {
    _vmParameters="";
  }
  Element framework=element.getChild(FRAMEWORK_ELEMENT);
  if (framework != null) {
    String name=framework.getAttributeValue(INSTANCE_ATTRIBUTE);
    if (name != null) {
      ApplicationSettings settings=ServiceManager.getService(ApplicationSettings.class);
      _instanceToUse=settings.getFrameworkInstance(name);
    }
  }
  Element additionalProperties=element.getChild(ADDITIONAL_PROPERTIES_ELEMENT);
  if (additionalProperties != null) {
    List<Attribute> attributes=additionalProperties.getAttributes();
    for (    Attribute attribute : attributes) {
      _additionalProperties.put(attribute.getName(),attribute.getValue());
    }
  }
  _includeAllBundlesInClassPath=Boolean.valueOf(element.getAttributeValue(INCLUDE_ALL_BUNDLES_IN_CLASS_PATH_ATTRIBUTE,"false"));
  super.readExternal(element);
}
