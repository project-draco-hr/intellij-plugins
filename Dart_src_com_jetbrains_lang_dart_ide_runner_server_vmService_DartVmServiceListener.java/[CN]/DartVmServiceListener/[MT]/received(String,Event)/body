{
switch (event.getKind()) {
case IsolateStart:
    break;
case IsolateRunnable:
  break;
case IsolateExit:
myDebugProcess.isolateExit(event.getIsolate());
break;
case IsolateUpdate:
break;
case PauseStart:
myDebugProcess.getVmServiceWrapper().handleIsolatePausedOnStart(event.getIsolate());
break;
case PauseExit:
break;
case PauseBreakpoint:
myDebugProcess.isolateSuspended(event.getIsolate());
ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
@Override public void run(){
onPauseBreakpoint(event.getIsolate(),event.getPauseBreakpoints(),event.getTopFrame());
}
}
);
break;
case PauseInterrupted:
myDebugProcess.isolateSuspended(event.getIsolate());
break;
case PauseException:
myDebugProcess.isolateSuspended(event.getIsolate());
break;
case Resume:
myDebugProcess.isolateResumed(event.getIsolate());
break;
case BreakpointAdded:
break;
case BreakpointResolved:
myBreakpointHandler.breakpointResolved(event.getBreakpoint());
break;
case BreakpointRemoved:
break;
case GC:
break;
case WriteEvent:
break;
}
}
