{
  AnalysisContext analysisContext=SoftReference.dereference(myAnalysisContextRef);
  if (analysisContext != null && Comparing.equal(sdkPath,mySdkPath) && Comparing.equal(packagesFolder,myDartPackagesFolder)) {
    applyChangeSet(analysisContext,annotatedFile);
    myCreatedFiles.clear();
  }
 else {
    final DartUriResolver dartUriResolver=new DartUriResolver(new DirectoryBasedDartSdk(new File(sdkPath)));
    final UriResolver fileResolver=new DartFileResolver(myProject);
    final SourceFactory sourceFactory=packagesFolder == null ? new SourceFactory(dartUriResolver,fileResolver) : new SourceFactory(dartUriResolver,fileResolver,new PackageUriResolver(new File(packagesFolder.getPath())));
    analysisContext=AnalysisEngine.getInstance().createAnalysisContext();
    analysisContext.setSourceFactory(sourceFactory);
    mySdkPath=sdkPath;
    myDartPackagesFolder=packagesFolder;
    myAnalysisContextRef=new WeakReference<AnalysisContext>(analysisContext);
  }
  return analysisContext;
}
