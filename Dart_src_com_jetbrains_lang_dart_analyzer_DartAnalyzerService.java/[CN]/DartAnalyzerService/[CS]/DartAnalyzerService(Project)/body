{
  myProject=project;
  final VirtualFileAdapter listener=new VirtualFileAdapter(){
    public void beforePropertyChange(    @NotNull final VirtualFilePropertyEvent event){
      if (VirtualFile.PROP_NAME.equals(event.getPropertyName())) {
        fileDeleted(event);
      }
    }
    public void beforeFileMovement(    @NotNull final VirtualFileMoveEvent event){
      fileDeleted(event);
    }
    public void fileDeleted(    @NotNull final VirtualFileEvent event){
      if (FileUtilRt.extensionEquals(event.getFileName(),DartFileType.DEFAULT_EXTENSION)) {
        myFileToSourceMap.remove(event.getFile());
      }
    }
    public void propertyChanged(    @NotNull final VirtualFilePropertyEvent event){
      if (VirtualFile.PROP_NAME.equals(event.getPropertyName())) {
        fileCreated(event);
      }
    }
    public void fileMoved(    @NotNull final VirtualFileMoveEvent event){
      fileCreated(event);
    }
    public void fileCopied(    @NotNull final VirtualFileCopyEvent event){
      fileCreated(event);
    }
    public void fileCreated(    @NotNull final VirtualFileEvent event){
      if (FileUtilRt.extensionEquals(event.getFileName(),DartFileType.DEFAULT_EXTENSION)) {
        myCreatedFiles.add(event.getFile());
      }
    }
  }
;
  LocalFileSystem.getInstance().addVirtualFileListener(listener);
  Disposer.register(project,new Disposable(){
    public void dispose(){
      LocalFileSystem.getInstance().removeVirtualFileListener(listener);
    }
  }
);
}
