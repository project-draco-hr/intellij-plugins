{
  Thread updateThread1=new Thread(new Runnable(){
    @Override public void run(){
      for (int i=0; i < 1000; i++) {
        myCache.updateWith(makeManifestHolder("MANIFEST_T1_" + i + ".MF",bundleSymbolicName("foo.bar.t1").bundleVersion("1.0." + i)));
      }
      System.out.println("T1 done");
    }
  }
);
  Thread updateThread2=new Thread(new Runnable(){
    @Override public void run(){
      for (int i=0; i < 1000; i++) {
        myCache.updateWith(makeManifestHolder("MANIFEST_T2_" + i + ".MF",bundleSymbolicName("foo.bar.t2").bundleVersion("1.0." + i)));
      }
      System.out.println("T2 done");
    }
  }
);
  CancelableRunnable cancelableRunnable=new CancelableRunnable(){
    @Override public void run(){
      for (int i=0; i < 1000 && !requestStop; i++) {
        myCache.whoIs("foo.bar.t1");
      }
      System.out.println("T3 done");
    }
  }
;
  Thread readThread=new Thread(cancelableRunnable);
  updateThread1.start();
  updateThread2.start();
  readThread.start();
  long elapsed=0;
  long last=System.currentTimeMillis();
  while (updateThread1.isAlive() || updateThread2.isAlive()) {
    elapsed+=System.currentTimeMillis() - last;
    last=System.currentTimeMillis();
    if (elapsed > 10000) {
      fail("Probable deadlock in BundleCache");
    }
    try {
      Thread.sleep(500);
    }
 catch (    InterruptedException ignore) {
    }
  }
  cancelableRunnable.requestStop=true;
}
