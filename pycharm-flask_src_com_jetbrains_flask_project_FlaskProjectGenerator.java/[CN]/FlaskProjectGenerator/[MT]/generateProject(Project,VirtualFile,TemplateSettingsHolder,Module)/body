{
  if (needInstallFlask(settings,module)) {
    ProgressManager.getInstance().run(new Task.Backgroundable(project,"Installing Flask",false){
      @Override public void run(      @NotNull ProgressIndicator indicator){
        indicator.setText("Installing Flask...");
        Sdk targetSdk=settings != null ? settings.getSdk() : ModuleRootManager.getInstance(module).getSdk();
        final PyPackageManager packageManager=PyPackageManager.getInstance(targetSdk);
        try {
          packageManager.install("Flask");
          packageManager.refresh();
        }
 catch (        final PyExternalProcessException e) {
          SwingUtilities.invokeLater(new Runnable(){
            @Override public void run(){
              packageManager.showInstallationError(project,"Install Flask failed",e.toString());
            }
          }
);
        }
      }
    }
);
  }
  StartupManager.getInstance(project).runWhenProjectIsInitialized(new Runnable(){
    @Override public void run(){
      createFlaskMain(module,baseDir,settings);
    }
  }
);
}
