{
  if (isDisposed()) {
    throw new ManifestHolderDisposedException();
  }
  if (myBundleManifest == null) {
    VirtualFile[] classRoots=myLibrary.getFiles(OrderRootType.CLASSES);
    for (    VirtualFile classRoot : classRoots) {
      if (classRoot.getUrl().equals(myPath)) {
        VirtualFile classDir;
        if (classRoot.isDirectory()) {
          classDir=classRoot;
        }
 else {
          classDir=JarFileSystem.getInstance().getJarRootForLocalFile(classRoot);
        }
        if (classDir != null) {
          final VirtualFile manifestFile=classDir.findFileByRelativePath("META-INF/MANIFEST.MF");
          if (manifestFile != null) {
            PsiFile psiFile=new ReadAction<PsiFile>(){
              @Override protected void run(              Result<PsiFile> psiFileResult) throws Throwable {
                psiFileResult.setResult(PsiManager.getInstance(myProject).findFile(manifestFile));
              }
            }
.execute().getResultObject();
            myBundleManifest=new BundleManifestImpl((ManifestFile)psiFile);
          }
        }
        break;
      }
    }
  }
  return myBundleManifest;
}
