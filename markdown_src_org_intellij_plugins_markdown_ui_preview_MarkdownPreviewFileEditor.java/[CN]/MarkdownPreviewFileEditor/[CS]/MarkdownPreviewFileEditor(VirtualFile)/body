{
  myFile=file;
  myDocument=FileDocumentManager.getInstance().getDocument(myFile);
  if (myDocument != null) {
    myDocument.addDocumentListener(new DocumentAdapter(){
      @Override public void beforeDocumentChange(      DocumentEvent e){
        myAlarm.cancelAllRequests();
      }
      @Override public void documentChanged(      final DocumentEvent e){
        myAlarm.addRequest(new Runnable(){
          @Override public void run(){
            updateHtml(true);
          }
        }
,PARSING_CALL_TIMEOUT_MS);
      }
    }
,this);
  }
  myHtmlPanelWrapper=new JPanel(new BorderLayout());
  final MarkdownApplicationSettings settings=MarkdownApplicationSettings.getInstance();
  setUpPanel(settings);
  getPanelGuaranteed().setHtml("<html></html>");
  getPanelGuaranteed().render();
  MessageBusConnection settingsConnection=ApplicationManager.getApplication().getMessageBus().connect(this);
  MarkdownApplicationSettings.SettingsChangedListener settingsChangedListener=new MarkdownApplicationSettings.SettingsChangedListener(){
    @Override public void onSettingsChange(    @NotNull MarkdownApplicationSettings settings){
      setUpPanel(settings);
      updatePanelCssSettings(settings.getMarkdownCssSettings());
    }
  }
;
  settingsConnection.subscribe(MarkdownApplicationSettings.SettingsChangedListener.TOPIC,settingsChangedListener);
  settingsChangedListener.onSettingsChange(settings);
}
