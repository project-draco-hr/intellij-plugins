{
  PsiFile templateFile=null;
  final Map<String,SmartPsiElementPointer<PsiElement>> placeholders=new HashMap<>();
  if (urlProperty != null && urlProperty.getValue() != null) {
    int offset=urlProperty.getValue().getTextRange().getEndOffset() - 1;
    final PsiReference reference=urlProperty.getContainingFile().findReferenceAt(offset);
    if (reference != null) {
      final PsiElement templateFileElement=reference.resolve();
      if (templateFileElement != null && templateFileElement.isValid()) {
        templateFile=templateFileElement.getContainingFile();
        final Set<String> placeholdersSet=new HashSet<>();
        final FileBasedIndex instance=FileBasedIndex.getInstance();
        final GlobalSearchScope scope=GlobalSearchScope.fileScope(urlProperty.getProject(),templateFile.getVirtualFile());
        instance.processAllKeys(AngularUiRouterViewsIndex.UI_ROUTER_VIEWS_CACHE_INDEX,new Processor<String>(){
          @Override public boolean process(          String view){
            placeholdersSet.add(view);
            return true;
          }
        }
,scope,null);
        final PsiFile finalTemplateFile=templateFile;
        for (        String key : placeholdersSet) {
          instance.processValues(AngularUiRouterViewsIndex.UI_ROUTER_VIEWS_CACHE_INDEX,key,null,new FileBasedIndex.ValueProcessor<AngularViewDefinition>(){
            @Override public boolean process(            VirtualFile file,            AngularViewDefinition value){
              final JSImplicitElementImpl.Builder builder=new JSImplicitElementImpl.Builder(JSQualifiedNameImpl.fromQualifiedName(key),null);
              final JSOffsetBasedImplicitElement implicitElement=new JSOffsetBasedImplicitElement(builder,(int)value.getStartOffset(),finalTemplateFile);
              placeholders.put(key,mySmartPointerManager.createSmartPsiElementPointer(implicitElement));
              return true;
            }
          }
,scope);
        }
      }
    }
  }
  final Template template=new Template(url,templateFile == null ? null : mySmartPointerManager.createSmartPsiElementPointer(templateFile));
  template.setViewPlaceholders(placeholders);
  myTemplatesMap.put(AngularUiRouterGraphBuilder.normalizeTemplateUrl(url),template);
}
