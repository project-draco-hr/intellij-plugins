{
  final VirtualFile srcDir=LocalFileSystem.getInstance().findFileByPath(VfsUtilCore.urlToPath(sourceUrl));
  final Ref<Boolean> testClassesFound=Ref.create(false);
  final Ref<Boolean> nonTestClassesFound=Ref.create(false);
  if (srcDir != null && !"src".equals(srcDir.getName())) {
    VfsUtilCore.visitChildrenRecursively(srcDir,new VirtualFileVisitor(){
      @NotNull public Result visitFileEx(      @NotNull final VirtualFile file){
        if (nonTestClassesFound.get()) {
          return SKIP_CHILDREN;
        }
        if (file.isDirectory()) {
          if ("flexUnitTests".equals(file.getName())) {
            testClassesFound.set(true);
            return SKIP_CHILDREN;
          }
          return CONTINUE;
        }
 else {
          final String ext=StringUtil.notNullize(file.getExtension()).toLowerCase();
          if ("mxml".equals(ext) || "fxg".equals(ext)) {
            nonTestClassesFound.set(true);
          }
 else           if ("as".equals(ext)) {
            if (file.getNameWithoutExtension().endsWith("Test") || file.getName().contains("Test") && file.getName().contains("Suite")) {
              testClassesFound.set(true);
            }
 else {
              nonTestClassesFound.set(true);
            }
          }
          return CONTINUE;
        }
      }
    }
);
  }
  final boolean isTest=testClassesFound.get() && !nonTestClassesFound.get();
  contentEntry.addSourceFolder(sourceUrl,isTest);
}
