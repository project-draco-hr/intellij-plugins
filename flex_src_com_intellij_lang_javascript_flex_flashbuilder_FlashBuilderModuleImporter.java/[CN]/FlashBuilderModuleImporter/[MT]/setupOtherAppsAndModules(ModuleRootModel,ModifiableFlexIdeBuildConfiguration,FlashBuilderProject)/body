{
  for (  String mainClass : fbProject.getApplicationClassNames()) {
    final ModifiableFlexIdeBuildConfiguration bc=myFlexConfigEditor.copyConfiguration(mainBC,mainBC.getNature());
    final String shortClassName=StringUtil.getShortName(mainClass);
    bc.setName(shortClassName);
    bc.setMainClass(mainClass);
    bc.setOutputFileName(shortClassName + ".swf");
    if (bc.getTargetPlatform() == TargetPlatform.Desktop) {
      setupAirDescriptor(bc,rootModel);
      bc.getAirDesktopPackagingOptions().setPackageFileName(shortClassName);
    }
    if (bc.getTargetPlatform() == TargetPlatform.Mobile) {
      setupAirDescriptor(bc,rootModel);
      bc.getAndroidPackagingOptions().setPackageFileName(shortClassName);
      bc.getIosPackagingOptions().setPackageFileName(shortClassName);
    }
    FlexModuleBuilder.createRunConfiguration(rootModel.getModule(),bc.getName());
  }
  final Collection<ModifiableFlexIdeBuildConfiguration> rlms=new ArrayList<ModifiableFlexIdeBuildConfiguration>();
  for (  final Pair<String,String> sourcePathAndDestPath : fbProject.getModules()) {
    final ModifiableFlexIdeBuildConfiguration bc=myFlexConfigEditor.copyConfiguration(mainBC,mainBC.getNature());
    bc.setCssFilesToCompile(Collections.<String>emptyList());
    final String mainClass=getModuleClassName(fbProject,sourcePathAndDestPath.first,rootModel.getSourceRootUrls());
    final String shortName=StringUtil.getShortName(mainClass);
    bc.setName(shortName);
    bc.setOutputType(OutputType.RuntimeLoadedModule);
    bc.setMainClass(mainClass);
    bc.setOutputFileName(PathUtil.getFileName(sourcePathAndDestPath.second));
    final String parentPath=PathUtil.getParentPath(sourcePathAndDestPath.second);
    bc.setOutputFolder(bc.getOutputFolder() + (parentPath.isEmpty() ? "" : ("/" + parentPath)));
    rlms.add(bc);
  }
  if (!rlms.isEmpty()) {
    int indexForBCDependency=0;
    for (    ModifiableDependencyEntry entry : mainBC.getDependencies().getModifiableEntries()) {
      if (entry instanceof BuildConfigurationEntry) {
        indexForBCDependency++;
      }
 else {
        break;
      }
    }
    for (    ModifiableFlexIdeBuildConfiguration rlm : rlms) {
      final ModifiableBuildConfigurationEntry bcEntry=myFlexConfigEditor.createBcEntry(mainBC.getDependencies(),rlm,null);
      bcEntry.getDependencyType().setLinkageType(LinkageType.LoadInRuntime);
      mainBC.getDependencies().getModifiableEntries().add(indexForBCDependency,bcEntry);
    }
  }
}
