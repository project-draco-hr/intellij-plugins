{
  final Namespace namespace=rootElement.getNamespace();
  final Collection<String> result=new ArrayList<String>();
  for (  Element compilerElement : ((Iterable<Element>)rootElement.getChildren(COMPILER,namespace))) {
    if (removeExternal) {
      for (      Element externalLibraryPathElement : ((Iterable<Element>)compilerElement.getChildren(EXTERNAL_LIBRARY_PATH,namespace))) {
        final Collection<Element> pathElementsToRemove=new ArrayList<Element>();
        for (        Element pathElement : ((Iterable<Element>)externalLibraryPathElement.getChildren(PATH_ELEMENT,namespace))) {
          final String path=pathElement.getText();
          final String fileName=path.substring(FileUtil.toSystemIndependentName(path).lastIndexOf("/") + 1);
          if (fileName.startsWith("playerglobal") || fileName.startsWith("airglobal")) {
            continue;
          }
          result.add(path);
          pathElementsToRemove.add(pathElement);
        }
        for (        Element pathElement : pathElementsToRemove) {
          externalLibraryPathElement.removeContent(pathElement);
        }
      }
    }
    if (removeIncluded) {
      for (      Element includeLibrariesElement : ((Iterable<Element>)compilerElement.getChildren(INCLUDE_LIBRARIES,namespace))) {
        final Collection<Element> libraryElementsToRemove=new ArrayList<Element>();
        for (        Element libraryElement : ((Iterable<Element>)includeLibrariesElement.getChildren(LIBRARY,namespace))) {
          result.add(libraryElement.getText());
          libraryElementsToRemove.add(libraryElement);
        }
        for (        Element pathElement : libraryElementsToRemove) {
          includeLibrariesElement.removeContent(pathElement);
        }
      }
    }
  }
  return result;
}
