{
  myFrameworkIntegratorRegistry=frameworkIntegratorRegistry;
  myModel=new DefaultListModel();
  myFrameworkInstances=new JBList(myModel);
  myFrameworkInstances.getEmptyText().setText("No frameworks configured");
  myFrameworkInstancesPanel.add(ToolbarDecorator.createDecorator(myFrameworkInstances).setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      addFrameworkInstance();
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      removeFrameworkInstance();
    }
  }
).setEditAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      editFrameworkInstance();
    }
  }
).disableUpDownActions().createPanel(),BorderLayout.CENTER);
  ToolbarDecorator.findEditButton(myFrameworkInstancesPanel).addCustomUpdater(new AnActionButtonUpdater(){
    @Override public boolean isEnabled(    AnActionEvent e){
      return mySelectedFrameworkInstance != null;
    }
  }
);
  myFrameworkInstances.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      mySelectedFrameworkInstance=(FrameworkInstanceDefinition)myFrameworkInstances.getSelectedValue();
      if (mySelectedFrameworkInstance != null) {
        myFrameworkIntegrator.setText(mySelectedFrameworkInstance.getFrameworkIntegratorName());
        myBaseFolder.setText(mySelectedFrameworkInstance.getBaseFolder());
        final String theVersion=mySelectedFrameworkInstance.getVersion();
        myVersion.setText(theVersion != null && theVersion.length() > 0 ? theVersion : "latest");
        myFrameworkInstanceName.setText(mySelectedFrameworkInstance.getName());
      }
    }
  }
);
  new DoubleClickListener(){
    @Override protected boolean onDoubleClick(    MouseEvent e){
      if (mySelectedFrameworkInstance != null) {
        editFrameworkInstance();
        return true;
      }
      return false;
    }
  }
.installOn(myFrameworkInstances);
}
