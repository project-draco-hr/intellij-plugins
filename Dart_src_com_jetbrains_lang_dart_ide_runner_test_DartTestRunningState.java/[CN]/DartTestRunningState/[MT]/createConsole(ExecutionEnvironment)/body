{
  final Project project=env.getProject();
  final DartTestRunConfiguration runConfiguration=(DartTestRunConfiguration)env.getRunProfile();
  final DartTestRunnerParameters runnerParameters=runConfiguration.getRunnerParameters();
  final TestConsoleProperties testConsoleProperties=new DartConsoleProperties(runConfiguration,env);
  final ConsoleView consoleView=SMTestRunnerConnectionUtil.createConsole(DART_FRAMEWORK_NAME,testConsoleProperties);
  try {
    final VirtualFile dartFile=runnerParameters.getDartFileOrDirectory();
    consoleView.addMessageFilter(new DartConsoleFilter(project,dartFile));
    consoleView.addMessageFilter(new DartRelativePathsConsoleFilter(project,runnerParameters.computeProcessWorkingDirectory(project)));
    consoleView.addMessageFilter(new UrlFilter());
  }
 catch (  RuntimeConfigurationError ignore) {
  }
  Disposer.register(project,consoleView);
  return consoleView;
}
