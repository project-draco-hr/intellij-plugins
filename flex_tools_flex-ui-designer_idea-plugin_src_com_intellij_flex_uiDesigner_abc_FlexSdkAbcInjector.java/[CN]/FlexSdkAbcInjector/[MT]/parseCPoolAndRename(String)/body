{
  buffer.position(buffer.position() + 4);
  int n=readU32();
  while (n-- > 1) {
    readU32();
  }
  n=readU32();
  while (n-- > 1) {
    readU32();
  }
  n=readU32();
  if (n != 0) {
    buffer.position(buffer.position() + ((n - 1) * 8));
  }
  n=readU32();
  final CharsetEncoder charsetEncoder=Charsets.UTF_8.newEncoder().onMalformedInput(CodingErrorAction.REPLACE).onUnmappableCharacter(CodingErrorAction.REPLACE);
  while (n-- > 1) {
    int l=readU32();
    buffer.limit(buffer.position() + l);
    buffer.mark();
    final CharBuffer charBuffer=Charsets.UTF_8.decode(buffer);
    buffer.limit(buffer.capacity());
    final int index=CharArrayUtil.indexOf(charBuffer,from,0);
    if (index == -1) {
      continue;
    }
    charBuffer.put(index,OVERLOADED_AND_BACKED_CLASS_MARK);
    buffer.reset();
    charsetEncoder.encode(charBuffer,buffer,true);
    charsetEncoder.reset();
  }
}
