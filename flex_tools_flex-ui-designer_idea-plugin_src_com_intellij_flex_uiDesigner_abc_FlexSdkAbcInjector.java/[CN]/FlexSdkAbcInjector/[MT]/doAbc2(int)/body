{
  if (flexInjected) {
    super.doAbc2(length);
    return;
  }
  boolean isStyleProtoChain=StringUtil.equals(transientNameString,STYLE_PROTO_CHAIN);
  if (isStyleProtoChain) {
    final int oldPosition=buffer.position();
    buffer.position(buffer.position() + 4 + transientNameString.length()+ 1);
    parseCPoolAndRenameStyleProtoChain();
    buffer.position(oldPosition + 4 + 10);
    buffer.put((byte)'F');
    buffer.position(oldPosition);
  }
  super.doAbc2(length);
  if (StringUtil.equals(transientNameString,"mx.styles:CSSStyleDeclaration")) {
    flexInjected=true;
    if (injectionUrlConnection == null) {
      decoders.add(new Decoder(new DataBuffer(FileUtil.loadFileBytes(new File(DebugPathManager.getFudHome() + "/flex-injection/target/" + ComplementSwfBuilder.generateInjectionName(flexSdkVersion))))));
    }
 else {
      InputStream inputStream=injectionUrlConnection.getInputStream();
      try {
        decoders.add(new Decoder(new DataBuffer((FileUtil.loadBytes(inputStream)))));
      }
  finally {
        inputStream.close();
      }
    }
    if (requiredAssetsInfo.bitmapCount != 0) {
      ImageClassPoolGenerator.generate(decoders,requiredAssetsInfo.bitmapCount);
    }
  }
}
