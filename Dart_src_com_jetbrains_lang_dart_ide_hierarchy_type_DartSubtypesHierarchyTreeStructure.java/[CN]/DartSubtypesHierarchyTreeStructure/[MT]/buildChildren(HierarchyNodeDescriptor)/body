{
  final DartClass dartClass=((DartTypeHierarchyNodeDescriptor)descriptor).getDartClass();
  if (dartClass == null)   return ArrayUtil.EMPTY_OBJECT_ARRAY;
  if (DartResolveUtil.OBJECT.equals(dartClass.getName())) {
    return new Object[]{DartBundle.message("dart.hierarchy.object")};
  }
  final List<DartClass> subClasses=DartInheritanceIndex.getItemsByName(dartClass);
  final List<DartTypeHierarchyNodeDescriptor> descriptors=new ArrayList<DartTypeHierarchyNodeDescriptor>(subClasses.size());
  for (  DartClass aSubClass : subClasses) {
    if (doesDirectlySubclass(dartClass,aSubClass)) {
      descriptors.add(new DartTypeHierarchyNodeDescriptor(myProject,descriptor,aSubClass,false));
    }
  }
  return descriptors.toArray(new HierarchyNodeDescriptor[descriptors.size()]);
}
