{
  final SpringModel springModel=getSpringModel();
  final PsiClass subClass=getPossibleSubClass();
  final Collection<? extends SpringBeanPointer> list;
  if (subClass != null) {
    list=springModel.findBeansByPsiClassWithInheritance(subClass.getQualifiedName());
  }
 else {
    list=springModel.getAllCommonBeans();
  }
  final List<LookupElement> variants=new ArrayList<LookupElement>(list.size());
  for (  final SpringBeanPointer bean : list) {
    if (bean.isAbstract()) {
      continue;
    }
    ContainerUtil.addIfNotNull(variants,SpringConverterUtil.createCompletionVariant(bean));
  }
  return ArrayUtil.toObjectArray(variants,LookupElement.class);
}
