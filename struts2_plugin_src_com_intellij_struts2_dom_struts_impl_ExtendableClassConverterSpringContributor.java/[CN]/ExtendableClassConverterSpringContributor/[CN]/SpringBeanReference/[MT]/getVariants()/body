{
  final Collection<? extends SpringBeanPointer> list;
  if (subClass != null) {
    list=springModel.findBeansByPsiClassWithInheritance(subClass);
  }
 else {
    list=springModel.getAllCommonBeans(true);
  }
  final List variants=new ArrayList(list.size());
  for (  final SpringBeanPointer bean : list) {
    final String beanName=bean.getName();
    final PsiFile psiFile=bean.getContainingFile();
    if (psiFile != null && StringUtil.isNotEmpty(beanName)) {
      variants.add(LookupValueFactory.createLookupValueWithHint(beanName,bean.getBeanIcon(),psiFile.getName()));
    }
  }
  return ArrayUtil.toObjectArray(variants);
}
