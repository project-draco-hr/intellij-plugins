{
  Editor editor=PlatformDataKeys.EDITOR.getData(dataContext);
  if (editor == null) {
    return null;
  }
  PsiFile psiFile=LangDataKeys.PSI_FILE.getData(dataContext);
  if (!(psiFile instanceof JSFile)) {
    return null;
  }
  int caretOffsetInDocument=editor.getCaretModel().getOffset();
  PsiElement psiElementUnderCaret=psiFile.findElementAt(caretOffsetInDocument);
  if (psiElementUnderCaret == null) {
    psiElementUnderCaret=psiFile.getLastChild();
  }
  if (psiElementUnderCaret != null) {
    PsiElement topPsiElement=getTopmostPsiElements(psiElementUnderCaret);
    JSCallExpression moduleCallExpression=findFirstModuleCallInBeforeScope(topPsiElement);
    if (moduleCallExpression != null && moduleCallExpression.getArgumentList() != null) {
      JSExpression[] argExpressions=moduleCallExpression.getArgumentList().getArguments();
      if (argExpressions != null && argExpressions.length > 0) {
        final String moduleName=findModuleName(argExpressions[0]);
        final PsiElement precedingPsiElement=findPrecedingPsiElement(argExpressions,action);
        if (precedingPsiElement != null) {
          return new Context(editor,moduleName,precedingPsiElement,argExpressions);
        }
      }
    }
  }
  return null;
}
