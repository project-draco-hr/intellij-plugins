{
  final PsiBuilder.Marker expr=builder.mark();
  if (isIdentifierToken(builder.getTokenType())) {
    final PsiBuilder.Marker def=builder.mark();
    buildTokenElement(JSElementTypes.REFERENCE_EXPRESSION);
    def.done(JSElementTypes.DEFINITION_EXPRESSION);
  }
 else {
    final PsiBuilder.Marker keyValue=builder.mark();
    parseKeyValue();
    if (builder.getTokenType() != JSTokenTypes.IN_KEYWORD) {
      expr.rollbackTo();
      return false;
    }
 else {
      keyValue.done(JSElementTypes.PARENTHESIZED_EXPRESSION);
    }
  }
  builder.advanceLexer();
  parseExpression();
  if (builder.getTokenType() == AngularJSTokenTypes.TRACK_BY_KEYWORD) {
    builder.advanceLexer();
    parseExpression();
  }
  expr.done(AngularJSElementTypes.REPEAT_EXPRESSION);
  return true;
}
