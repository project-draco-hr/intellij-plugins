{
  builder.advanceLexer();
  final PsiBuilder.Marker comma=builder.mark();
  if (isIdentifierToken(builder.getTokenType())) {
    buildTokenElement(JSElementTypes.REFERENCE_EXPRESSION);
  }
 else {
    builder.error(JSBundle.message("javascript.parser.message.expected.identifier"));
  }
  if (builder.getTokenType() == JSTokenTypes.COMMA) {
    builder.advanceLexer();
  }
 else {
    builder.error(JSBundle.message("javascript.parser.message.expected.comma"));
  }
  if (isIdentifierToken(builder.getTokenType())) {
    buildTokenElement(JSElementTypes.REFERENCE_EXPRESSION);
  }
 else {
    builder.error(JSBundle.message("javascript.parser.message.expected.identifier"));
  }
  comma.done(JSElementTypes.COMMA_EXPRESSION);
  if (builder.getTokenType() == JSTokenTypes.RPAR) {
    builder.advanceLexer();
  }
 else {
    builder.error(JSBundle.message("javascript.parser.message.expected.rparen"));
  }
}
