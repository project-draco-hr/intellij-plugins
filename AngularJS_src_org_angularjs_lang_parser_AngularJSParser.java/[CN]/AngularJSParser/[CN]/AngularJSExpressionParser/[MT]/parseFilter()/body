{
  final PsiBuilder.Marker mark=builder.mark();
  buildTokenElement(JSElementTypes.REFERENCE_EXPRESSION);
  PsiBuilder.Marker arguments=null;
  while (builder.getTokenType() == JSTokenTypes.COLON) {
    arguments=arguments == null ? builder.mark() : arguments;
    builder.advanceLexer();
    if (!super.parseUnaryExpression()) {
      builder.error(JSBundle.message("javascript.parser.message.expected.expression"));
    }
  }
  if (arguments != null) {
    arguments.done(JSElementTypes.ARGUMENT_LIST);
  }
  mark.done(AngularJSElementTypes.FILTER_EXPRESSION);
  return true;
}
