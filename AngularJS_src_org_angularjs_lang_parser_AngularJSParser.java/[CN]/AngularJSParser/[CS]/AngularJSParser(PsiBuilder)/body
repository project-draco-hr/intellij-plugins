{
  super(JavaScriptSupportLoader.JAVASCRIPT_1_5,builder);
  myExpressionParser=new AngularJSExpressionParser();
  myStatementParser=new StatementParser<AngularJSParser>(this){
    @Override protected void doParseStatement(    boolean canHaveClasses){
      final IElementType firstToken=builder.getTokenType();
      if (firstToken == JSTokenTypes.LBRACE) {
        parseExpressionStatement();
        checkForSemicolon();
        return;
      }
      if (isIdentifierToken(firstToken) && builder.lookAhead(1) == JSTokenTypes.EQ) {
        PsiBuilder.Marker marker=builder.mark();
        parseVarDeclaration(false);
        checkForSemicolon();
        marker.done(JSStubElementTypes.VAR_STATEMENT);
        return;
      }
      super.doParseStatement(canHaveClasses);
    }
  }
;
}
