{
  return new AdtTask(project,parameters.getFlexSdk()){
    protected void appendAdtOptions(    List<String> command){
      command.add("-package");
      command.add("-target");
switch (parameters.MOBILE_PLATFORM) {
case Android:
switch (parameters.ANDROID_PACKAGE_TYPE) {
case DebugOverNetwork:
          command.add("apk-debug");
        command.add("-connect");
      command.add(parameters.DEBUG_CONNECT_HOST);
    break;
case DebugOverUSB:
  command.add("apk-debug");
command.add("-listen");
command.add(String.valueOf(parameters.DEBUG_LISTEN_PORT));
break;
case NoDebug:
command.add("apk");
break;
case NoDebugCaptiveRuntime:
command.add("apk-captive-runtime");
break;
}
break;
case iOS:
switch (parameters.IOS_PACKAGE_TYPE) {
case DebugOverNetwork:
command.add(parameters.FAST_PACKAGING ? "ipa-debug-interpreter" : "ipa-debug");
command.add("-connect");
command.add(parameters.DEBUG_CONNECT_HOST);
break;
case Test:
command.add(parameters.FAST_PACKAGING ? "ipa-test-interpreter" : "ipa-test");
break;
case AdHoc:
command.add("ipa-ad-hoc");
break;
case AppStore:
command.add("ipa-app-store");
break;
}
break;
}
if (parameters.MOBILE_PLATFORM == MobilePlatform.Android && parameters.AIR_DOWNLOAD_URL.length() > 0) {
command.add("-airDownloadURL");
command.add(parameters.AIR_DOWNLOAD_URL);
}
appendSigningOptions(command,parameters);
if (parameters.MOBILE_PLATFORM == MobilePlatform.iOS && parameters.PROVISIONING_PROFILE_PATH.length() > 0) {
command.add("-provisioning-profile");
command.add(parameters.PROVISIONING_PROFILE_PATH);
}
appendPaths(command,parameters);
}
}
;
}
