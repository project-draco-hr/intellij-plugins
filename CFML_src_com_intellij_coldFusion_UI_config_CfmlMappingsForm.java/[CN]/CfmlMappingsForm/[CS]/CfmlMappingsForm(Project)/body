{
  myProject=project;
  myTableEditor=new ValidatingTableEditor<Item>(){
    @Override protected Item cloneOf(    Item item){
      return new Item(item.myDirectoryPath,item.myLogicalPath);
    }
    @Nullable protected String validate(    Item item){
      if (StringUtil.isEmpty(item.myDirectoryPath)) {
        return CfmlBundle.message("directory.path.is.empty");
      }
      if (StringUtil.isEmpty(item.myLogicalPath)) {
        return CfmlBundle.message("logical.path.is.empty");
      }
      if (!item.myLogicalPath.startsWith("/") && !item.myLogicalPath.startsWith("\\")) {
        return CfmlBundle.message("incorrect.logical.path");
      }
      VirtualFile file=LocalFileSystem.getInstance().findFileByPath(item.myDirectoryPath);
      if (file == null || !file.isValid() || !file.isDirectory()) {
        return CfmlBundle.message("directory.path.is.not.found",item.myDirectoryPath);
      }
      return null;
    }
    @Override protected Item createItem(){
      return new Item("","");
    }
  }
;
  myTableEditor.getEmptyText().setText(CfmlBundle.message("no.mapping"));
  myTablePanel.add(myTableEditor.getContentPane(),BorderLayout.CENTER);
  myLanguageLevel.setRenderer(new ListCellRendererWrapper(){
    @Override public void customize(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (CfmlLanguage.CF8.equals(value)) {
        setText("ColdFusion 8");
      }
 else       if (CfmlLanguage.CF9.equals(value)) {
        setText("ColdFusion 9");
      }
 else       if (CfmlLanguage.CF10.equals(value)) {
        setText("ColdFusion 10");
      }
 else       if (CfmlLanguage.RAILO.equals(value)) {
        setText("Railo");
      }
    }
  }
);
  myLanguageLevel.addItem(CfmlLanguage.CF8);
  myLanguageLevel.addItem(CfmlLanguage.CF9);
  myLanguageLevel.addItem(CfmlLanguage.CF10);
  myLanguageLevel.addItem(CfmlLanguage.RAILO);
  myMessageLabel.setIcon(UIUtil.getBalloonWarningIcon());
  myMessageLabel.setVisible(false);
}
