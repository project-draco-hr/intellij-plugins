{
  FacetModel model=modelsProvider.getFacetModel(module);
  String packaging=project.getPackaging();
  String extension="swc".equalsIgnoreCase(packaging) ? "rb.swc" : packaging;
  String runtimeLocaleOutputPathPattern=findConfigValue(project,"runtimeLocaleOutputPath","/{contextRoot}/locales/{artifactId}-{version}-{locale}.{extension}");
  runtimeLocaleOutputPathPattern=getRuntimeLocalesOutputPathPattern(project,runtimeLocaleOutputPathPattern,extension);
  for (  FlexFacet eachFacet : model.getFacetsByType(myFacetType.getId())) {
    if (!isResourceFacet(eachFacet))     continue;
    String locale=getResourceFacetLocale(eachFacet);
    FlexBuildConfiguration config=FlexBuildConfiguration.getInstance(eachFacet);
    String outputPath=getRuntimeLocaleOutputPath(runtimeLocaleOutputPathPattern,locale);
    String outputDir=outputPath.substring(0,outputPath.lastIndexOf("/"));
    String outputName=outputPath.substring(outputDir.length() + 1);
    config.OUTPUT_TYPE=getOutputType(project);
    config.OUTPUT_FILE_NAME=outputName;
    config.USE_FACET_COMPILE_OUTPUT_PATH=true;
    config.FACET_COMPILE_OUTPUT_PATH=outputDir;
    config.FACET_COMPILE_OUTPUT_PATH_FOR_TESTS=FileUtil.toSystemIndependentName(project.getTestOutputDirectory());
    config.USE_DEFAULT_SDK_CONFIG_FILE=false;
    config.USE_CUSTOM_CONFIG_FILE=true;
    config.CUSTOM_CONFIG_FILE=outputPath.replace("." + extension,getCompilerConfigXmlSuffix());
  }
}
