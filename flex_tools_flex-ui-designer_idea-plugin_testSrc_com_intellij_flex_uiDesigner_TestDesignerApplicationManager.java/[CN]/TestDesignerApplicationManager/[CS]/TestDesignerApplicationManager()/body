{
  DesignerApplicationUtil.AdlRunConfiguration adlRunConfiguration=DesignerApplicationUtil.createTestAdlRunConfiguration();
  adlRunConfiguration.arguments=new ArrayList<String>();
  final ServerSocket serverSocket=new ServerSocket(0,1);
  adlRunConfiguration.arguments.add(String.valueOf(serverSocket.getLocalPort()));
  adlRunConfiguration.arguments.add(String.valueOf(0));
  adlRunConfiguration.arguments.add("-p");
  String fudHome=DebugPathManager.getFudHome();
  adlRunConfiguration.arguments.add(fudHome + "/test-app-plugin/target/test-1.0-SNAPSHOT.swf");
  adlRunConfiguration.arguments.add("-cdd");
  adlRunConfiguration.arguments.add(fudHome + "/flex-injection/target");
  initAppRootDir();
  adlProcessHandler=DesignerApplicationUtil.runAdl(adlRunConfiguration,fudHome + "/designer/src/main/resources/descriptor.xml",appDir.getPath(),new Consumer<Integer>(){
    @Override public void consume(    Integer exitCode){
      if (exitCode != 0) {
        try {
          serverSocket.close();
        }
 catch (        IOException ignored) {
        }
        throw new AssertionError("adl return " + exitCode);
      }
    }
  }
);
  socket=serverSocket.accept();
  ShutDownTracker.getInstance().registerShutdownTask(new Runnable(){
    @Override public void run(){
      adlProcessHandler.destroyProcess();
      try {
        socket.close();
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
  }
);
  changeServiceImplementation();
  Client.getInstance().setOut(socket.getOutputStream());
  socketInputHandler=(TestSocketInputHandler)ServiceManager.getService(SocketInputHandler.class);
  socketInputHandler.init(socket.getInputStream(),appDir);
}
