{
{
    JSExpressionStatement jsExpressionStatement=CastUtils.tryCast(jsElement,JSExpressionStatement.class);
    if (jsExpressionStatement != null) {
{
        JSCallExpression callExpression=CastUtils.tryCast(jsExpressionStatement.getExpression(),JSCallExpression.class);
        if (callExpression != null) {
          createTestCaseStructure(jsTestFileStructure,callExpression);
        }
      }
{
        JSAssignmentExpression jsAssignmentExpression=CastUtils.tryCast(jsExpressionStatement.getExpression(),JSAssignmentExpression.class);
        if (jsAssignmentExpression != null) {
          JSCallExpression jsCallExpression=CastUtils.tryCast(jsAssignmentExpression.getROperand(),JSCallExpression.class);
          if (jsCallExpression != null) {
            JstdTestCaseStructure testCaseStructure=createTestCaseStructure(jsTestFileStructure,jsCallExpression);
            if (testCaseStructure != null) {
              JSDefinitionExpression jsDefinitionExpression=CastUtils.tryCast(jsAssignmentExpression.getLOperand(),JSDefinitionExpression.class);
              if (jsDefinitionExpression != null) {
                JSReferenceExpression jsReferenceExpression=CastUtils.tryCast(jsDefinitionExpression.getExpression(),JSReferenceExpression.class);
                if (jsReferenceExpression != null) {
                  String refName=jsReferenceExpression.getReferencedName();
                  if (refName != null) {
                    addPrototypeTests(testCaseStructure,refName,jsExpressionStatement);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
{
    JSVarStatement jsVarStatement=CastUtils.tryCast(jsElement,JSVarStatement.class);
    if (jsVarStatement != null) {
      JSVariable[] jsVariables=ObjectUtils.notNull(jsVarStatement.getVariables(),JSVariable.EMPTY_ARRAY);
      for (      JSVariable jsVariable : jsVariables) {
        JSCallExpression jsCallExpression=CastUtils.tryCast(jsVariable.getInitializer(),JSCallExpression.class);
        if (jsCallExpression != null) {
          JstdTestCaseStructure testCaseStructure=createTestCaseStructure(jsTestFileStructure,jsCallExpression);
          if (testCaseStructure != null) {
            String refName=jsVariable.getQualifiedName();
            if (refName != null) {
              addPrototypeTests(testCaseStructure,refName,jsVarStatement);
            }
          }
        }
      }
    }
  }
}
