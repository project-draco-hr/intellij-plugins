{
  return findSubComponents(new Function<DartClass,List<DartMethodDeclaration>>(){
    @Override public List<DartMethodDeclaration> fun(    DartClass dartClass){
      List<DartMethodDeclaration> operators=Lists.newArrayList();
      final DartMethodDeclaration[] methods=PsiTreeUtil.getChildrenOfType(getBody(dartClass),DartMethodDeclaration.class);
      if (methods != null) {
        for (        DartMethodDeclaration method : methods) {
          if (method.isOperator()) {
            operators.add(method);
          }
        }
      }
      return operators;
    }
  }
,dartPsiClass);
}
