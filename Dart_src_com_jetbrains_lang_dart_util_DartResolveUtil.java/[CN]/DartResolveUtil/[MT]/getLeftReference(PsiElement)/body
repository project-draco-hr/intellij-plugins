{
  if (node == null)   return null;
  for (PsiElement sibling=UsefulPsiTreeUtil.getPrevSiblingSkipWhiteSpacesAndComments(node,true); sibling != null; sibling=UsefulPsiTreeUtil.getPrevSiblingSkipWhiteSpacesAndComments(sibling,true)) {
    if (".".equals(sibling.getText()))     continue;
    PsiElement candidate=sibling;
    if (candidate instanceof DartType) {
      candidate=((DartType)sibling).getReferenceExpression();
    }
    return candidate instanceof DartReference && candidate != node ? (DartReference)candidate : null;
  }
  DartReference reference=PsiTreeUtil.getParentOfType(node,DartReference.class,false);
  while (reference != null) {
    final PsiElement parent=reference.getParent();
    if (parent instanceof DartCascadeReferenceExpression) {
      DartReference[] references=PsiTreeUtil.getChildrenOfType(parent,DartReference.class);
      DartReference result=references != null && references.length == 2 ? references[0] : null;
      return !PsiTreeUtil.isAncestor(result,node,false) ? result : null;
    }
 else     if (parent instanceof DartReference && parent.getFirstChild() == reference) {
      reference=(DartReference)parent;
    }
 else {
      break;
    }
  }
  return null;
}
