{
  if (node == null)   return null;
  for (PsiElement sibling=UsefulPsiTreeUtil.getPrevSiblingSkipWhiteSpacesAndComments(node,true); sibling != null; sibling=UsefulPsiTreeUtil.getPrevSiblingSkipWhiteSpacesAndComments(sibling,true)) {
    String siblingText=sibling.getText();
    if (".".equals(siblingText))     continue;
    if ("..".equals(siblingText))     continue;
    if ("?.".equals(siblingText))     continue;
    PsiElement candidate=sibling;
    if (candidate instanceof DartType) {
      candidate=((DartType)sibling).getReferenceExpression();
    }
    return candidate instanceof DartReference && candidate != node ? (DartReference)candidate : null;
  }
  DartReference reference=PsiTreeUtil.getParentOfType(node,DartReference.class,false);
  while (reference != null) {
    PsiElement parent=reference.getParent();
    if (parent instanceof DartCascadeReferenceExpression) {
      parent=parent.getParent();
      if (parent instanceof DartValueExpression) {
        final List<DartExpression> expressionList=((DartValueExpression)parent).getExpressionList();
        final DartExpression firstExpression=expressionList.isEmpty() ? null : expressionList.get(0);
        if (firstExpression instanceof DartReference) {
          return (DartReference)firstExpression;
        }
      }
      return null;
    }
 else     if (parent instanceof DartReference && parent.getFirstChild() == reference) {
      reference=(DartReference)parent;
    }
 else {
      break;
    }
  }
  return null;
}
