{
  try {
    Analyzer analyzer=new ReportingAnalyzer(mySession,inputJar);
    analyzer.setPedantic(false);
    analyzer.setJar(inputJar);
    Jar dot=analyzer.getJar();
    analyzer.putAll(properties,false);
    if (analyzer.getProperty(Constants.IMPORT_PACKAGE) == null) {
      analyzer.setProperty(Constants.IMPORT_PACKAGE,"*;resolution:=optional");
    }
    if (analyzer.getProperty(Constants.BUNDLE_SYMBOLICNAME) == null) {
      Pattern p=Pattern.compile("(" + Verifier.SYMBOLICNAME.pattern() + ")(-[0-9])?.*\\.jar");
      String base=inputJar.getName();
      Matcher m=p.matcher(base);
      if (m.matches()) {
        base=m.group(1);
      }
 else {
        throw new OsmorcBuildException("Can not calculate name of output bundle, rename jar or use -properties",inputJar);
      }
      analyzer.setProperty(Constants.BUNDLE_SYMBOLICNAME,base);
    }
    if (analyzer.getProperty(Constants.EXPORT_PACKAGE) == null) {
      analyzer.setProperty(Constants.EXPORT_PACKAGE,"*");
    }
    analyzer.mergeManifest(dot.getManifest());
    String version=analyzer.getProperty(Constants.BUNDLE_VERSION);
    if (version != null) {
      version=Analyzer.cleanupVersion(version);
      analyzer.setProperty(Constants.BUNDLE_VERSION,version);
    }
    analyzer.calcManifest();
    Jar jar=analyzer.getJar();
    final File f=FileUtil.createTempFile("tmp.bnd.",".jar");
    jar.write(f);
    jar.close();
    analyzer.close();
    if (!FileUtil.delete(outputJar)) {
      throw new OsmorcBuildException("Could not delete outdated generated bundle",outputJar);
    }
    if (!FileUtil.createParentDirs(outputJar)) {
      throw new OsmorcBuildException("Cannot create output folder",outputJar);
    }
    FileUtil.rename(f,outputJar);
  }
 catch (  OsmorcBuildException e) {
    throw e;
  }
catch (  Exception e) {
    throw new OsmorcBuildException("There was an unexpected problem when trying to bundlify",e,inputJar).setWarning();
  }
}
