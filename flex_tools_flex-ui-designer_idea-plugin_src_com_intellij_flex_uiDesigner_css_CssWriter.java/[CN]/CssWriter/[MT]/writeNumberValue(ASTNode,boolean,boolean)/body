{
  if (writeCssTypeMarker) {
    propertyOut.write(CssPropertyType.NUMBER);
  }
  final IElementType elementType=node.getElementType();
  boolean isNegative=false;
  if (elementType == CssElementTypes.CSS_NUMBER_TERM) {
    node=node.getFirstChildNode();
  }
 else   if (elementType == CssElementTypes.CSS_MINUS) {
    isNegative=true;
    node=node.getTreeNext().getFirstChildNode();
  }
 else   if (elementType == CssElementTypes.CSS_HASH) {
    final CharSequence chars=node.getChars();
    if (chars.length() > (1 + 6)) {
      propertyOut.writeAmfUInt(IOUtil.parseLong(chars,1,false,16));
    }
 else {
      propertyOut.writeAmfUInt(IOUtil.parseInt(chars,1,false,16));
    }
    return;
  }
 else {
    throw new IllegalArgumentException("unknown number value type " + elementType);
  }
  IOUtil.writeAmfIntOrDouble(propertyOut,node.getChars(),isNegative,isInt);
}
