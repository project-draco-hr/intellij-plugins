{
  return new MouseInputListener(){
    public void mouseClicked(    MouseEvent e){
    }
    public void mouseEntered(    MouseEvent e){
    }
    public void mouseExited(    MouseEvent e){
    }
    public void mousePressed(    MouseEvent e){
      if (e.isConsumed()) {
        selectedOnPress=false;
        return;
      }
      selectedOnPress=true;
      adjustFocusAndSelection(e);
    }
    void adjustFocusAndSelection(    MouseEvent e){
      if (!SwingUtilities.isLeftMouseButton(e)) {
        return;
      }
      if (!list.isEnabled()) {
        return;
      }
      if (!list.hasFocus() && list.isRequestFocusEnabled()) {
        list.requestFocus();
      }
      int row=locationToIndex(list,e.getPoint());
      if (row != -1) {
        myLastPressedRow=row;
        boolean adjusting=(e.getID() == MouseEvent.MOUSE_PRESSED) ? true : false;
        list.setValueIsAdjusting(adjusting);
        int anchorIndex=list.getAnchorSelectionIndex();
        if (e.isShiftDown() && (anchorIndex != -1)) {
          list.setSelectionInterval(anchorIndex,row);
        }
 else {
          toggleSelection(row);
        }
      }
    }
    public void mouseDragged(    MouseEvent e){
      if (e.isConsumed()) {
        return;
      }
      if (!SwingUtilities.isLeftMouseButton(e)) {
        return;
      }
      if (!list.isEnabled()) {
        return;
      }
      if (e.isShiftDown() || e.isControlDown()) {
        return;
      }
      int row=locationToIndex(list,e.getPoint());
      if (row != -1 && row != myLastDraggedRow && row != myLastPressedRow) {
        myLastDraggedRow=row;
        Rectangle cellBounds=getCellBounds(list,row,row);
        if (cellBounds != null) {
          list.scrollRectToVisible(cellBounds);
          toggleSelection(row);
        }
      }
      if (row == -1) {
        list.clearSelection();
      }
    }
    public void mouseMoved(    MouseEvent e){
    }
    public void mouseReleased(    MouseEvent e){
      if (selectedOnPress) {
        if (!SwingUtilities.isLeftMouseButton(e)) {
          return;
        }
        list.setValueIsAdjusting(false);
      }
 else {
        adjustFocusAndSelection(e);
      }
    }
    private boolean selectedOnPress;
  }
;
}
