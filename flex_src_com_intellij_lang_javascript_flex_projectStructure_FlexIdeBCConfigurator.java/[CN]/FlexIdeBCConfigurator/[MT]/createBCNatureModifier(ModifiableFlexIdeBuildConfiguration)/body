{
  return new Runnable(){
    public void run(){
      final CompositeConfigurable compositeConfigurable=myConfigurablesMap.get(bc);
      try {
        compositeConfigurable.apply();
      }
 catch (      ConfigurationException ignored) {
      }
      final BuildConfigurationNature oldNature=bc.getNature();
      final AddBuildConfigurationDialog dialog=new AddBuildConfigurationDialog(myConfigEditor.getProject(),FlexBundle.message("change.bc.type.title"),Collections.<String>emptyList(),oldNature,false);
      dialog.setBCNameEditable(false);
      dialog.setBCName(bc.getName());
      dialog.show();
      if (dialog.isOK()) {
        final BuildConfigurationNature newNature=dialog.getNature();
        if (newNature.equals(oldNature))         return;
        bc.setNature(newNature);
        fixOutputFileExtension(bc);
        if (newNature.targetPlatform != oldNature.targetPlatform || newNature.outputType != oldNature.outputType) {
          updatePackageFileName(bc,PathUtil.suggestFileName(bc.getName()));
        }
        FlexProjectConfigurationEditor.resetNonApplicableValuesToDefaults(bc);
        final FlexIdeBCConfigurable bcConfigurable=FlexIdeBCConfigurable.unwrap(compositeConfigurable);
        bcConfigurable.createChildConfigurables();
        bcConfigurable.updateTabs(compositeConfigurable);
        compositeConfigurable.reset();
        myEventDispatcher.getMulticaster().natureChanged(bcConfigurable);
      }
    }
  }
;
}
