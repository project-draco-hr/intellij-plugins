{
  if (configFile == null || !configFile.isValid() || configFile.isDirectory()) {
    return Collections.emptyList();
  }
  try {
    final NamespacesXmlBuilder builder=new NamespacesXmlBuilder();
    NanoXmlUtil.parse(configFile.getInputStream(),builder);
    if (onlyIncludedInSwc) {
      final Collection<String> includedInSwcNamespaces=builder.getIncludedNamespaces();
      return ContainerUtil.filter(builder.getNamespacesAndManifests(),new Condition<Pair<String,String>>(){
        public boolean value(        final Pair<String,String> pair){
          return includedInSwcNamespaces.contains(pair.first);
        }
      }
);
    }
    return builder.getNamespacesAndManifests();
  }
 catch (  IOException ignored) {
  }
  return Collections.emptyList();
}
