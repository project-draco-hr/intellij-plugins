{
  myProject=project;
  myMessageBus=messageBus;
  final Alarm myAlarm=new Alarm(Alarm.ThreadToUse.POOLED_THREAD,myProject);
  myMessageBus.connect().subscribe(VirtualFileManager.VFS_CHANGES,new BulkFileListener.Adapter(){
    @Override public void after(    @NotNull List<? extends VFileEvent> events){
      final ProjectSettings settings=ProjectSettings.getInstance(myProject);
      if (settings.getManifestSynchronizationType() == ProjectSettings.ManifestSynchronizationType.DoNotSynchronize) {
        return;
      }
      for (      VFileEvent event : events) {
        VirtualFile virtualFile=event.getFile();
        if (virtualFile != null && virtualFile.isValid() && virtualFile.getFileType() == ManifestFileTypeFactory.MANIFEST) {
          final PsiFile psiFile=PsiManager.getInstance(myProject).findFile(virtualFile);
          if (psiFile instanceof ManifestFile) {
            OsmorcFacet of=OsmorcFacet.getInstance(psiFile);
            if (of != null && of.getConfiguration().isManifestManuallyEdited() && of.isManifestForThisFacet(virtualFile)) {
              myAlarm.cancelAllRequests();
              myAlarm.addRequest(new Runnable(){
                @Override public void run(){
                  if (settings.getManifestSynchronizationType() == ProjectSettings.ManifestSynchronizationType.ManuallySynchronize) {
                    myNeedsResync.set(true);
                    EditorNotifications.getInstance(myProject).updateAllNotifications();
                  }
                  if (settings.getManifestSynchronizationType() == ProjectSettings.ManifestSynchronizationType.AutomaticallySynchronize) {
                    myNeedsResync.set(false);
                    EditorNotifications.getInstance(myProject).updateAllNotifications();
                    ModuleDependencySynchronizer.resynchronizeAll(psiFile.getProject());
                  }
                }
              }
,250);
            }
          }
        }
      }
    }
  }
);
}
