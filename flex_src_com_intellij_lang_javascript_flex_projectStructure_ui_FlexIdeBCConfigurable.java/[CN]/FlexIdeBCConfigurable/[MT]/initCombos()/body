{
  myTargetPlatformCombo.setModel(new DefaultComboBoxModel(TargetPlatform.values()));
  myTargetPlatformCombo.setRenderer(new ListCellRendererWrapper<TargetPlatform>(myTargetPlatformCombo.getRenderer()){
    public void customize(    JList list,    TargetPlatform value,    int index,    boolean selected,    boolean hasFocus){
      setText(value.PRESENTABLE_TEXT);
    }
  }
);
  myOutputTypeCombo.setModel(new DefaultComboBoxModel(OutputType.values()));
  myOutputTypeCombo.setRenderer(new ListCellRendererWrapper<OutputType>(myOutputTypeCombo.getRenderer()){
    public void customize(    JList list,    OutputType value,    int index,    boolean selected,    boolean hasFocus){
      setText(value.PRESENTABLE_TEXT);
    }
  }
);
  myComponentSetCombo.setModel(new DefaultComboBoxModel(ComponentSet.values()));
  myComponentSetCombo.setRenderer(new ListCellRendererWrapper<ComponentSet>(myComponentSetCombo.getRenderer()){
    public void customize(    JList list,    ComponentSet value,    int index,    boolean selected,    boolean hasFocus){
      setText(value.PRESENTABLE_TEXT);
    }
  }
);
  myFrameworkLinkageCombo.setRenderer(new ListCellRendererWrapper<FrameworkLinkage>(myFrameworkLinkageCombo.getRenderer()){
    public void customize(    JList list,    FrameworkLinkage value,    int index,    boolean selected,    boolean hasFocus){
      final TargetPlatform targetPlatform=(TargetPlatform)myTargetPlatformCombo.getSelectedItem();
      final boolean isPureAS=myPureActionScriptCheckBox.isSelected();
      final OutputType outputType=(OutputType)myOutputTypeCombo.getSelectedItem();
      setText(value == FrameworkLinkage.Default ? MessageFormat.format(DEFAULT_PATTERN,getDefaultFrameworkLinkage(targetPlatform,isPureAS,outputType).PRESENTABLE_TEXT) : value.PRESENTABLE_TEXT);
    }
  }
);
}
