{
  assertAlive();
  Module module=((Editor)configuration).myModule;
  List<Editor> editors=myModule2Editors.get(module);
  FlexIdeBuildConfigurationImpl copy=((Editor)configuration).getCopy();
  DependencyEntry[] entries=copy.getDependencies().getEntries();
  ModifiableRootModel modifiableModel=myProvider.getModuleModifiableModel(module);
  for (int i=0; i < entries.length; i++) {
    if (entries[i] instanceof ModuleLibraryEntryImpl) {
      ModuleLibraryEntryImpl e=(ModuleLibraryEntryImpl)entries[i];
      LibraryEx library=findLibrary(modifiableModel,e.getLibraryId());
      if (library != null) {
        LibraryEx libraryCopy=copyModuleLibrary(modifiableModel,library);
        ModuleLibraryEntryImpl entryCopy=new ModuleLibraryEntryImpl(FlexProjectRootsUtil.getLibraryId(libraryCopy));
        e.getDependencyType().applyTo(entryCopy.getDependencyType());
        copy.getDependencies().getModifiableEntries().set(i,entryCopy);
      }
    }
  }
  Editor newConfig=new Editor(module,copy);
  newConfig.setNature(newNature);
  resetNonApplicableValuesToDefaults(newConfig);
  editors.add(newConfig);
  return newConfig;
}
