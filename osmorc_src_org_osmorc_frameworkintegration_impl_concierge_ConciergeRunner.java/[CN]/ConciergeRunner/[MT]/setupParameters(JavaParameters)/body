{
  ParametersList vmParameters=parameters.getVMParametersList();
  MultiMap<Integer,String> startBundles=new MultiMap<Integer,String>();
  List<String> installBundles=ContainerUtil.newSmartList();
  for (  SelectedBundle bundle : myBundles) {
    String bundleUrl=bundle.getBundleUrl();
    if (bundleUrl == null)     continue;
    boolean isFragment=CachingBundleInfoProvider.isFragmentBundle(bundleUrl);
    bundleUrl=bundleUrl.replaceAll(" ","%20");
    if (bundle.isStartAfterInstallation() && !isFragment) {
      int startLevel=getBundleStartLevel(bundle);
      startBundles.putValue(startLevel,bundleUrl);
    }
 else {
      installBundles.add(bundleUrl);
    }
  }
  for (  Integer startLevel : startBundles.keySet()) {
    vmParameters.addProperty("osgi.auto.start." + startLevel,StringUtil.join(startBundles.get(startLevel)," "));
  }
  if (!installBundles.isEmpty()) {
    vmParameters.addProperty("osgi.auto.install",StringUtil.join(installBundles," "));
  }
  int startLevel=getFrameworkStartLevel();
  vmParameters.addProperty("osgi.startlevel.framework",String.valueOf(startLevel));
  int defaultStartLevel=myRunConfiguration.getDefaultStartLevel();
  vmParameters.addProperty("osgi.startlevel.bundle",String.valueOf(defaultStartLevel));
  vmParameters.addProperty("osgi.init","true");
  if (GenericRunProperties.isDebugMode(myAdditionalProperties)) {
    vmParameters.addProperty("ch.ethz.iks.concierge.debug","true");
  }
  parameters.setMainClass(MAIN_CLASS);
}
