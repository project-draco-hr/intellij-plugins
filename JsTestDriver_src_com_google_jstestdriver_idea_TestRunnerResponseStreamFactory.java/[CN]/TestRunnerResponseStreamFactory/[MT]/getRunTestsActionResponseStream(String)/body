{
  final TestResultGenerator testResultGenerator=new TestResultGenerator(new FailureParser(new NullPathPrefix()));
  final Gson gson=new Gson();
  return new ResponseStream(){
    @Override public void stream(    Response response){
      Collection<TestResult> testResults=testResultGenerator.getTestResults(response);
      for (      TestResult testResult : testResults) {
        writeTestResultProtocolMessage(TestResultProtocolMessage.fromTestResult(jstdConfigFile,testResult));
switch (response.getResponseType()) {
case TEST_RESULT:
          testResultListener.onTestComplete(testResult);
        break;
case FILE_LOAD_RESULT:
      LoadedFiles files=gson.fromJson(response.getResponse(),response.getGsonType());
    for (    FileResult result : files.getLoadedFiles()) {
      testResultListener.onFileLoad(response.getBrowser().toString(),result);
    }
  break;
case BROWSER_PANIC:
BrowserPanic panic=gson.fromJson(response.getResponse(),response.getGsonType());
throw new BrowserPanicException(panic.getBrowserInfo(),panic.getCause());
}
}
}
@Override public void finish(){
testResultListener.finish();
}
}
;
}
