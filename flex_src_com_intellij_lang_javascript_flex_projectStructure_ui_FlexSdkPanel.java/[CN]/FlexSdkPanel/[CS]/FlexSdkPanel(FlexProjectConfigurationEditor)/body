{
  myConfigEditor=configEditor;
  myEventDispatcher=EventDispatcher.create(ChangeListener.class);
  mySdkLabel.setLabelFor(myCombo.getComboBox());
  myInfoLabel.setIcon(UIUtil.getBalloonWarningIcon());
  myConfigEditor.addSdkListListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      rebuildComboModel();
    }
  }
,this);
  myCombo.getChildComponent().addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      Object selectedItem=myCombo.getComboBox().getSelectedItem();
      comboItemChanged();
    }
  }
);
  myCombo.getChildComponent().setRenderer(new ListCellRendererWrapper(myCombo.getChildComponent().getRenderer()){
    @Override public void customize(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (value != null) {
        String homePath=value instanceof Sdk ? ((Sdk)value).getName() : (String)value;
        setText(FileUtil.toSystemDependentName(homePath));
      }
 else {
        setText("(none)");
      }
    }
  }
);
  myEditButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      editSdk();
    }
  }
);
}
