{
  Library matchingLibrary=null;
  myMute=true;
  try {
    Object selection=myCombo.getComboBox().getSelectedItem();
    Library[] libraries=myConfigEditor.getSdksLibraries();
    DefaultComboBoxModel model=new DefaultComboBoxModel(libraries);
    myCombo.getComboBox().setModel(model);
    if (selection instanceof Pair) {
      final String homePath=((Pair<String,String>)selection).second;
      matchingLibrary=ContainerUtil.find(libraries,new Condition<Library>(){
        @Override public boolean value(        Library library){
          return FlexSdk.getHomePath(library).equals(homePath);
        }
      }
);
      if (matchingLibrary != null) {
        selection=matchingLibrary;
      }
    }
    if (selection != null && !(selection instanceof Library)) {
      model.addElement(selection);
    }
    myCombo.getComboBox().setSelectedItem(selection);
  }
  finally {
    myMute=false;
  }
  if (matchingLibrary != null) {
    comboItemChanged();
    myConfigEditor.setSdkLibraryUsed(this,matchingLibrary);
  }
}
