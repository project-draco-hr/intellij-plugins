{
  if (!(parent instanceof ExternalLibrariesNode)) {
    return children;
  }
  Set<Sdk> processedSdks=new HashSet<>();
  Collection<AbstractTreeNode> result=new ArrayList<>();
  for (  AbstractTreeNode child : children) {
    Object value=child.getValue();
    if (!(value instanceof NamedLibraryElement)) {
      result.add(child);
      continue;
    }
    NamedLibraryElement libraryElement=(NamedLibraryElement)value;
    OrderEntry orderEntry=libraryElement.getOrderEntry();
    if (!(orderEntry instanceof JdkOrderEntry)) {
      result.add(child);
      continue;
    }
    Sdk sdk=((JdkOrderEntry)orderEntry).getJdk();
    if (!(sdk instanceof FlexCompositeSdk)) {
      result.add(child);
      continue;
    }
    Sdk[] sdks=((FlexCompositeSdk)sdk).getSdks();
    for (    Sdk individualSdk : sdks) {
      if (processedSdks.add(individualSdk)) {
        IndividualSdkOrderEntry entry=new IndividualSdkOrderEntry(individualSdk,orderEntry.getOwnerModule());
        result.add(new NamedLibraryElementNode(parent.getProject(),new NamedLibraryElement(null,entry),((ExternalLibrariesNode)parent).getSettings()));
      }
    }
  }
  return result;
}
