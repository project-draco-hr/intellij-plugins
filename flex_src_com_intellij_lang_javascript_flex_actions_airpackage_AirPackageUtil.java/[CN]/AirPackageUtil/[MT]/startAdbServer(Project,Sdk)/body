{
  return ExternalTask.runWithProgress(new ExternalTask(project,sdk){
    protected List<String> createCommandLine(){
      final ArrayList<String> command=new ArrayList<String>();
      command.add(sdk.getHomePath() + ADB_RELATIVE_PATH);
      command.add("start-server");
      return command;
    }
    protected void scheduleInputStreamReading(){
      ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
        public void run(){
          try {
            getProcess().waitFor();
          }
 catch (          InterruptedException ignore) {
          }
 finally {
            cancel();
          }
        }
      }
);
    }
  }
,"adb start-server","ADB Server Start");
}
