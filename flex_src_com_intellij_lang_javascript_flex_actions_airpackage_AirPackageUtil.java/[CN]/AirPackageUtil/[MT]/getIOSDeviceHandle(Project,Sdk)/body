{
  final Ref<Integer> deviceHandleRef=new Ref<Integer>();
  final boolean ok=ExternalTask.runWithProgress(new AdtTask(project,sdk){
    protected void appendAdtOptions(    final List<String> command){
      command.add("-devices");
      command.add("-platform");
      command.add("ios");
    }
    protected boolean checkMessages(){
      if (myMessages.size() < 3)       return false;
      if (!myMessages.get(0).trim().contains("List of attached devices"))       return false;
      if (!myMessages.get(1).trim().startsWith("Handle"))       return false;
      final String deviceLine=myMessages.get(2).trim();
      int spaceIndex=Math.min(deviceLine.indexOf(" "),deviceLine.indexOf("\t"));
      if (spaceIndex <= 0)       return false;
      try {
        deviceHandleRef.set(Integer.parseInt(deviceLine.substring(0,spaceIndex)));
      }
 catch (      NumberFormatException e) {
        return false;
      }
      if (myMessages.size() >= 4) {
        final String secondDeviceLine=myMessages.get(3).trim();
        spaceIndex=Math.min(secondDeviceLine.indexOf(" "),secondDeviceLine.indexOf("\t"));
        try {
          if (spaceIndex > 0 && Integer.parseInt(deviceLine.substring(0,spaceIndex)) >= 0) {
            myMessages.clear();
            myMessages.add(FlexBundle.message("more.than.one.ios.device"));
            return false;
          }
        }
 catch (        NumberFormatException ignore) {
        }
      }
      return true;
    }
  }
,FlexBundle.message("checking.ios.devices"),FlexBundle.message("check.ios.devices.title"));
  return ok ? deviceHandleRef.get() : -1;
}
