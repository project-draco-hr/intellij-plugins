{
  UsageTrigger.trigger("FlashUIDesigner.selectIn");
  final PsiElement element=getPsiElement(context);
  final Module module=element == null ? null : ModuleUtil.findModuleForPsiElement(element);
  if (module == null) {
    return;
  }
  final VirtualFile virtualFile=context.getVirtualFile();
  final Runnable doAction=new Runnable(){
    @Override public void run(){
      DocumentFactoryManager.DocumentInfo info=DocumentFactoryManager.getInstance().getNullableInfo(virtualFile);
      if (info == null) {
        return;
      }
      final List<RangeMarker> rangeMarkers=info.getRangeMarkers();
      if (element instanceof XmlFile) {
        DesignerApplicationManager.getInstance().openDocument(module,(XmlFile)element,false);
      }
 else {
        PsiElement effectiveElement=element;
        do {
          if (effectiveElement instanceof XmlTag && ((XmlTag)effectiveElement).getDescriptor() instanceof ClassBackedElementDescriptor) {
            for (int i=0; i < rangeMarkers.size(); i++) {
              RangeMarker rangeMarker=rangeMarkers.get(i);
              if (rangeMarker.getStartOffset() == effectiveElement.getTextOffset()) {
                Client.getInstance().selectComponent(module,info.getId(),i);
                return;
              }
            }
          }
          effectiveElement=effectiveElement.getContext();
        }
 while (effectiveElement != null);
        LogMessageUtil.LOG.warn("Can't find target component");
      }
    }
  }
;
  if (DesignerApplicationManager.getInstance().isApplicationClosed() || !DocumentFactoryManager.getInstance().isRegistered(virtualFile)) {
    DesignerApplicationManager.getInstance().renderDocument((XmlFile)element.getContainingFile()).doWhenDone(doAction);
  }
 else {
    doAction.run();
  }
}
