{
  final DocumentFactoryManager.DocumentInfo documentInfo=DocumentFactoryManager.getInstance().getNullableInfo(context.getVirtualFile());
  if (documentInfo == null) {
    return;
  }
  final List<RangeMarker> rangeMarkers=documentInfo.getRangeMarkers();
  final int rangeMarkersSize=rangeMarkers.size();
  final Object selectorInFile=context.getSelectorInFile();
  if (!(selectorInFile instanceof PsiElement)) {
    return;
  }
  PsiElement element=(PsiElement)selectorInFile;
  final Module module=ModuleUtil.findModuleForPsiElement(element);
  if (module == null) {
    return;
  }
  if (element instanceof XmlFile) {
    DesignerApplicationManager.getInstance().openDocument(module,(XmlFile)element,false);
  }
 else {
    while (element != null) {
      if (element instanceof XmlTag && ((XmlTag)element).getDescriptor() instanceof ClassBackedElementDescriptor) {
        for (int i=0; i < rangeMarkersSize; i++) {
          RangeMarker rangeMarker=rangeMarkers.get(i);
          if (rangeMarker.getStartOffset() == element.getTextOffset()) {
            Client.getInstance().selectComponent(module,documentInfo.getId(),i);
            return;
          }
        }
      }
      element=element.getContext();
    }
  }
  LogMessageUtil.LOG.warn("Can't find target component");
}
