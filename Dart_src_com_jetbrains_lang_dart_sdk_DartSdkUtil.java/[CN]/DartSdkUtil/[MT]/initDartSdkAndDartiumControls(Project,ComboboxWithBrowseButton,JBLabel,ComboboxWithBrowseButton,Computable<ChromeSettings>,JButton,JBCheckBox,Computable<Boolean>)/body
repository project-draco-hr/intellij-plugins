{
  dartSdkPathComponent.getComboBox().setEditable(true);
  addKnownPathsToCombo(dartSdkPathComponent.getComboBox(),DART_SDK_KNOWN_PATHS,new BooleanFunction<String>(){
    @Override public boolean fun(    String path){
      return isDartSdkHome(path);
    }
  }
);
  dartiumPathComponent.getComboBox().setEditable(true);
  addKnownPathsToCombo(dartiumPathComponent.getComboBox(),DARTIUM_KNOWN_PATHS,new BooleanFunction<String>(){
    @Override public boolean fun(    String path){
      return !path.isEmpty() && new File(path).exists();
    }
  }
);
  final String sdkHomePath=dartSdkPathComponent.getComboBox().getEditor().getItem().toString().trim();
  versionLabel.setText(sdkHomePath.isEmpty() ? "" : getSdkVersion(sdkHomePath));
  final TextComponentAccessor<JComboBox> textComponentAccessor=new TextComponentAccessor<JComboBox>(){
    @Override public String getText(    final JComboBox component){
      return component.getEditor().getItem().toString();
    }
    @Override public void setText(    @NotNull final JComboBox component,    @NotNull final String text){
      if (!text.isEmpty() && !isDartSdkHome(text)) {
        final String probablySdkPath=text + "/dart-sdk";
        if (isDartSdkHome(probablySdkPath)) {
          component.getEditor().setItem(FileUtilRt.toSystemDependentName(probablySdkPath));
          return;
        }
      }
      component.getEditor().setItem(FileUtilRt.toSystemDependentName(text));
    }
  }
;
  final ComponentWithBrowseButton.BrowseFolderActionListener<JComboBox> browseFolderListener=new ComponentWithBrowseButton.BrowseFolderActionListener<JComboBox>("Select Dart SDK path",null,dartSdkPathComponent,project,FileChooserDescriptorFactory.createSingleFolderDescriptor(),textComponentAccessor);
  dartSdkPathComponent.addBrowseFolderListener(project,browseFolderListener);
  dartiumPathComponent.addBrowseFolderListener("Select Dartium browser path",null,project,FileChooserDescriptorFactory.createSingleFileOrExecutableAppDescriptor(),TextComponentAccessor.STRING_COMBOBOX_WHOLE_TEXT);
  final JTextComponent editorComponent=(JTextComponent)dartSdkPathComponent.getComboBox().getEditor().getEditorComponent();
  editorComponent.getDocument().addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    final DocumentEvent e){
      final String sdkHomePath=dartSdkPathComponent.getComboBox().getEditor().getItem().toString().trim();
      versionLabel.setText(sdkHomePath.isEmpty() ? "" : getSdkVersion(sdkHomePath));
      if (!isResettingControlsComputable.compute() && isDartSdkHome(sdkHomePath)) {
        final String dartiumPath=DartiumUtil.getDartiumPathForSdk(sdkHomePath);
        if (dartiumPath != null) {
          dartiumPathComponent.getComboBox().getEditor().setItem(FileUtilRt.toSystemDependentName(dartiumPath));
        }
      }
    }
  }
);
  dartiumSettingsButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      ShowSettingsUtil.getInstance().editConfigurable(dartiumSettingsButton,currentDartiumSettingsRetriever.compute().createConfigurable());
    }
  }
);
  checkedModeCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      DartiumUtil.setCheckedMode(currentDartiumSettingsRetriever.compute().getEnvironmentVariables(),checkedModeCheckBox.isSelected());
    }
  }
);
}
