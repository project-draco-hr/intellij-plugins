{
  super(session);
  final Sdk debuggerSdk=getDebuggerSdk(flexRunnerParameters,flexSdk);
  myAppSdkHome=FileUtil.toSystemIndependentName(flexSdk.getHomePath());
  myDebuggerSdkHome=debuggerSdk.getHomePath();
  myDebuggerVersion=StringUtil.notNullize(debuggerSdk.getVersionString(),"unknown");
  myBreakpointsHandler=new FlexBreakpointsHandler(this);
  if (flexRunnerParameters instanceof FlexUnitRunnerParameters) {
    final FlexUnitRunnerParameters flexUnitParams=(FlexUnitRunnerParameters)flexRunnerParameters;
    openFlexUnitConnections(flexUnitParams.getSocketPolicyPort(),flexUnitParams.getPort());
  }
  final List<String> fdbLaunchCommand=FlexSdkUtils.getCommandLineForSdkTool(session.getProject(),debuggerSdk,getFdbClasspath(),"flex.tools.debugger.cli.DebugCLI",null);
  if (flexRunnerParameters instanceof AirMobileRunnerParameters && ((AirMobileRunnerParameters)flexRunnerParameters).getAirMobileRunTarget() == AirMobileRunTarget.AndroidDevice && ((AirMobileRunnerParameters)flexRunnerParameters).getDebugTransport() == AirMobileDebugTransport.USB) {
    fdbLaunchCommand.add("-p");
    fdbLaunchCommand.add(String.valueOf(((AirMobileRunnerParameters)flexRunnerParameters).getUsbDebugPort()));
  }
  fdbProcess=launchFdb(fdbLaunchCommand);
  final boolean runAsAir=FlexBaseRunner.isRunAsAir(flexRunnerParameters);
  connectToRunningFlashPlayerMode=!runAsAir && flexRunnerParameters.getRunMode() == FlexRunnerParameters.RunMode.ConnectToRunningFlashPlayer;
  if (runAsAir) {
    launchAir((AirRunnerParameters)flexRunnerParameters,flexSdk);
  }
 else {
    launchFlex(flexRunnerParameters);
  }
  reader=new MyFdbOutputReader(fdbProcess.getInputStream());
  startCommandProcessingThread();
}
