{
  super(session);
  final Sdk sdk=bc.getSdk();
  myAppSdkHome=sdk != null ? FileUtil.toSystemIndependentName(sdk.getHomePath()) : null;
  myDebuggerSdkHome=myAppSdkHome;
  myDebuggerVersion=StringUtil.notNullize(sdk != null ? sdk.getVersionString() : null,"unknown");
  myBreakpointsHandler=new FlexBreakpointsHandler(this);
  final List<String> fdbLaunchCommand=FlexSdkUtils.getCommandLineForSdkTool(session.getProject(),myAppSdkHome,null,getFdbClasspath(),"flex.tools.debugger.cli.DebugCLI",null);
  if (params instanceof FlashRunnerParameters && bc.getTargetPlatform() == TargetPlatform.Mobile && ((FlashRunnerParameters)params).getMobileRunTarget() == AirMobileRunTarget.AndroidDevice && ((FlashRunnerParameters)params).getDebugTransport() == AirMobileDebugTransport.USB) {
    fdbLaunchCommand.add("-p");
    fdbLaunchCommand.add(String.valueOf(((FlashRunnerParameters)params).getUsbDebugPort()));
  }
  fdbProcess=launchFdb(fdbLaunchCommand);
  if (params instanceof FlashRunnerParameters) {
    connectToRunningFlashPlayerMode=false;
    final FlashRunnerParameters appParams=(FlashRunnerParameters)params;
switch (bc.getTargetPlatform()) {
case Web:
      final String urlOrPath=appParams.isLaunchUrl() ? appParams.getUrl() : bc.isUseHtmlWrapper() ? bc.getOutputFolder() + "/" + FlexCompilationUtils.getWrapperFileName(bc) : bc.getOutputFilePath();
    sendCommand(new LaunchBrowserCommand(urlOrPath,appParams.getLauncherParameters()));
  break;
case Desktop:
sendAdlStartingCommand(bc,appParams);
break;
case Mobile:
switch (appParams.getMobileRunTarget()) {
case Emulator:
sendAdlStartingCommand(bc,appParams);
break;
case AndroidDevice:
final String appId=FlexBaseRunner.getApplicationId(FlexBaseRunner.getAirDescriptorPath(bc,bc.getAndroidPackagingOptions()));
sendCommand(appParams.getDebugTransport() == AirMobileDebugTransport.Network ? new StartAppOnAndroidDeviceCommand(bc.getSdk(),appId) : new StartDebuggingCommand());
break;
}
}
}
 else if (params instanceof NewFlexUnitRunnerParameters) {
connectToRunningFlashPlayerMode=false;
final FlexUnitCommonParameters flexUnitParams=(FlexUnitCommonParameters)params;
openFlexUnitConnections(flexUnitParams.getSocketPolicyPort(),flexUnitParams.getPort());
if (bc.getTargetPlatform() == TargetPlatform.Web) {
sendCommand(new LaunchBrowserCommand(bc.getOutputFilePath(),flexUnitParams.getLauncherParameters()));
}
 else {
sendAdlStartingCommand(bc,params);
}
}
 else {
connectToRunningFlashPlayerMode=true;
sendCommand(new StartDebuggingCommand());
}
reader=new MyFdbOutputReader(fdbProcess.getInputStream());
startCommandProcessingThread();
}
