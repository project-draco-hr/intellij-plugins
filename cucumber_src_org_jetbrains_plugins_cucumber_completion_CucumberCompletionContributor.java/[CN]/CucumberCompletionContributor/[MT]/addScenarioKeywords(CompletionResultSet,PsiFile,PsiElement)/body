{
  final Project project=originalFile.getProject();
  final GherkinKeywordTable table=GherkinKeywordTable.getKeywordsTable(originalFile,project);
  final List<String> keywords=new ArrayList<>();
  if (!haveBackground(originalFile)) {
    keywords.addAll(table.getBackgroundKeywords());
  }
  final PsiElement prevElement=getPreviousElement(originalPosition);
  if (prevElement != null && prevElement.getNode().getElementType() == GherkinTokenTypes.SCENARIO_KEYWORD) {
    String scenarioKeyword=(String)table.getScenarioKeywords().toArray()[0];
    result=result.withPrefixMatcher(result.getPrefixMatcher().cloneWithPrefix(scenarioKeyword + " " + result.getPrefixMatcher().getPrefix()));
    boolean haveColon=false;
    final String elementText=originalPosition.getText();
    final int rulezzIndex=elementText.indexOf(INTELLIJ_IDEA_RULEZZZ);
    if (rulezzIndex >= 0) {
      haveColon=elementText.substring(rulezzIndex + INTELLIJ_IDEA_RULEZZZ.length()).trim().startsWith(":");
    }
    addKeywordsToResult(table.getScenarioOutlineKeywords(),result,!haveColon,SCENARIO_OUTLINE_KEYWORD_PRIORITY,!haveColon);
  }
 else {
    addKeywordsToResult(table.getScenarioKeywords(),result,true,SCENARIO_KEYWORD_PRIORITY,true);
    addKeywordsToResult(table.getScenarioOutlineKeywords(),result,true,SCENARIO_OUTLINE_KEYWORD_PRIORITY,true);
  }
  if (PsiTreeUtil.getParentOfType(originalPosition,GherkinScenarioOutlineImpl.class,GherkinExamplesBlockImpl.class) != null) {
    keywords.addAll(table.getExampleSectionKeywords());
  }
  addKeywordsToResult(keywords,result,true);
}
