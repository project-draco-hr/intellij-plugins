{
  final Language rx=Language.findLanguageByID("RegExp");
  if (rx != null) {
    final PsiFile rxFile=PsiFileFactory.getInstance(context.getProject()).createFileFromText("a",rx,item.getLookupString());
    final List<TextRange> groupRanges=new ArrayList<TextRange>();
    rxFile.acceptChildren(new PsiRecursiveElementVisitor(){
      @Override public void visitElement(      PsiElement element){
        super.visitElement(element);
        if (element.toString().startsWith("RegExpGroup")) {
          groupRanges.add(element.getTextRange());
        }
      }
    }
);
    if (!groupRanges.isEmpty()) {
      final PsiElement element=context.getFile().findElementAt(context.getStartOffset());
      final GherkinStep step=PsiTreeUtil.getParentOfType(element,GherkinStep.class);
      if (step != null) {
        final TemplateBuilder builder=TemplateBuilderFactory.getInstance().createTemplateBuilder(step);
        int off=context.getStartOffset() - step.getTextRange().getStartOffset();
        final String stepText=step.getText();
        for (        TextRange groupRange : groupRanges) {
          final TextRange shiftedRange=groupRange.shiftRight(off);
          final String matchedText=shiftedRange.substring(stepText);
          builder.replaceRange(shiftedRange,INGORED_MATCHER_TEXT_SET.contains(matchedText) ? "" : matchedText);
        }
        builder.run();
      }
    }
  }
}
