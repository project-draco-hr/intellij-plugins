{
  final Element element=suggestion.getElement();
  final Location location=element == null ? null : element.getLocation();
  final DartLookupObject lookupObject=new DartLookupObject(project,location,suggestion.getRelevance());
  LookupElementBuilder lookup=LookupElementBuilder.create(lookupObject,suggestion.getCompletion());
  if (suggestion.getKind().equals(CompletionSuggestionKind.KEYWORD)) {
    lookup=lookup.bold();
  }
  boolean shouldSetSelection=true;
  if (element != null) {
    if (element.isDeprecated()) {
      lookup=lookup.strikeout();
    }
    final String typeParameters=element.getTypeParameters();
    if (typeParameters != null) {
      lookup=lookup.appendTailText(typeParameters,false);
    }
    final String parameters=element.getParameters();
    if (parameters != null) {
      lookup=lookup.appendTailText(parameters,false);
    }
    final String returnType=element.getReturnType();
    if (!StringUtils.isEmpty(returnType)) {
      lookup=lookup.withTypeText(returnType,true);
    }
    Icon icon=getBaseImage(element);
    if (icon != null) {
      icon=applyVisibility(icon,element.isPrivate());
      icon=applyOverlay(icon,element.isFinal(),AllIcons.Nodes.FinalMark);
      icon=applyOverlay(icon,element.isConst(),AllIcons.Nodes.FinalMark);
      lookup=lookup.withIcon(icon);
    }
    if (CompletionSuggestionKind.INVOCATION.equals(suggestion.getKind())) {
      shouldSetSelection=false;
      final List<String> parameterNames=suggestion.getParameterNames();
      if (parameterNames != null) {
        lookup=lookup.withInsertHandler(new InsertHandler<LookupElement>(){
          @Override public void handleInsert(          InsertionContext context,          LookupElement item){
            if (parameterNames.isEmpty()) {
              ParenthesesInsertHandler.NO_PARAMETERS.handleInsert(context,item);
            }
 else {
              ParenthesesInsertHandler.WITH_PARAMETERS.handleInsert(context,item);
              final Editor editor=context.getEditor();
              final PsiElement psiElement=lookupObject.getElement();
              AutoPopupController.getInstance(project).autoPopupParameterInfo(editor,psiElement);
            }
          }
        }
);
      }
    }
  }
  if (shouldSetSelection) {
    lookup=lookup.withInsertHandler(new InsertHandler<LookupElement>(){
      @Override public void handleInsert(      InsertionContext context,      LookupElement item){
        final Editor editor=context.getEditor();
        final int startOffset=context.getStartOffset() + suggestion.getSelectionOffset();
        final int endOffset=startOffset + suggestion.getSelectionLength();
        editor.getCaretModel().moveToOffset(startOffset);
        if (endOffset > startOffset) {
          editor.getSelectionModel().setSelection(startOffset,endOffset);
        }
      }
    }
);
  }
  return lookup;
}
