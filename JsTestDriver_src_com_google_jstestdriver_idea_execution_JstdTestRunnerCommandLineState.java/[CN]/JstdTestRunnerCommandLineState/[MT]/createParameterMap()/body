{
  Map<TestRunner.ParameterKey,String> parameters=Maps.newLinkedHashMap();
  String serverUrl=myRunSettings.getServerType() == ServerType.INTERNAL ? "http://localhost:" + JstdToolWindowPanel.serverPort : myRunSettings.getServerAddress();
  parameters.put(TestRunner.ParameterKey.SERVER_URL,serverUrl);
  if (myRunSettings.getTestType() == TestType.ALL_CONFIGS_IN_DIRECTORY) {
    parameters.put(TestRunner.ParameterKey.ALL_CONFIGS_IN_DIRECTORY,myRunSettings.getDirectory());
  }
  List<VirtualFile> jstdConfigs=JstdSettingsUtil.collectJstdConfigs(myProject,myRunSettings);
  parameters.put(TestRunner.ParameterKey.CONFIG_FILES,joinJstdConfigs(jstdConfigs));
  if (myRunSettings.getTestType() == TestType.TEST_CASE) {
    parameters.put(TestRunner.ParameterKey.TEST_CASE,myRunSettings.getTestCaseName());
  }
  if (myRunSettings.getTestType() == TestType.TEST_METHOD) {
    parameters.put(TestRunner.ParameterKey.TEST_CASE,myRunSettings.getTestCaseName());
    parameters.put(TestRunner.ParameterKey.TEST_METHOD,myRunSettings.getTestMethodName());
  }
  if (myCoverageFilePath != null) {
    parameters.put(TestRunner.ParameterKey.COVERAGE_OUTPUT_FILE,myCoverageFilePath);
    if (!myRunSettings.getFilesExcludedFromCoverage().isEmpty()) {
      String excludedPaths=EscapeUtils.join(myRunSettings.getFilesExcludedFromCoverage(),',');
      parameters.put(TestRunner.ParameterKey.COVERAGE_EXCLUDED_PATHS,excludedPaths);
    }
  }
  return parameters;
}
