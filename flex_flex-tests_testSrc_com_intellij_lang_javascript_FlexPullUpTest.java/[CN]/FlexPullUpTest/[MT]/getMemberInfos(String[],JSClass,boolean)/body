{
  final List<JSMemberInfo> memberInfos=new ArrayList<JSMemberInfo>();
  JSMemberInfo.extractClassMembers(clazz,memberInfos,new MemberInfoBase.Filter<JSAttributeListOwner>(){
    @Override public boolean includeMember(    JSAttributeListOwner member){
      return ArrayUtil.contains(member.getName(),members);
    }
  }
);
  for (  JSMemberInfo memberInfo : memberInfos) {
    memberInfo.setChecked(true);
    if (makeAbstract) {
      memberInfo.setToAbstract(true);
    }
  }
  JSMemberInfo.sortByOffset(memberInfos);
  return memberInfos;
}
