{
  String[] conflicts=new String[]{"Class Super already contains a method foo(Aux)","Method foo(Aux) uses field Sub.v, which is not moved to the superclass","Method foo(Aux) uses field Sub.v2, which is not moved to the superclass","Method foo(Aux) uses method Sub.bar(), which is not moved to the superclass","Class Aux with internal visibility won't be accessible from method foo(Aux)","Inner class FileLocal won't be accessible from method foo(Aux)","Method foo(Aux) uses field Sub.st1, which is not accessible from the superclass","Method foo(Aux) uses field Sub.st2, which is not accessible from the superclass","Field fooVar uses field Sub.st4, which is not accessible from the superclass","Class Aux2 with internal visibility won't be accessible from field fooVar2"};
  doTestConflicts("bar.Sub","foo.Super",DocCommentPolicy.ASIS,conflicts,"foo","fooVar","fooVar2");
}
