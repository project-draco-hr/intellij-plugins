{
  final DataContext dataContext=e.getDataContext();
  final Context context=fetchContext(dataContext);
  if (context == null) {
    throw new RuntimeException("Can't fetch " + JstdQUnitCreateTestAction.class.getSimpleName() + " from ActionEvent "+ e);
  }
  final PsiElement topPsiElement=getTopmostPsiElements(context.elementUnderCaret);
  final Project project=topPsiElement.getProject();
  Document document=context.editor.getDocument();
  final int offset;
  if (topPsiElement instanceof PsiWhiteSpace) {
    int lineNo=document.getLineNumber(context.caretOffsetInDocument);
    offset=document.getLineStartOffset(lineNo);
  }
 else {
    offset=topPsiElement.getTextOffset();
  }
  context.editor.getCaretModel().moveToOffset(offset);
  TemplateManager templateManager=TemplateManager.getInstance(project);
  TemplateImpl template=new TemplateImpl("","");
  template.setKey("jstd.generate.create-qunit-test");
  template.setDescription("sync edit template");
  template.setToIndent(true);
  template.setToReformat(true);
  template.setToShortenLongNames(false);
  template.setInline(false);
  template.addTextSegment("test");
  template.addTextSegment("(");
  template.addTextSegment("\"");
  template.addVariable("NAME",new ConstantNode("name"),new ConstantNode("name"),true);
  template.addTextSegment("\", ");
  template.addTextSegment("function()");
  template.addTextSegment("{");
  template.addEndVariable();
  template.addTextSegment("}");
  template.addTextSegment(");\n");
  template.addEndVariable();
  templateManager.startTemplate(context.editor,"",template);
}
