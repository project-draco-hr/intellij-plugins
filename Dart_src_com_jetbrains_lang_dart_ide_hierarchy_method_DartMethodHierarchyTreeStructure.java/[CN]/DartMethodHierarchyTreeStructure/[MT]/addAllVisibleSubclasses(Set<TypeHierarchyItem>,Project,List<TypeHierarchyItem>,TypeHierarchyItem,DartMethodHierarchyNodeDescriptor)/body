{
  if (!stackItems.add(item)) {
    descriptor.setCachedChildren(ArrayUtil.EMPTY_OBJECT_ARRAY);
    return;
  }
  HierarchyBrowserManager.State state=HierarchyBrowserManager.getInstance(myProject).getState();
  if (state == null)   throw new NullPointerException();
  List<HierarchyNodeDescriptor> subDescriptors=Lists.newArrayList();
  try {
    for (    int index : item.getSubclasses()) {
      final TypeHierarchyItem subItem=items.get(index);
      final DartClass subclass=findDartClass(project,subItem);
      if (subclass != null) {
        if (state.HIDE_CLASSES_WHERE_METHOD_NOT_IMPLEMENTED) {
          if (shouldHideClass(subclass)) {
            continue;
          }
        }
        final DartMethodHierarchyNodeDescriptor subDescriptor=new DartMethodHierarchyNodeDescriptor(project,descriptor,subclass,false,this);
        subDescriptors.add(subDescriptor);
        addAllVisibleSubclasses(stackItems,project,items,subItem,subDescriptor);
      }
    }
  }
  finally {
    stackItems.remove(item);
  }
  descriptor.setCachedChildren(subDescriptors.toArray(new HierarchyNodeDescriptor[subDescriptors.size()]));
}
