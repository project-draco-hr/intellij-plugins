{
  shutdownIfOrphan();
  try {
    CmdLineFlags cmdLineFlags=new CmdLineFlagsFactory().create(args);
    List<Plugin> cmdLinePlugins=cmdLineFlags.getPlugins();
    LogManager.getLogManager().readConfiguration(cmdLineFlags.getRunnerMode().getLogConfig());
    final PluginLoader pluginLoader=new PluginLoader();
    final List<Module> pluginModules=pluginLoader.load(cmdLinePlugins);
    logger.debug("loaded plugins %s",pluginModules);
    JsTestDriverBuilder builder=new JsTestDriverBuilder();
    BasePaths basePath=cmdLineFlags.getBasePath();
    builder.addBasePaths(basePath);
    builder.setDefaultConfiguration(new DefaultConfiguration(basePath));
    builder.setConfigurationSource(cmdLineFlags.getConfigurationSource());
    builder.addPluginModules(pluginModules);
    builder.withPluginInitializer(TestResultPrintingModule.TestResultPrintingInitializer.class);
    builder.setRunnerMode(cmdLineFlags.getRunnerMode());
    builder.setFlags(cmdLineFlags.getUnusedFlagsAsArgs());
    builder.addServerListener(new JstdIntellijServerListener());
    JsTestDriver jstd=builder.build();
    jstd.runConfiguration();
    logger.info("Finished action run.");
  }
 catch (  InvalidFlagException e) {
    e.printErrorMessages(System.out);
    CmdLineFlags.printUsage(System.out);
    System.exit(1);
  }
catch (  UnreadableFilesException e) {
    System.out.println("Configuration Error: \n" + e.getMessage());
    logger.debug("Details: {}",e);
    System.exit(1);
  }
catch (  ConfigurationException e) {
    System.out.println("Configuration Error: \n" + e.getMessage());
    logger.debug("Details: {}",e);
    System.exit(1);
  }
catch (  RetryException e) {
    System.out.println("Tests failed due to unexpected environment issue: " + e.getCause().getMessage());
    System.exit(1);
  }
catch (  FailureException e) {
    System.out.println("Tests failed: " + e.getMessage());
    System.exit(1);
  }
catch (  BrowserPanicException e) {
    System.out.println("Test run failed due to unresponsive browser: " + e);
    System.exit(1);
  }
catch (  Exception e) {
    logger.debug("Error {}",e);
    e.printStackTrace();
    System.out.println("Unexpected Runner Condition: " + e.getMessage() + "\n Use --runnerMode DEBUG for more information.");
    System.exit(1);
  }
}
