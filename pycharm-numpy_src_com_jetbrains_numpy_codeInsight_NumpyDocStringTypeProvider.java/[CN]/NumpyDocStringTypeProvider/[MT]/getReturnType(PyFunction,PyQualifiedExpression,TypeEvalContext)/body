{
  if (isInsideNumPy(function)) {
    final NumPyDocString docString=NumPyDocString.forFunction(function,callSite);
    if (docString != null) {
      final List<NumPyDocStringParameter> returns=docString.getReturns();
      final PyPsiFacade facade=getPsiFacade(function);
switch (returns.size()) {
case 0:
        return facade.parseTypeAnnotation("None",function);
case 1:
      final String typeName=returns.get(0).getType();
    if (typeName != null) {
      return parseNumpyDocType(function,typeName);
    }
  return null;
default :
final List<PyType> members=new ArrayList<PyType>();
for (NumPyDocStringParameter ret : returns) {
final String memberTypeName=ret.getType();
members.add(memberTypeName != null ? parseNumpyDocType(function,memberTypeName) : null);
}
return facade.createTupleType(members,function);
}
}
}
return null;
}
