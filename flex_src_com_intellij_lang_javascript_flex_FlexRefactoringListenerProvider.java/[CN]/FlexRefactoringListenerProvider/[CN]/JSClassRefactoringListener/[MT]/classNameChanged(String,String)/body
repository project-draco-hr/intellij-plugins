{
  for (  FlexBuildConfiguration bc : FlexBuildConfigurationManager.getInstance(myModule).getBuildConfigurations()) {
    if (bc.getOutputType() == OutputType.Application && bc.getMainClass().equals(oldClassName)) {
      FlexProjectConfigurationEditor.makeNonStructuralModification(bc,new Consumer<NonStructuralModifiableBuildConfiguration>(){
        @Override public void consume(        final NonStructuralModifiableBuildConfiguration configuration){
          configuration.setMainClass(newClassName);
        }
      }
);
    }
    if (BCUtils.canHaveRLMsAndRuntimeStylesheets(bc)) {
      final Collection<FlexBuildConfiguration.RLMInfo> oldRLMs=bc.getRLMs();
      final Collection<FlexBuildConfiguration.RLMInfo> newRLMs=new ArrayList<FlexBuildConfiguration.RLMInfo>();
      boolean changed=false;
      for (      FlexBuildConfiguration.RLMInfo rlm : oldRLMs) {
        if (rlm.MAIN_CLASS.equals(oldClassName)) {
          changed=true;
          final String outputFileName=rlm.OUTPUT_FILE.equals(BCUtils.suggestRLMOutputPath(rlm.MAIN_CLASS)) ? BCUtils.suggestRLMOutputPath(newClassName) : rlm.OUTPUT_FILE;
          newRLMs.add(new FlexBuildConfiguration.RLMInfo(newClassName,outputFileName,rlm.OPTIMIZE));
        }
 else {
          newRLMs.add(rlm);
        }
      }
      if (changed) {
        FlexProjectConfigurationEditor.makeNonStructuralModification(bc,new Consumer<NonStructuralModifiableBuildConfiguration>(){
          public void consume(          final NonStructuralModifiableBuildConfiguration configuration){
            configuration.setRLMs(newRLMs);
          }
        }
);
      }
    }
  }
}
