{
  if (isFileBased(command) || command == ServerMethod.SAVE_PROJECT_WINDOW_BOUNDS || command == ServerMethod.DOCUMENT_OPENED) {
    return super.processCommand(command);
  }
switch (command) {
case ServerMethod.SHOW_ERROR:
    final String errorMessage=reader.readUTF();
  if (expectedError == null) {
    throw new IOException(errorMessage);
  }
 else {
    if (!errorMessage.startsWith(expectedError)) {
      throw new IOException("Expected error message " + expectedError + ", but got "+ errorMessage);
    }
    expectedError=null;
  }
break;
case TestServerMethod.fail:
throw new IOException(reader.readUTF());
case TestServerMethod.success:
String message=reader.readUTF();
if (message.equals("__passed__")) {
return false;
}
 else {
throw new IOException(message);
}
case ServerMethod.LOG_WARNING:
LOG.warn(reader.readUTF());
break;
default :
if (customMessageHandler != null && customMessageHandler.getExpectedCommand() == command) {
customMessageHandler.process();
customMessageHandler=null;
return false;
}
 else {
throw new IllegalStateException("Unexpected server command: " + command);
}
}
return true;
}
