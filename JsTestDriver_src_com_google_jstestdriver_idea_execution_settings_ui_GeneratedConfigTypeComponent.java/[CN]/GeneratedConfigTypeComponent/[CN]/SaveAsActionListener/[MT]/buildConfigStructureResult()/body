{
  return ApplicationManager.getApplication().runReadAction(new Computable<ResultWithError<JstdConfigStructure,String>>(){
    @Override public ResultWithError<JstdConfigStructure,String> compute(){
      File jsIoFile=new File(myJsFilePath);
      VirtualFile jsVirtualFile=LocalFileSystem.getInstance().findFileByIoFile(jsIoFile);
      if (jsVirtualFile == null || !jsVirtualFile.isValid()) {
        return ResultWithError.newError("Could not find JavaScript file at " + jsIoFile.getAbsolutePath());
      }
      PsiFile psiFile=PsiManager.getInstance(myProject).findFile(jsVirtualFile);
      JSFile jsPsiFile=CastUtils.tryCast(psiFile,JSFile.class);
      if (jsPsiFile == null) {
        return ResultWithError.newError("Could not process " + jsIoFile.getAbsolutePath() + " as JavaScript file.");
      }
      JstdConfigGenerator generator=JstdConfigGenerator.INSTANCE;
      JstdConfigStructure configStructure=generator.generateJstdConfigStructure(jsPsiFile);
      return ResultWithError.newResult(configStructure);
    }
  }
);
}
