{
  Map<String,String> sdks=myParams.getFlexIdeSdksToCreate();
  if (sdks.isEmpty())   return;
  File libConfigFile=PathManager.getOptionsFile(ApplicationLibraryTable.getExternalFileName());
  try {
    Document document;
    if (libConfigFile.isFile()) {
      document=JDOMUtil.loadDocument(libConfigFile);
    }
 else {
      Element element=new Element("application");
      document=new Document(element);
    }
    Element libraryTable=JDomConvertingUtil.findOrCreateComponentElement(document.getRootElement(),COMPONENT_NAME);
    final PathMacroManager pathMacroManager=PathMacroManager.getInstance(ApplicationManager.getApplication());
    for (    Map.Entry<String,String> entry : sdks.entrySet()) {
      final String homePath=pathMacroManager.expandPath(entry.getKey());
      final VirtualFile sdkHome=LocalFileSystem.getInstance().findFileByPath(homePath);
      ConverterFlexSdkModificator sdkModificator=new ConverterFlexSdkModificator(homePath,entry.getValue(),myParams.getExistingGlobalLibrariesNames());
      FlexSdkUtils.setupSdkPaths(sdkHome,null,sdkModificator);
      if (sdkModificator.getLibraryElement() != null) {
        libraryTable.addContent(sdkModificator.getLibraryElement());
      }
      myParams.addExistingGlobalLibraryName(sdkModificator.getName());
    }
    JDOMUtil.writeDocument(document,libConfigFile,"\n");
  }
 catch (  JDOMException e) {
    LOG.warn(e);
  }
catch (  IOException e) {
    LOG.warn(e);
  }
}
