{
  return new DartVisitor(){
    public void visitReferenceExpression(    @NotNull final DartReferenceExpression referenceExpression){
      if (PsiTreeUtil.getChildOfType(referenceExpression,DartReferenceExpression.class) != null)       return;
      final PsiElement resolve=referenceExpression.resolve();
      final PsiElement parent=resolve == null ? null : resolve.getParent();
      if (resolve instanceof DartComponentName && (parent instanceof DartComponent) && ((DartComponent)parent).isDeprecated()) {
        holder.registerProblem(referenceExpression,DartBundle.message("ref.is.deprecated"),ProblemHighlightType.LIKE_DEPRECATED,LocalQuickFix.EMPTY_ARRAY);
      }
    }
  }
;
}
