{
  commandLine.setEnvironment("com.google.dart.sdk",myDartSettings.getSdkPath());
  commandLine.addParameter("--ignore-unrecognized-flags");
  StringTokenizer argumentsTokenizer=new StringTokenizer(StringUtil.notNullize(myUnitParameters.getVMOptions()));
  while (argumentsTokenizer.hasMoreTokens()) {
    commandLine.addParameter(argumentsTokenizer.nextToken());
  }
  String libUrl=VfsUtilCore.pathToUrl(myUnitParameters.getFilePath());
  final VirtualFile libraryRoot=VirtualFileManager.getInstance().findFileByUrl(libUrl);
  final VirtualFile packages=DartResolveUtil.findPackagesFolder(libraryRoot,getEnvironment().getProject());
  if (packages != null && packages.isDirectory()) {
    commandLine.addParameter("--package-root=" + packages.getPath() + "/");
  }
  if (myDebuggingPort > 0) {
    commandLine.addParameter("--debug:" + myDebuggingPort);
  }
  try {
    commandLine.addParameter(createPatchedFile());
  }
 catch (  IOException e) {
    LOG.debug(e);
    throw new ExecutionException("Can't create runner!");
  }
  argumentsTokenizer=new StringTokenizer(StringUtil.notNullize(myUnitParameters.getArguments()));
  while (argumentsTokenizer.hasMoreTokens()) {
    commandLine.addParameter(argumentsTokenizer.nextToken());
  }
}
