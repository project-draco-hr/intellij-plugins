{
  List<ParsedHeaderClause> clauses=parseStandardHeader((String)headerMap.get(Constants.BUNDLE_SYMBOLICNAME));
  if (clauses.size() > 0) {
    if (clauses.size() > 1) {
      throw new BundleException("Cannot have multiple symbolic names: " + headerMap.get(Constants.BUNDLE_SYMBOLICNAME));
    }
 else     if (clauses.get(0).m_paths.size() > 1) {
      throw new BundleException("Cannot have multiple symbolic names: " + headerMap.get(Constants.BUNDLE_SYMBOLICNAME));
    }
    Version bundleVersion=Version.emptyVersion;
    if (headerMap.get(Constants.BUNDLE_VERSION) != null) {
      try {
        bundleVersion=Version.parseVersion((String)headerMap.get(Constants.BUNDLE_VERSION));
      }
 catch (      RuntimeException ex) {
        String mv=getManifestVersion(headerMap);
        if (mv != null) {
          throw ex;
        }
        bundleVersion=Version.emptyVersion;
      }
    }
    String symName=(String)clauses.get(0).m_paths.get(0);
    clauses.get(0).m_attrs.put(BundleRevision.BUNDLE_NAMESPACE,symName);
    clauses.get(0).m_attrs.put(Constants.BUNDLE_VERSION_ATTRIBUTE,bundleVersion);
    return new BundleCapabilityImpl(owner,BundleRevision.BUNDLE_NAMESPACE,clauses.get(0).m_dirs,clauses.get(0).m_attrs);
  }
  return null;
}
