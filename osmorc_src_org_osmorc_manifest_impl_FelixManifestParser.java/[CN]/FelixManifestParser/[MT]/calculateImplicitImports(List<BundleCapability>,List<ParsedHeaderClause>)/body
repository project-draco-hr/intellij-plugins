{
  List<ParsedHeaderClause> clauseList=new ArrayList();
  Map map=new HashMap();
  for (int impIdx=0; impIdx < imports.size(); impIdx++) {
    for (int pathIdx=0; pathIdx < imports.get(impIdx).m_paths.size(); pathIdx++) {
      map.put(imports.get(impIdx).m_paths.get(pathIdx),imports.get(impIdx).m_paths.get(pathIdx));
    }
  }
  for (int i=0; i < exports.size(); i++) {
    if (map.get(exports.get(i).getAttributes().get(BundleRevision.PACKAGE_NAMESPACE)) == null) {
      Map<String,Object> attrs=new HashMap<String,Object>();
      Object version=exports.get(i).getAttributes().get(Constants.VERSION_ATTRIBUTE);
      if (version != null) {
        attrs.put(Constants.VERSION_ATTRIBUTE,VersionRange.parse(version.toString()));
      }
      List<String> paths=new ArrayList();
      paths.add((String)exports.get(i).getAttributes().get(BundleRevision.PACKAGE_NAMESPACE));
      clauseList.add(new ParsedHeaderClause(paths,Collections.EMPTY_MAP,attrs,Collections.EMPTY_MAP));
    }
  }
  return clauseList;
}
