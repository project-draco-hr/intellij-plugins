{
  FileDocumentManager.getInstance().saveAllDocuments();
  KarmaRunProfileState karmaState=ObjectUtils.tryCast(state,KarmaRunProfileState.class);
  if (karmaState == null) {
    return null;
  }
  final KarmaServer server=karmaState.getServerOrStart(env.getExecutor());
  if (server == null) {
    return null;
  }
  KarmaCoveragePeer coveragePeer=server.getCoveragePeer();
  KarmaCoverageInitStatus initStatus=coveragePeer.getInitStatus();
  if (initStatus != null) {
    if (!initStatus.isCoverageReportFound() && !initStatus.isCoveragePluginInstalled()) {
      KarmaCoveragePluginMissingDialog.showWarning(project,server.getKarmaPackageDir());
      server.getRestarter().requestRestart();
      return showKarmaServerOnly(server,env,contentToReuse);
    }
    return executeAfterSuccessfulInitialization(project,karmaState,contentToReuse,env,server);
  }
  coveragePeer.doWhenCoverageInitialized(new KarmaCoverageInitializationListener(){
    @Override public void onCoverageInitialized(    @NotNull KarmaCoverageInitStatus initStatus){
      RunnerAndConfigurationSettings configuration=env.getRunnerAndConfigurationSettings();
      if (configuration != null) {
        ProgramRunnerUtil.executeConfiguration(project,configuration,env.getExecutor());
      }
    }
  }
,project);
  return null;
}
