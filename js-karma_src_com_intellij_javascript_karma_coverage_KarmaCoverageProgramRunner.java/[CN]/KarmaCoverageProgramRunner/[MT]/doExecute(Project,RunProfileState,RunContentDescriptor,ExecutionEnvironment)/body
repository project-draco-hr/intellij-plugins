{
  FileDocumentManager.getInstance().saveAllDocuments();
  KarmaRunProfileState karmaState=ObjectUtils.tryCast(state,KarmaRunProfileState.class);
  if (karmaState == null) {
    return null;
  }
  final KarmaServer server=karmaState.getServerOrStart(env.getExecutor());
  if (server == null) {
    return null;
  }
  KarmaCoveragePeer coveragePeer=server.getCoveragePeer();
  KarmaCoverageStartupStatus status=coveragePeer.getStartupStatus();
  if (status != null) {
    if (status.isSuccessful()) {
      return executeAfterSuccessfulInitialization(project,karmaState,contentToReuse,env,server);
    }
    return showWarningUi(status,server,env,contentToReuse);
  }
  coveragePeer.doWhenCoverageInitialized(new KarmaCoverageInitializationListener(){
    @Override public void onCoverageInitialized(    @NotNull KarmaCoverageStartupStatus initStatus){
      RunnerAndConfigurationSettings configuration=env.getRunnerAndConfigurationSettings();
      if (configuration != null) {
        ProgramRunnerUtil.executeConfiguration(project,configuration,env.getExecutor());
      }
    }
  }
);
  return null;
}
