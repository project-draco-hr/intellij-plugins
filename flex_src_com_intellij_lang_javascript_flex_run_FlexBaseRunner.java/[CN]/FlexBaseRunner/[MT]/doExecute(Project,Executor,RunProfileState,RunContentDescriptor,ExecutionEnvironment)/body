{
  FileDocumentManager.getInstance().saveAllDocuments();
  final RunProfile runProfile=environment.getRunProfile();
  if (runProfile instanceof FlexIdeRunConfiguration) {
    final FlexIdeRunnerParameters params=((FlexIdeRunConfiguration)runProfile).getRunnerParameters();
    final Pair<Module,FlexIdeBuildConfiguration> moduleAndConfig=getModuleAndConfig(project,params);
    final Module module=moduleAndConfig.first;
    final FlexIdeBuildConfiguration config=moduleAndConfig.second;
    checkConfiguration(module,config);
    if (config.getTargetPlatform() == TargetPlatform.Web && !params.isLaunchUrl()) {
      try {
        final String canonicalPath=new File(config.getOutputFilePath()).getCanonicalPath();
        FlashPlayerTrustUtil.updateTrustedStatus(module.getProject(),params.isRunTrusted(),false,canonicalPath);
      }
 catch (      IOException e) {
      }
    }
    return launchFlexIdeConfig(module,config,params,executor,state,contentToReuse,environment);
  }
  final FlexRunnerParameters flexRunnerParameters=(((FlexRunConfiguration)runProfile)).getRunnerParameters();
  final Module module=ModuleManager.getInstance(project).findModuleByName(flexRunnerParameters.getModuleName());
  final Sdk flexSdk=module == null ? null : FlexUtils.getFlexSdkForFlexModuleOrItsFlexFacets(module);
  if (flexSdk == null) {
    throw new CantRunException(FlexBundle.message("cannot.find.flex.sdk"));
  }
  final boolean isDebug=this instanceof FlexDebugRunner;
  final boolean ok=isRunAsAir(flexRunnerParameters) ? checkAirParams((AirRunnerParameters)flexRunnerParameters,flexSdk,isDebug) : checkFlexParams(module,flexRunnerParameters);
  if (ok) {
    if (isDebug) {
      checkDebugInfoEnabled((FlexRunConfiguration)runProfile);
    }
    if (needToCheckThatCompilationEnabled(flexRunnerParameters)) {
      checkIfCompilationEnabled(module,(FlexRunConfiguration)runProfile,isDebug);
    }
    FlashPlayerTrustUtil.updateTrustedStatus(project,isDebug,flexRunnerParameters);
    return doLaunch(project,executor,state,contentToReuse,environment,flexSdk,flexRunnerParameters);
  }
  return null;
}
