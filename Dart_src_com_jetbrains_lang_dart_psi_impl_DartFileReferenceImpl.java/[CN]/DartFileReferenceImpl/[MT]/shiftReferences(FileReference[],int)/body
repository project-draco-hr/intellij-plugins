{
  return ContainerUtil.map(references,new Function<FileReference,FileReference>(){
    @Override public FileReference fun(    FileReference reference){
      return new FileReference(reference.getFileReferenceSet(),reference.getRangeInElement().shiftRight(shift),reference.getIndex(),reference.getText());
    }
  }
,FileReference.EMPTY);
public static class DartPathOrLibraryManipulator implements ElementManipulator<DartPathOrLibraryReference> {
    @Override public DartPathOrLibraryReference handleContentChange(    DartPathOrLibraryReference element,    TextRange range,    String newContent) throws IncorrectOperationException {
      return element;
    }
    @Override public DartPathOrLibraryReference handleContentChange(    DartPathOrLibraryReference element,    String newContent) throws IncorrectOperationException {
      return element;
    }
    @Override public TextRange getRangeInElement(    DartPathOrLibraryReference element){
      return element.getTextRange();
    }
  }
}
