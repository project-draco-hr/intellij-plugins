{
  final String url=StringUtil.unquoteString(getText());
  if (url.startsWith(PACKAGE_PREFIX)) {
    final VirtualFile file=DartResolveUtil.getRealVirtualFile(getContainingFile());
    if (file == null)     return PsiReference.EMPTY_ARRAY;
    final DartUrlResolver dartUrlResolver=DartUrlResolver.getInstance(getProject(),file);
    final int slashIndex=url.indexOf('/');
    if (slashIndex > 0) {
      final String packageName=url.substring(PACKAGE_PREFIX.length(),slashIndex);
      final VirtualFile packageDir=dartUrlResolver.getPackageDirIfLivePackageOrFromPubListPackageDirs(packageName);
      if (packageDir != null) {
        return getPackageReferences(file,packageDir,url.substring(slashIndex + 1),slashIndex + 1);
      }
    }
    final String relPath=url.substring(PACKAGE_PREFIX.length());
    final VirtualFile[] packageRoots=dartUrlResolver.getPackageRoots();
    if (packageRoots.length == 0)     return PsiReference.EMPTY_ARRAY;
    if (packageRoots.length == 1)     return getPackageReferences(file,packageRoots[0],relPath,PACKAGE_PREFIX.length());
    final Collection<PsiReference> result=new SmartList<PsiReference>();
    for (    VirtualFile packageRoot : packageRoots) {
      if (packageRoot.findFileByRelativePath(relPath) != null) {
        ContainerUtil.addAll(result,getPackageReferences(file,packageRoot,relPath,PACKAGE_PREFIX.length()));
      }
    }
    return result.toArray(new PsiReference[result.size()]);
  }
  final FileReferenceSet referenceSet=new FileReferenceSet(url,this,1,null,false,true);
  return ArrayUtil.mergeArrays(super.getReferences(),referenceSet.getAllReferences());
}
