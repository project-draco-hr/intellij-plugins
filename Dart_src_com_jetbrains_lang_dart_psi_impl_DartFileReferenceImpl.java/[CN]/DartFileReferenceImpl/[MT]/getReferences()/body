{
  final String path=StringUtil.unquoteString(getText());
  if (path.startsWith(PACKAGE_PREFIX)) {
    final VirtualFile file=DartResolveUtil.getRealVirtualFile(getContainingFile());
    if (file == null)     return PsiReference.EMPTY_ARRAY;
    final VirtualFile pubspecYamlFile=PubspecYamlUtil.getPubspecYamlFile(getProject(),file);
    final String pubspecName=pubspecYamlFile == null ? null : PubspecYamlUtil.getPubspecName(pubspecYamlFile);
    final String prefix=pubspecName == null ? null : PACKAGE_PREFIX + pubspecName + "/";
    if (prefix != null && path.startsWith(prefix)) {
      final VirtualFile libFolder=pubspecYamlFile.getParent().findChild("lib");
      return getPackageReferences(file,libFolder,path.substring(prefix.length()),prefix.length() + 1);
    }
 else {
      final String relPath=path.substring(PACKAGE_PREFIX.length());
      final List<VirtualFile> packageRoots=PubspecYamlUtil.getDartPackageRoots(getProject(),file);
      for (      VirtualFile packageRoot : packageRoots) {
        if (packageRoot.findFileByRelativePath(relPath) != null) {
          return getPackageReferences(file,packageRoot,relPath,PACKAGE_PREFIX.length() + 1);
        }
      }
      return PsiReference.EMPTY_ARRAY;
    }
  }
  final FileReferenceSet referenceSet=new FileReferenceSet(path,this,1,null,false,true);
  return ArrayUtil.mergeArrays(super.getReferences(),referenceSet.getAllReferences());
}
