{
  if (name.equals(STYLE_PROTO_CHAIN)) {
  }
  if (flexInjected) {
    return false;
  }
  boolean isStyleProtoChain=name.equals(STYLE_PROTO_CHAIN);
  if (isStyleProtoChain) {
    final int oldPosition=byteBuffer.position();
    byteBuffer.position(byteBuffer.position() + 4 + name.length()+ 1);
    parseCPoolAndRenameStyleProtoChain();
    byteBuffer.position(oldPosition + 4 + 10);
    byteBuffer.put((byte)'F');
    byteBuffer.position(oldPosition);
  }
  if (isStyleProtoChain ? flexSdkVersion.equals("4.5") : (flexSdkVersion.equals("4.1") && name.equals("mx.styles:CSSStyleDeclaration"))) {
    flexInjected=true;
    byteBuffer.limit(byteBuffer.position() + length);
    byteBuffer.position(lastWrittenPosition);
    outputFileChannel.write(byteBuffer);
    lastWrittenPosition=byteBuffer.limit();
    byteBuffer.limit(byteBuffer.capacity());
    if (injectionUrlConnection == null) {
      final FileChannel injection=new FileInputStream(new File(DebugPathManager.getFudHome() + "/flex-injection/target/" + ComplementSwfBuilder.generateInjectionName(flexSdkVersion))).getChannel();
      try {
        injection.transferTo(0,injection.size(),outputFileChannel);
      }
  finally {
        injection.close();
      }
    }
 else {
      InputStream inputStream=injectionUrlConnection.getInputStream();
      try {
        outputFileChannel.write(ByteBuffer.wrap(FileUtil.loadBytes(inputStream)));
      }
  finally {
        inputStream.close();
      }
    }
    return true;
  }
  return false;
}
