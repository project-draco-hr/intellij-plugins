{
  final THashSet<String> newExcludedPackagesUrls=new THashSet<String>();
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(module.getProject()).getFileIndex();
  final VirtualFile root=pubspecYamlFile.getParent();
  final File buildFolder=new File(root.getPath() + "/build");
  if (buildFolder.isDirectory() || ApplicationManager.getApplication().isUnitTestMode() && root.findChild("build") != null) {
    newExcludedPackagesUrls.add(root.getUrl() + "/build");
  }
  final VirtualFile binFolder=root.findChild("bin");
  if (binFolder != null && binFolder.isDirectory() && fileIndex.isInContent(binFolder)) {
    newExcludedPackagesUrls.add(binFolder.getUrl() + "/packages");
  }
  appendPackagesFolders(newExcludedPackagesUrls,root.findChild("benchmark"),fileIndex);
  appendPackagesFolders(newExcludedPackagesUrls,root.findChild("example"),fileIndex);
  appendPackagesFolders(newExcludedPackagesUrls,root.findChild("test"),fileIndex);
  appendPackagesFolders(newExcludedPackagesUrls,root.findChild("tool"),fileIndex);
  appendPackagesFolders(newExcludedPackagesUrls,root.findChild("web"),fileIndex);
  final DartUrlResolver resolver=DartUrlResolver.getInstance(module.getProject(),pubspecYamlFile);
  resolver.processLivePackages(new PairConsumer<String,VirtualFile>(){
    public void consume(    final String packageName,    final VirtualFile packageDir){
      newExcludedPackagesUrls.add(root.getUrl() + "/packages/" + packageName);
    }
  }
);
  return newExcludedPackagesUrls;
}
