{
  final VirtualFile root=pubspecYamlFile.getParent();
  final VirtualFile contentRoot=root == null ? null : ProjectRootManager.getInstance(module.getProject()).getFileIndex().getContentRootForFile(root);
  if (contentRoot == null)   return;
  final Collection<String> oldExcludedPackagesUrls=ContainerUtil.filter(ModuleRootManager.getInstance(module).getExcludeRootUrls(),new Condition<String>(){
    final String rootUrl=root.getUrl();
    public boolean value(    final String url){
      if (!url.startsWith(rootUrl + "/packages/") && !url.startsWith(rootUrl + "/bin/") && !url.startsWith(rootUrl + "/benchmark/")&& !url.startsWith(rootUrl + "/example/")&& !url.startsWith(rootUrl + "/test/")&& !url.startsWith(rootUrl + "/tool/")&& !url.startsWith(rootUrl + "/web/")) {
        return false;
      }
      if (url.endsWith("/packages"))       return true;
      if (url.startsWith(root + "/packages/"))       return true;
      return false;
    }
  }
);
  final THashSet<String> newExcludedPackagesUrls=collectFoldersToExclude(module,pubspecYamlFile);
  if (oldExcludedPackagesUrls.size() != newExcludedPackagesUrls.size() || !newExcludedPackagesUrls.containsAll(oldExcludedPackagesUrls)) {
    ModuleRootModificationUtil.updateExcludedFolders(module,contentRoot,oldExcludedPackagesUrls,newExcludedPackagesUrls);
  }
}
