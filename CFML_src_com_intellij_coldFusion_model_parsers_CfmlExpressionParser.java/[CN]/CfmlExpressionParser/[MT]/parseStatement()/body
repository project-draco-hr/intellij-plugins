{
  if (myBuilder.eof() || closeExpressionToken()) {
    return;
  }
  int offset=myBuilder.getCurrentOffset();
  if (PREFIX_OPERATIONS.contains(getTokenType())) {
    parsePrefixOperationExpression();
    return;
  }
  PsiBuilder.Marker statementMarker=myBuilder.mark();
  if (getTokenType() == VAR_KEYWORD) {
    parseAssignmentExpression(false);
    statementMarker.drop();
    return;
  }
  if (!parseLValue()) {
    statementMarker.drop();
    return;
  }
  boolean isClearAssign=false;
  boolean isProbableVariableDef=false;
  if (POSTFIX_OPERATIONS.contains(getTokenType())) {
    advance();
    statementMarker.done(CfmlElementTypes.NONE);
    return;
  }
 else   if (!ASSIGN_OPERATORS.contains(getTokenType())) {
    myBuilder.error(CfmlBundle.message("cfml.parsing.statement.expected"));
    if (OPERATIONS.contains(getTokenType())) {
      advance();
      myBuilder.error(CfmlBundle.message("cfml.parsing.assignment.expected"));
      isClearAssign=true;
    }
  }
 else {
    isProbableVariableDef=isClearAssign=(getTokenType() == CfmlTokenTypes.ASSIGN);
    if (myBuilder.eof()) {
      statementMarker.drop();
      return;
    }
    advance();
  }
  if (!isClearAssign || !parseStructureDefinition()) {
    if (!isClearAssign || !parseNewExpression()) {
      if (!isClearAssign || !parseArrayDefinition()) {
        if (!parseExpression()) {
          if (offset == myBuilder.getCurrentOffset()) {
            statementMarker.drop();
            myBuilder.error(CfmlBundle.message("cfml.parsing.unexpected.token"));
            advance();
            return;
          }
          myBuilder.error(CfmlBundle.message("cfml.parsing.right.operand.missed"));
          statementMarker.drop();
          return;
        }
      }
    }
  }
  if (offset == myBuilder.getCurrentOffset()) {
    statementMarker.drop();
    myBuilder.error(CfmlBundle.message("cfml.parsing.unexpected.token"));
    advance();
    return;
  }
  if (isProbableVariableDef) {
    statementMarker.done(CfmlElementTypes.ASSIGNMENT);
  }
 else {
    statementMarker.drop();
  }
}
