{
  AbstractHeaderParserImpl simpleHeaderParser=AbstractHeaderParserImpl.SIMPLE;
  headerProviders=new ArrayList<HeaderParserProvider>();
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_MANIFEST_VERSION,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_NAME,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_SYMBOLIC_NAME,bundleSymbolicNameParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_VERSION,bundleVersionParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.EXPORT_PACKAGE,exportPackageParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.IMPORT_PACKAGE,importPackageParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.PRIVATE_PACKAGE,privatePackageParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.REQUIRE_BUNDLE,requireBundleParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_REQUIRED_EXECUTION_ENV,genericComplexHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.FRAGMENT_HOST,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_ACTIVATION_POLICY,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_ACTIVATOR,bundleActivatorParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_CATEGORY,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_CLASS_PATH,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_CONTACT_ADDRESS,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_COPYRIGHT,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_DESCRIPTION,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_DOC_URL,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_LOCALIZATION,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_NATIVE_CODE,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_UPDATE_LOCATION,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.BUNDLE_VENDOR,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.DYNAMIC_IMPORT_PACKAGE,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.EXPORT_SERVICE,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.IMPORT_SERVICE,simpleHeaderParser));
  headerProviders.add(new HeaderParserProviderImpl(ManifestConstants.Headers.SERVICE_COMPONENT,simpleHeaderParser));
}
