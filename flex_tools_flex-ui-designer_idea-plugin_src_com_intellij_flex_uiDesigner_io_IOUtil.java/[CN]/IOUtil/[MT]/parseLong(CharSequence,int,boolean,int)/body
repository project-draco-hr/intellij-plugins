{
  final int end=value.length();
  long result=0;
  int i=start;
  for (; i < end; i++) {
    char c=value.charAt(i);
    int digit=(c <= '9') ? c - '0' : ((c <= 'Z') && (c >= 'A')) ? c - 'A' + 10 : ((c <= 'z') && (c >= 'a')) ? c - 'a' + 10 : -1;
    if ((digit >= 0) && (digit < radix)) {
      long newResult=result * radix - digit;
      if (newResult > result) {
        throw new NumberFormatException("Overflow parsing " + value.subSequence(start,end));
      }
      result=newResult;
    }
 else {
      break;
    }
  }
  if ((result == 0) && ((end == 0) || (value.charAt(i - 1) != '0'))) {
    throw new NumberFormatException("Invalid integer representation for " + value.subSequence(start,end));
  }
  if ((result == Long.MIN_VALUE) && !isNegative) {
    throw new NumberFormatException("Overflow parsing " + value.subSequence(start,end));
  }
  return isNegative ? result : -result;
}
