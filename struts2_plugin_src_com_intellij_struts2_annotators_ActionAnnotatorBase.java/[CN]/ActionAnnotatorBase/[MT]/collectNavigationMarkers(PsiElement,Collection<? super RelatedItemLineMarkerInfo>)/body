{
  if (!(element instanceof PsiIdentifier))   return;
  final PsiClass clazz=getActionPsiClass(element.getParent());
  if (clazz == null || clazz.getNameIdentifier() != element) {
    return;
  }
  if (clazz.isInterface() || clazz.isAnnotationType() || !clazz.hasModifierProperty(PsiModifier.PUBLIC)|| clazz.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return;
  }
  final Module module=ModuleUtilCore.findModuleForPsiElement(clazz);
  if (module == null || StrutsFacet.getInstance(module) == null) {
    return;
  }
  final StrutsManager strutsManager=StrutsManager.getInstance(element.getProject());
  final StrutsModel strutsModel=strutsManager.getCombinedModel(module);
  if (strutsModel == null) {
    return;
  }
  installValidationTargets(element,lineMarkerInfos,clazz);
  final List<Action> actions=strutsModel.findActionsByClass(clazz);
  if (actions.isEmpty()) {
    return;
  }
  installActionTargets(element,lineMarkerInfos,actions);
  installActionMethods(lineMarkerInfos,clazz,actions);
}
