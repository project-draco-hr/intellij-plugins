{
  final Project project=parentNode.getProject();
  final VirtualFile packagesDir=parentNode instanceof PsiDirectoryNode && project != null ? ((PsiDirectoryNode)parentNode).getVirtualFile() : null;
  final VirtualFile parentFolder=packagesDir != null && packagesDir.isDirectory() && PACKAGES_FOLDER_NAME.equals(packagesDir.getName()) ? packagesDir.getParent() : null;
  final VirtualFile pubspecYamlFile=parentFolder != null ? parentFolder.findChild(PUBSPEC_YAML) : null;
  if (pubspecYamlFile != null && !pubspecYamlFile.isDirectory()) {
    final ArrayList<AbstractTreeNode> result=new ArrayList<AbstractTreeNode>(children);
    final DartUrlResolver resolver=DartUrlResolver.getInstance(project,pubspecYamlFile);
    resolver.processLivePackages(new PairConsumer<String,VirtualFile>(){
      public void consume(      final @NotNull String packageName,      final @NotNull VirtualFile packageDir){
        final AbstractTreeNode node=getFolderNode(children,packageName);
        if (node != null) {
          node.getPresentation().setLocationString(getLocationString(packageDir));
        }
      }
    }
);
    return result;
  }
  return children;
}
