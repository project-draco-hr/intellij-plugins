{
  final Project project=parentNode.getProject();
  final VirtualFile packagesDir=parentNode instanceof PsiDirectoryNode && project != null ? ((PsiDirectoryNode)parentNode).getVirtualFile() : null;
  final VirtualFile parentFolder=packagesDir != null && packagesDir.isDirectory() && PACKAGES_FOLDER_NAME.equals(packagesDir.getName()) ? packagesDir.getParent() : null;
  final VirtualFile pubspecYamlFile=parentFolder != null ? parentFolder.findChild(PUBSPEC_YAML) : null;
  if (pubspecYamlFile != null && !pubspecYamlFile.isDirectory()) {
    final ArrayList<AbstractTreeNode> modifiedChildren=new ArrayList<AbstractTreeNode>(children);
    final DartUrlResolver resolver=DartUrlResolver.getInstance(project,pubspecYamlFile);
    resolver.processLivePackages(new PairConsumer<String,VirtualFile>(){
      public void consume(      final @NotNull String packageName,      final @NotNull VirtualFile packageDir){
        final VirtualFile folder=packagesDir.findChild(packageName);
        if (folder != null) {
          final AbstractTreeNode node=getFolderNode(children,folder);
          if (node == null) {
            modifiedChildren.add(new SymlinkToLivePackageNode(project,packageName,packageDir));
          }
 else {
            node.getPresentation().setLocationString(getPackageLocationString(packageDir));
          }
        }
      }
    }
);
    return modifiedChildren;
  }
  return children;
}
