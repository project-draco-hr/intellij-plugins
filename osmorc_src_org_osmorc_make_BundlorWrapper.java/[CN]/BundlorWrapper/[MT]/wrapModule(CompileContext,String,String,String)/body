{
  ManifestContents manifest;
  try {
    Properties properties=MavenIntegrationUtil.getMavenProjectProperties(context.getProject(),context.getCompileScope().getAffectedModules());
    PropertiesSource propertiesSource=new PropertiesPropertiesSource(properties);
    ManifestGenerator generator=new StandardManifestGenerator(DefaultManifestGeneratorContributorsFactory.create(propertiesSource));
    ClassPath classPath=new StandardClassPathFactory().create(inputJar);
    ManifestContents contents=new StandardManifestTemplateFactory().create(manifestTemplateFile,null,null,null);
    manifest=generator.generate(contents,classPath);
    ManifestWriter manifestWriter=new StandardManifestWriterFactory().create(inputJar,outputJar);
    try {
      manifestWriter.write(manifest);
    }
  finally {
      manifestWriter.close();
    }
  }
 catch (  Exception e) {
    context.addMessage(CompilerMessageCategory.ERROR,"Error generating manifest: " + e.getMessage(),null,0,0);
    return false;
  }
  List<String> warningsList=new StandardManifestValidator(DefaultManifestValidatorContributorsFactory.create()).validate(manifest);
  for (  String s : warningsList) {
    context.addMessage(CompilerMessageCategory.WARNING,s,VfsUtilCore.pathToUrl(manifestTemplateFile),0,0);
  }
  return true;
}
