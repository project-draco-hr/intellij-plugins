{
  if (!FileModificationService.getInstance().prepareFileForWrite(file))   return;
  final DartClass dartClass=PsiTreeUtil.getParentOfType(file.findElementAt(offset),DartClassDefinition.class);
  if (dartClass == null)   return;
  final List<DartComponent> candidates=new ArrayList<DartComponent>();
  collectCandidates(dartClass,candidates);
  List<DartNamedElementNode> selectedElements=Collections.emptyList();
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    selectedElements=ContainerUtil.map(candidates,new Function<DartComponent,DartNamedElementNode>(){
      @Override public DartNamedElementNode fun(      DartComponent namedComponent){
        return new DartNamedElementNode(namedComponent);
      }
    }
);
  }
 else   if (!candidates.isEmpty()) {
    final MemberChooser<DartNamedElementNode> chooser=createMemberChooserDialog(project,dartClass,candidates,getTitle());
    chooser.show();
    selectedElements=chooser.getSelectedElements();
  }
  final BaseCreateMethodsFix createMethodsFix=createFix(dartClass);
  doInvoke(project,editor,file,selectedElements,createMethodsFix);
}
