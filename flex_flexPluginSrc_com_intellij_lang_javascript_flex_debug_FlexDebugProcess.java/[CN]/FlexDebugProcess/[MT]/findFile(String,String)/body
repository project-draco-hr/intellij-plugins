{
  if ("<null>".equals(shortName))   return null;
  if (packageName == null) {
    return findFile(shortName);
  }
  final String packagePath=packageName.replace(".","/");
  final Collection<VirtualFile> cachedFiles=myFileNameToFilesMap.get(shortName);
  if (cachedFiles != null && !cachedFiles.isEmpty()) {
    for (    final VirtualFile cachedFile : cachedFiles) {
      if (cachedFile != null) {
        final String path=cachedFile.getPath();
        int lastSlashIndex=path.lastIndexOf("/");
        final String folderPath=lastSlashIndex > 0 ? path.substring(0,lastSlashIndex) : "";
        if (folderPath.endsWith(packagePath)) {
          return cachedFile;
        }
      }
    }
  }
  final Collection<String> paths=myFileNameToPathsMap.get(shortName);
  if (paths != null && !paths.isEmpty()) {
    for (    final String path : paths) {
      int lastSlashIndex=path.lastIndexOf("/");
      final String folderPath=lastSlashIndex > 0 ? path.substring(0,lastSlashIndex) : "";
      if (folderPath.endsWith(packagePath)) {
        final VirtualFile file=doFindFileByPath(path);
        if (file != null) {
          addToMap(myFileNameToFilesMap,shortName,file);
          return file;
        }
        break;
      }
    }
  }
  final Collection<VirtualFile> files=ApplicationManager.getApplication().runReadAction(new NullableComputable<Collection<VirtualFile>>(){
    public Collection<VirtualFile> compute(){
      final Project project=getSession().getProject();
      return FilenameIndex.getVirtualFilesByName(project,shortName,GlobalSearchScope.allScope(project));
    }
  }
);
  if (files != null && !files.isEmpty()) {
    for (    final VirtualFile file : files) {
      if (file != null) {
        final String path=file.getPath();
        int lastSlashIndex=path.lastIndexOf("/");
        final String folderPath=lastSlashIndex > 0 ? path.substring(0,lastSlashIndex) : "";
        if (folderPath.endsWith(packagePath)) {
          addToMap(myFileNameToFilesMap,shortName,file);
          return file;
        }
      }
    }
  }
  return findFile(shortName);
}
