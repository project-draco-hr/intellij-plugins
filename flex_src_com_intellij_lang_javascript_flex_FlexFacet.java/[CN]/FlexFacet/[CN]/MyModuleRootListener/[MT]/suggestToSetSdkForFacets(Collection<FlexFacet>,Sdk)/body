{
  final StringBuilder facetsInfo=new StringBuilder(flexFacets.size() == 1 ? "facet" : "facets");
  for (  final FlexFacet flexFacet : flexFacets) {
    facetsInfo.append(" '").append(flexFacet.getName()).append("',");
  }
  facetsInfo.deleteCharAt(facetsInfo.length() - 1);
  final String message=FlexBundle.message("flex.sdk.set.for.not.flex.module.ask",newSdk.getSdkType().getPresentableName(),newSdk.getName(),ModuleType.get(myModule).getName(),myModule.getName(),facetsInfo);
  int choice=Messages.showYesNoDialog(myModule.getProject(),message,"Flex SDK",Messages.getQuestionIcon());
  if (choice == 0) {
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      public void run(){
        final FlexFacet flexFacet=FacetManager.getInstance(myModule).getFacetByType(ID);
        if (flexFacet == null)         return;
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          public void run(){
            myConfiguringMyself=true;
            try {
              final ModifiableRootModel modifiableRootModel=ModuleRootManager.getInstance(myModule).getModifiableModel();
              flexFacet.getConfiguration().setFlexSdk(newSdk,modifiableRootModel);
              modifiableRootModel.commit();
              final ModuleStructureConfigurable moduleStructureConfigurable=ModuleStructureConfigurable.getInstance(myModule.getProject());
              final ModuleEditor moduleEditor=FlexUtils.getModuleEditor(myModule,moduleStructureConfigurable);
              if (moduleEditor != null) {
                try {
                  moduleEditor.canApply();
                  moduleEditor.apply();
                }
 catch (                ConfigurationException e) {
                  LOG.warn(e);
                }
                moduleEditor.moduleCountChanged();
                moduleStructureConfigurable.getFacetConfigurator().resetEditors();
              }
            }
  finally {
              myConfiguringMyself=false;
            }
          }
        }
);
      }
    }
,ModalityState.current(),new Condition(){
      public boolean value(      final Object o){
        return myModule.isDisposed();
      }
    }
);
  }
}
