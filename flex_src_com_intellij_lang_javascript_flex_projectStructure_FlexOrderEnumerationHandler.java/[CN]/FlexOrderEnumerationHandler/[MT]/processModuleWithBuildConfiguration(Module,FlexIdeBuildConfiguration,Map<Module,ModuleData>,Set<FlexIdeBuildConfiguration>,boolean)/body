{
  if (ModuleType.get(module) != FlexModuleType.getInstance()) {
    return;
  }
  final boolean isRootModule=configuration == null;
  if (isRootModule) {
    configuration=getActiveConfiguration(module);
  }
  if (configuration == null || !processedConfigurations.add(configuration)) {
    return;
  }
  ModuleData moduleData=modules2activeConfigurations.get(module);
  if (moduleData == null) {
    modules2activeConfigurations.put(module,moduleData=new ModuleData());
  }
  moduleData.addBc(configuration,productionDependency);
  for (  DependencyEntry entry : configuration.getDependencies().getEntries()) {
    if (!(entry instanceof BuildConfigurationEntry)) {
      continue;
    }
    final LinkageType linkageType=entry.getDependencyType().getLinkageType();
    if (linkageType == LinkageType.LoadInRuntime) {
      continue;
    }
    FlexIdeBuildConfiguration dependencyBc=((BuildConfigurationEntry)entry).findBuildConfiguration();
    if (dependencyBc == null || !FlexCompiler.checkDependencyType(configuration,dependencyBc,linkageType)) {
      continue;
    }
    if (!isRootModule && !BCUtils.isTransitiveDependency(linkageType)) {
      continue;
    }
    Module dependencyModule=((BuildConfigurationEntry)entry).findModule();
    if (dependencyModule == null || dependencyModule == module) {
      continue;
    }
    processModuleWithBuildConfiguration(dependencyModule,dependencyBc,modules2activeConfigurations,processedConfigurations,entry.getDependencyType().getLinkageType() != LinkageType.Test);
  }
}
