{
  if ("args".equals(property.getName())) {
    final JSObjectLiteralExpression object=(JSObjectLiteralExpression)property.getParent();
    final JSProperty type=object.findProperty("type");
    if (type != null) {
      final JSExpression value=type.getValue();
      if (value instanceof JSReferenceExpression && isDirective(((JSReferenceExpression)value).getReferenceName())) {
        return addImplicitElement(property,(JSElementIndexingDataImpl)outData,getPropertyName(property,SELECTOR));
      }
    }
  }
  return super.processAnyProperty(property,outData);
}
