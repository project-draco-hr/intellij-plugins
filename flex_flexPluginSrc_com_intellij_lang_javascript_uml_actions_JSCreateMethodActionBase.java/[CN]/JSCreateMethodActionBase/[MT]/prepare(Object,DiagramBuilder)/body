{
  final JSClass clazz=(JSClass)element;
  if (!JSRefactoringUtil.checkReadOnlyStatus(clazz,null,getTemplatePresentation().getText()))   return null;
  final JSFunction fakeMethod=JSCreateMethodDialog.createFakeMethod(clazz,createFakeMethodText(clazz),false);
  final JSCreateMethodDialog dialog=new JSCreateMethodDialog(clazz,fakeMethod,isForceConstructor());
  dialog.show();
  if (!dialog.isOK())   return null;
  return new Runnable(){
    @Override public void run(){
      final JSFunction method=dialog.createMethod();
      importType(clazz,dialog.getReturnTypeText());
      for (      JSParameterInfo param : dialog.getParameters()) {
        importType(clazz,param.getTypeText());
      }
      final PsiElement added=JSRefactoringUtil.addMemberToTargetClass(clazz,method);
      final List<FormatFixer> formatters=new ArrayList<FormatFixer>();
      formatters.add(FormatFixer.create(added,FormatFixer.Mode.Reformat));
      formatters.addAll(ECMAScriptImportOptimizer.executeNoFormat(clazz.getContainingFile()));
      FormatFixer.fixAll(FormatFixer.merge(formatters));
    }
  }
;
}
