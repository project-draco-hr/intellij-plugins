{
  ProgressIndicator progressIndicator=context.getProgressIndicator();
  progressIndicator.setText("Building bundle for module " + module.getName());
  String messagePrefix="[" + module.getName() + "] ";
  File jarFile=new File(VfsUtilCore.urlToPath(getJarFileName(module)));
  FileUtil.delete(jarFile);
  if (!FileUtil.createParentDirs(jarFile)) {
    context.addMessage(CompilerMessageCategory.ERROR,messagePrefix + "Cannot create path to " + jarFile.getPath(),null,0,0);
    return;
  }
  OsmorcFacetConfiguration configuration=facet.getConfiguration();
  File moduleOutputDir=getModuleOutputDir(module);
  if (moduleOutputDir == null) {
    String message="Unable to determine the compiler output path for module " + module.getName();
    context.addMessage(CompilerMessageCategory.WARNING,message,null,0,0);
    return;
  }
  File bndFile=getBndFile(module,facet,context,moduleOutputDir);
  if (bndFile == null) {
    return;
  }
  String outputPath=jarFile.getPath();
  if (configuration.isUseBundlorFile()) {
    outputPath+=".tmp.jar";
  }
  progressIndicator.setText2("Running bnd to build the bundle");
  try {
    BndWrapper.build(module,context,bndFile,moduleOutputDir,outputPath);
  }
 catch (  Exception e) {
    context.addMessage(CompilerMessageCategory.ERROR,messagePrefix + "Unexpected error: " + e.getMessage(),null,0,0);
    return;
  }
  if (configuration.isUseBundlorFile()) {
    progressIndicator.setText2("Running bundlor to calculate the manifest");
    File bundlorFile=findFileInModuleContentRoots(configuration.getBundlorFileLocation(),module);
    if (bundlorFile == null || !bundlorFile.exists()) {
      String message=String.format("The Bundlor file \"%s\" for module \"%s\" does not exist.",configuration.getBundlorFileLocation(),module.getName());
      context.addMessage(CompilerMessageCategory.ERROR,messagePrefix + message,configuration.getBundlorFileLocation(),0,0);
      return;
    }
    BundlorWrapper bw=new BundlorWrapper();
    try {
      if (!bw.wrapModule(context,outputPath,jarFile.getPath(),bundlorFile.getPath())) {
        String message="Bundlifying the file " + jarFile.getPath() + " with Bundlor failed.";
        context.addMessage(CompilerMessageCategory.ERROR,messagePrefix + message,null,0,0);
        return;
      }
    }
  finally {
      File tempJar=new File(outputPath);
      if (tempJar.exists() && !tempJar.delete()) {
        String message="Could not delete temporary file: " + tempJar.getPath();
        context.addMessage(CompilerMessageCategory.WARNING,messagePrefix + message,null,0,0);
      }
    }
  }
  if (!configuration.isUseBndFile() && !configuration.isUseBundlorFile()) {
    bundlifyLibraries(module,progressIndicator,context);
  }
}
