{
  final VirtualFile swfFile=library.library.getSwfFile();
  final File modifiedSwf=createSwfOutFile(library.library);
  final long timeStamp=swfFile.getTimeStamp();
  final long injectionLastModified;
  final URLConnection injectionUrlConnection;
  final InjectionClassifier classifier=isSpark ? InjectionClassifier.spark : InjectionClassifier.framework;
  if (DebugPathManager.IS_DEV) {
    injectionLastModified=createInjectionAbc(flexSdkVersion,classifier,false);
    injectionUrlConnection=null;
  }
 else {
    URL url=getClass().getClassLoader().getResource(ComplementSwfBuilder.generateInjectionName(flexSdkVersion,classifier));
    injectionUrlConnection=url.openConnection();
    injectionLastModified=injectionUrlConnection.getLastModified();
  }
  if (library.hasFilteredDefinitions() || timeStamp > modifiedSwf.lastModified() || injectionLastModified > modifiedSwf.lastModified()) {
    final Set<CharSequence> definitions=library.hasFilteredDefinitions() ? library.filteredDefinitions : createSet((isSpark ? 0 : FlexOverloadedClasses.MX_CLASSES.size()) + 3);
    if (isSpark) {
      definitions.add("SparkClasses");
      new SparkAbcInjector(flexSdkVersion,injectionUrlConnection).filter(swfFile,modifiedSwf,new AbcNameFilterByNameSet(definitions));
    }
 else {
      definitions.add("FrameworkClasses");
      definitions.add("mx.managers.systemClasses:MarshallingSupport");
      definitions.add("mx.managers:SystemManagerProxy");
      definitions.addAll(FlexOverloadedClasses.MX_CLASSES);
      new FrameworkAbcInjector(flexSdkVersion,injectionUrlConnection).filter(swfFile,modifiedSwf,new AbcNameFilterByNameSetAndStartsWith(definitions,new String[]{"mx.managers.marshalClasses:"}));
    }
  }
}
