{
  VirtualFile swfFile=library.getSwfFile();
  File modifiedSwf=createSwfOutFile(library);
  final long timeStamp=swfFile.getTimeStamp();
  final long injectionLastModified;
  final URLConnection injectionUrlConnection;
  if (DebugPathManager.IS_DEV) {
    injectionLastModified=createInjectionAbc(flexSdkVersion,false);
    injectionUrlConnection=null;
  }
 else {
    URL url=getClass().getClassLoader().getResource(ComplementSwfBuilder.generateInjectionName(flexSdkVersion));
    injectionUrlConnection=url.openConnection();
    injectionLastModified=injectionUrlConnection.getLastModified();
  }
  if (library.hasUnresolvedDefinitions() || timeStamp > modifiedSwf.lastModified() || injectionLastModified > modifiedSwf.lastModified()) {
    Set<CharSequence> definitions=library.hasUnresolvedDefinitions() ? library.unresolvedDefinitions : new THashSet<CharSequence>(5);
    definitions.add("FrameworkClasses");
    definitions.add("mx.managers.systemClasses:MarshallingSupport");
    definitions.add("mx.managers:SystemManagerProxy");
    definitions.add("mx.styles:StyleManager");
    definitions.add(FlexSdkAbcInjector.LAYOUT_MANAGER);
    definitions.add(FlexSdkAbcInjector.RESOURCE_MANAGER);
    definitions.add(FlexSdkAbcInjector.RESOURCE_MANAGER + "Impl");
    definitions.add("mx.styles:StyleManagerImpl");
    new FlexSdkAbcInjector(injectionUrlConnection).inject(swfFile,modifiedSwf,flexSdkVersion,new AbcNameFilterByNameSetAndStartsWith(definitions,new String[]{"mx.managers.marshalClasses:"}));
  }
}
