{
  final Ref<IOException> exception=new Ref<IOException>();
  final List<VirtualFile> temporaryFiles=new ArrayList<VirtualFile>();
  MavenUtil.invokeAndWaitWriteAction(project,new Runnable(){
    public void run(){
      try {
        for (        MavenProject mavenProject : mavenProjects) {
          final String packaging=mavenProject.getPackaging();
          if ("swf".equalsIgnoreCase(packaging) || "swc".equalsIgnoreCase(packaging)) {
            final String outputFilePath=Flexmojos3Configurator.getOutputFilePath(mavenProject);
            final int lastSlashIndex=outputFilePath.lastIndexOf("/");
            final String outputFileName=outputFilePath.substring(lastSlashIndex + 1);
            final String outputFolderPath=outputFilePath.substring(0,Math.max(0,lastSlashIndex));
            VirtualFile outputFile=LocalFileSystem.getInstance().refreshAndFindFileByPath(outputFilePath);
            if (outputFile == null) {
              final VirtualFile outputDir=VfsUtil.createDirectoryIfMissing(outputFolderPath);
              if (outputDir == null)               throw new IOException(IdeBundle.message("error.failed.to.create.directory",outputFolderPath));
              ChangeListManager.getInstance(project).addFilesToIgnore(IgnoredBeanFactory.ignoreFile(outputFilePath,project));
              outputFile=FlexUtils.addFileWithContent(outputFileName,TEMPORARY_FILE_CONTENT,outputDir);
              if (outputFile == null)               throw new IOException(IdeBundle.message("error.message.unable.to.create.file",outputFileName));
              temporaryFiles.add(outputFile);
            }
            workspaceMap.register(mavenProject.getMavenId(),new File(mavenProject.getFile().getPath()),new File(outputFile.getPath()));
          }
 else {
            workspaceMap.register(mavenProject.getMavenId(),new File(mavenProject.getFile().getPath()));
          }
        }
      }
 catch (      IOException e) {
        exception.set(e);
      }
    }
  }
);
  if (!exception.isNull())   throw exception.get();
  return temporaryFiles;
}
