{
  super(new CheckboxTreeCellRendererBase(){
    public void customizeRenderer(    final JTree tree,    final Object value,    final boolean selected,    final boolean expanded,    final boolean leaf,    final int row,    final boolean hasFocus){
      if (!(value instanceof DefaultMutableTreeNode))       return;
      final ColoredTreeCellRenderer renderer=getTextRenderer();
      final Object object=((DefaultMutableTreeNode)value).getUserObject();
      if (object instanceof Module) {
        final Module module=(Module)object;
        final Icon icon=ModuleType.get(module).getNodeIcon(expanded);
        renderer.setIcon(icon);
        final String moduleName=module.getName();
        renderer.append(moduleName,SimpleTextAttributes.REGULAR_ATTRIBUTES);
      }
 else       if (object instanceof PsiFile) {
        final PsiFile psiFile=(PsiFile)object;
        final Icon icon=psiFile.getIcon(0);
        renderer.setIcon(icon);
        final String fileName=psiFile.getName();
        renderer.append(fileName,SimpleTextAttributes.REGULAR_ATTRIBUTES);
        final VirtualFile virtualFile=psiFile.getVirtualFile();
        if (virtualFile != null) {
          String path=virtualFile.getPath();
          final int i=path.indexOf(JarFileSystem.JAR_SEPARATOR);
          if (i >= 0) {
            path=path.substring(i + JarFileSystem.JAR_SEPARATOR.length());
          }
          renderer.append(" (" + path + ")",SimpleTextAttributes.GRAYED_ATTRIBUTES);
        }
      }
 else       if (object instanceof VirtualFile) {
        final VirtualFile file=(VirtualFile)object;
        renderer.setIcon(VirtualFilePresentation.getIcon(file));
        renderer.append(file.getName(),SimpleTextAttributes.REGULAR_ATTRIBUTES);
        String path=file.getPath();
        final int i=path.indexOf(JarFileSystem.JAR_SEPARATOR);
        if (i >= 0) {
          path=path.substring(i + JarFileSystem.JAR_SEPARATOR.length());
        }
        renderer.append(" (" + path + ")",SimpleTextAttributes.GRAYED_ATTRIBUTES);
      }
    }
  }
,null);
  PeerFactory.getInstance().getUIHelper().installTreeSpeedSearch(this,new Convertor<TreePath,String>(){
    public String convert(    final TreePath treePath){
      final Object object=((CheckedTreeNode)treePath.getLastPathComponent()).getUserObject();
      if (object instanceof Module) {
        return ((Module)object).getName();
      }
 else       if (object instanceof PsiFile) {
        return ((PsiFile)object).getName();
      }
 else       if (object instanceof VirtualFile) {
        return ((VirtualFile)object).getName();
      }
 else {
        return "";
      }
    }
  }
);
}
