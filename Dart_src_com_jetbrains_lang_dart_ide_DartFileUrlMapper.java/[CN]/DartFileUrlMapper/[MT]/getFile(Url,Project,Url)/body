{
  final String scheme=url.getScheme();
  final String path=url.getPath();
  if (DartUrlResolver.DART_SCHEME.equals(scheme)) {
    return DartUrlResolver.findFileInDartSdkLibFolder(project,DartSdk.getDartSdk(project),DartUrlResolver.DART_PREFIX + path);
  }
  if (DartUrlResolver.PACKAGE_SCHEME.equals(scheme)) {
    final String packageUrl=DartUrlResolver.PACKAGE_PREFIX + path;
    final VirtualFile contextFile=findContextFile(project,requestor);
    if (contextFile != null) {
      return ApplicationManager.getApplication().runReadAction(new Computable<VirtualFile>(){
        public VirtualFile compute(){
          return DartUrlResolver.getInstance(project,contextFile).findFileByDartUrl(packageUrl);
        }
      }
);
    }
 else {
      if (ApplicationManager.getApplication().isDispatchThread()) {
        return DumbService.getInstance(project).isDumb() ? null : findFileInAnyPackagesFolder(project,packageUrl);
      }
      return DumbService.getInstance(project).runReadActionInSmartMode(new Computable<VirtualFile>(){
        @Override public VirtualFile compute(){
          return findFileInAnyPackagesFolder(project,packageUrl);
        }
      }
);
    }
  }
  final int sdkUrlMarkerIndex=path.indexOf(SDK_URL_MARKER);
  if ("http".equalsIgnoreCase(scheme) && sdkUrlMarkerIndex >= 0) {
    final String relPath=path.substring(sdkUrlMarkerIndex + SDK_URL_MARKER.length());
    return DartUrlResolver.findFileInDartSdkLibFolder(project,DartSdk.getDartSdk(project),DartUrlResolver.DART_PREFIX + relPath);
  }
  return null;
}
