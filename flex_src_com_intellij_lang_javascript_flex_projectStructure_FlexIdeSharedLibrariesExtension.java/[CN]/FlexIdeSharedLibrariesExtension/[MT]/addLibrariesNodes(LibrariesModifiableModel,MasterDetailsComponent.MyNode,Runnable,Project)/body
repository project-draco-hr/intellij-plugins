{
  final List<Library> libraries=ContainerUtil.filter(model.getLibraries(),new Condition<Library>(){
    public boolean value(    final Library library){
      return FlexProjectRootsUtil.isFlexLibrary(library);
    }
  }
);
  Collections.sort(libraries,new Comparator<Library>(){
    public int compare(    final Library o1,    final Library o2){
      return o1.getName().compareToIgnoreCase(o2.getName());
    }
  }
);
  StructureConfigurableContext context=ProjectStructureConfigurable.getInstance(project).getContext();
  for (  Library library : libraries) {
    parentNode.add(new LibraryNode(library,context,treeUpdater));
  }
}
