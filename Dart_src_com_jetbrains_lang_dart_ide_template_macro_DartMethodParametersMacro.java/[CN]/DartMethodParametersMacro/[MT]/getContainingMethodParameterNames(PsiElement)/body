{
  if (element == null)   return null;
  final DartComponent parent=(DartComponent)PsiTreeUtil.findFirstParent(element,new Condition<PsiElement>(){
    @Override public boolean value(    final PsiElement element){
      return element instanceof DartFunctionDeclarationWithBodyOrNative || element instanceof DartFunctionDeclarationWithBody || element instanceof DartMethodDeclaration;
    }
  }
);
  if (parent == null)   return null;
  final DartFormalParameterList parameterList=PsiTreeUtil.getChildOfType(parent,DartFormalParameterList.class);
  if (parameterList == null)   return null;
  List<String> results=Lists.newArrayList();
  final List<DartNormalFormalParameter> normalFormalParameters=parameterList.getNormalFormalParameterList();
  for (  DartNormalFormalParameter parameter : normalFormalParameters) {
    final DartFunctionSignature signature=parameter.getFunctionSignature();
    if (signature != null) {
      final String name=signature.getName();
      if (name != null) {
        results.add(name);
      }
    }
  }
  final DartNamedFormalParameters namedFormalParameters=parameterList.getNamedFormalParameters();
  if (namedFormalParameters != null) {
    for (    DartDefaultFormalNamedParameter parameter : namedFormalParameters.getDefaultFormalNamedParameterList()) {
      final DartComponentName componentName=parameter.getNormalFormalParameter().findComponentName();
      if (componentName != null) {
        final String name=componentName.getName();
        if (name != null) {
          results.add(name);
        }
      }
    }
  }
  return results;
}
