{
  int bufferLength=0;
  final DataBufferInt dataBuffer=(DataBufferInt)image.getRaster().getDataBuffer();
  int[] data=dataBuffer.getData();
  if (nbands == 3) {
    if (image.getType() != BufferedImage.TYPE_INT_RGB) {
      throw new IOException();
    }
    for (int i=0, n=data.length; i < n; i+=1) {
      int pixel=data[i];
      byteBuffer[bufferLength++]=(byte)255;
      byteBuffer[bufferLength++]=(byte)((pixel >> 16) & 0xff);
      byteBuffer[bufferLength++]=(byte)((pixel >> 8) & 0xff);
      byteBuffer[bufferLength++]=(byte)(pixel & 0xff);
      if (bufferLength == MAX_BUFFER_LENGTH) {
        out.write(byteBuffer,0,bufferLength);
        bufferLength=0;
      }
    }
  }
 else {
    if (image.getType() != BufferedImage.TYPE_INT_ARGB) {
      throw new IOException();
    }
    for (int i=0, n=data.length; i < n; i+=1) {
      int pixel=data[i];
      byteBuffer[bufferLength++]=(byte)((pixel >> 24) & 0xff);
      byteBuffer[bufferLength++]=(byte)((pixel >> 16) & 0xff);
      byteBuffer[bufferLength++]=(byte)((pixel >> 8) & 0xff);
      byteBuffer[bufferLength++]=(byte)(pixel & 0xff);
      if (bufferLength == MAX_BUFFER_LENGTH) {
        out.write(byteBuffer,0,bufferLength);
        bufferLength=0;
      }
    }
  }
  return bufferLength;
}
