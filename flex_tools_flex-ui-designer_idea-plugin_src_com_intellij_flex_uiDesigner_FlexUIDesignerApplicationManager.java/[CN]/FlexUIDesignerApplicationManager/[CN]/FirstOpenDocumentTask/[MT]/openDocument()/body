{
  indicator.setText(FlexUIDesignerBundle.message("open.document"));
  Client client=Client.getInstance();
  try {
    client.flush();
    final ProblemsHolder problemsHolder=new ProblemsHolder();
    if (unregisteredDocumentReferences != null) {
      if (!client.registerDocumentReferences(unregisteredDocumentReferences,module,problemsHolder)) {
        return;
      }
    }
    final MessageBusConnection connection=ApplicationManager.getApplication().getMessageBus().connect(appParentDisposable);
    connection.subscribe(SocketInputHandler.MESSAGE_TOPIC,new SocketInputHandler.DocumentOpenedListener(){
      @Override public void documentOpened(){
        semaphoreUp();
      }
      @Override public void errorOccured(){
        semaphoreUp();
      }
      private void semaphoreUp(){
        connection.disconnect();
        semaphore.up();
      }
    }
);
    semaphore.down();
    if (client.openDocument(module,psiFile,true,problemsHolder)) {
      client.flush();
      indicator.setText(FlexUIDesignerBundle.message("load.libraries"));
      semaphore.waitFor();
    }
 else {
      semaphore.up();
      connection.disconnect();
    }
  }
 catch (  IOException e) {
    LOG.error(e);
    cancel();
  }
}
