{
  final long start=System.currentTimeMillis();
  indicator.setText(FlexBundle.message("generating.flex.configs"));
  final ProcessBuilder processBuilder=new ProcessBuilder("mvn","com.intellij.flex.maven:idea-flexmojos-maven-plugin:1.4.2:generate","-o");
  processBuilder.directory(new File(project.getBaseDir().getPath()));
  processBuilder.redirectErrorStream(true);
  final Process process;
  try {
    process=processBuilder.start();
  }
 catch (  IOException e) {
    MavenLog.LOG.warn(e);
    return;
  }
  final StringBuilder stringBuilder=StringBuilderSpinAllocator.alloc();
  final InputStreamReader reader=new InputStreamReader(process.getInputStream());
  try {
    char[] buf=new char[1024];
    int read;
    while ((read=reader.read(buf,0,buf.length)) >= 0) {
      stringBuilder.append(buf,0,read);
    }
    try {
      process.waitFor();
    }
 catch (    InterruptedException ignored) {
    }
    int exitCode=process.exitValue();
    if (exitCode != 0) {
      MavenLog.LOG.warn("idea flexmojos generator exited with exit code " + exitCode + ", out:\n"+ stringBuilder.toString());
    }
  }
 catch (  IOException e) {
    process.destroy();
    MavenLog.LOG.warn(stringBuilder.toString(),e);
  }
 finally {
    StringBuilderSpinAllocator.dispose(stringBuilder);
    try {
      reader.close();
    }
 catch (    IOException ignored) {
    }
  }
  final long duration=System.currentTimeMillis() - start;
  MavenLog.LOG.info("Generating flex configs took " + duration + " ms: "+ duration / 60000 + " min " + (duration % 60000) / 1000 + "sec");
}
