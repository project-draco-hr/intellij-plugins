{
  if (!recursion_guard_(builder_,level_,"referenceExpression"))   return false;
  if (!nextTokenIs(builder_,AT) && !nextTokenIs(builder_,IDENTIFIER) && replaceVariants(builder_,2,"<reference expression>"))   return false;
  boolean result_=false;
  boolean pinned_=false;
  int start_=builder_.getCurrentOffset();
  Marker marker_=builder_.mark();
  enterErrorRecordingSection(builder_,level_,_SECTION_GENERAL_,"<reference expression>");
  result_=referenceExpression_0(builder_,level_ + 1);
  pinned_=result_;
  result_=result_ && report_error_(builder_,consumeToken(builder_,IDENTIFIER));
  result_=pinned_ && report_error_(builder_,referenceExpression_2(builder_,level_ + 1)) && result_;
  result_=pinned_ && referenceExpression_3(builder_,level_ + 1) && result_;
  LighterASTNode last_=result_ ? builder_.getLatestDoneMarker() : null;
  if (last_ != null && last_.getStartOffset() == start_ && type_extends_(last_.getTokenType(),REFERENCE_EXPRESSION)) {
    marker_.drop();
  }
 else   if (result_ || pinned_) {
    marker_.done(REFERENCE_EXPRESSION);
  }
 else {
    marker_.rollbackTo();
  }
  result_=exitErrorRecordingSection(builder_,level_,result_,pinned_,_SECTION_GENERAL_,null);
  return result_ || pinned_;
}
