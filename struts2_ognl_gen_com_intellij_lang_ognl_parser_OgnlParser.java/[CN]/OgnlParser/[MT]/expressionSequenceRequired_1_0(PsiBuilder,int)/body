{
  if (!recursion_guard_(b,l,"expressionSequenceRequired_1_0"))   return false;
  boolean r, p;
  Marker m=enter_section_(b,l,_NONE_);
  r=consumeToken(b,COMMA);
  p=r;
  r=r && expression(b,l + 1,-1);
  exit_section_(b,l,m,r,p,null);
  return r || p;
}
