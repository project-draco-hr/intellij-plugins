{
  if (!recursion_guard_(b,l,"variableAssignmentExpression"))   return false;
  if (!nextTokenIsFast(b,HASH))   return false;
  boolean r, p;
  Marker m=enter_section_(b,l,_NONE_,null);
  r=consumeTokenSmart(b,HASH);
  r=r && consumeToken(b,IDENTIFIER);
  r=r && consumeToken(b,EQ);
  p=r;
  r=r && expression(b,l + 1,-1);
  exit_section_(b,l,m,VARIABLE_ASSIGNMENT_EXPRESSION,r,p,null);
  return r || p;
}
