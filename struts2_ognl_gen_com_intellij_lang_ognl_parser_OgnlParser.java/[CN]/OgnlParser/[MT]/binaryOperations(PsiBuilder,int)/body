{
  if (!recursion_guard_(builder_,level_,"binaryOperations"))   return false;
  boolean result_=false;
  Marker marker_=enter_section_(builder_,level_,_NONE_,"<operator>");
  result_=plusMinusOperations(builder_,level_ + 1);
  if (!result_)   result_=divideMultiplyOperations(builder_,level_ + 1);
  if (!result_)   result_=bitwiseBooleanOperations(builder_,level_ + 1);
  if (!result_)   result_=instanceOfOperation(builder_,level_ + 1);
  if (!result_)   result_=shiftOperations(builder_,level_ + 1);
  if (!result_)   result_=booleanOperations(builder_,level_ + 1);
  if (!result_)   result_=equalityOperations(builder_,level_ + 1);
  if (!result_)   result_=relationalOperations(builder_,level_ + 1);
  if (!result_)   result_=setOperations(builder_,level_ + 1);
  exit_section_(builder_,level_,marker_,null,result_,false,null);
  return result_;
}
