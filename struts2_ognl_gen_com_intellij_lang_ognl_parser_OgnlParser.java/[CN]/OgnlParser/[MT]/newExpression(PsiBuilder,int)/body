{
  if (!recursion_guard_(b,l,"newExpression"))   return false;
  if (!nextTokenIsFast(b,NEW_KEYWORD))   return false;
  boolean r, p;
  Marker m=enter_section_(b,l,_NONE_,null);
  r=consumeTokenSmart(b,NEW_KEYWORD);
  p=r;
  r=r && report_error_(b,fqnTypeExpression(b,l + 1));
  r=p && constructorExpression(b,l + 1) && r;
  exit_section_(b,l,m,NEW_EXPRESSION,r,p,null);
  return r || p;
}
