{
  if (!recursion_guard_(b,l,"expression"))   return false;
  addVariant(b,"<expression>");
  boolean r, p;
  Marker m=enter_section_(b,l,_NONE_,"<expression>");
  r=lambdaExpression(b,l + 1);
  if (!r)   r=mapExpression(b,l + 1);
  if (!r)   r=sequenceExpression(b,l + 1);
  if (!r)   r=parenthesizedExpression(b,l + 1);
  if (!r)   r=variableAssignmentExpression(b,l + 1);
  if (!r)   r=newArrayExpression(b,l + 1);
  if (!r)   r=newExpression(b,l + 1);
  if (!r)   r=indexedExpression(b,l + 1);
  if (!r)   r=referenceExpression(b,l + 1);
  if (!r)   r=variableExpression(b,l + 1);
  if (!r)   r=unaryExpression(b,l + 1);
  if (!r)   r=literalExpression(b,l + 1);
  p=r;
  r=r && expression_0(b,l + 1,g);
  exit_section_(b,l,m,null,r,p,null);
  return r || p;
}
