{
  final String qName=element.getQualifiedName();
  if (qName == null) {
    return null;
  }
  VirtualFile elementVFile=element.getContainingFile().getVirtualFile();
  if (elementVFile == null) {
    return null;
  }
  ProjectFileIndex projectFileIndex=ProjectRootManager.getInstance(element.getProject()).getFileIndex();
  GlobalSearchScope searchScope=JSResolveUtil.getSearchScope(element);
  Collection<JSQualifiedNamedElement> candidates=StubIndex.getInstance().get(JSQualifiedElementIndex.KEY,qName.hashCode(),element.getProject(),searchScope);
  List<OrderEntry> sourceFileEntries=projectFileIndex.getOrderEntriesForFile(elementVFile);
  for (  JSQualifiedNamedElement candidate : candidates) {
    if (candidate == element || !qName.equals(candidate.getQualifiedName())) {
      continue;
    }
    VirtualFile vFile=candidate.getContainingFile().getVirtualFile();
    if (vFile != null && projectFileIndex.getClassRootForFile(vFile) != null) {
      List<OrderEntry> candidateEntries=projectFileIndex.getOrderEntriesForFile(vFile);
      if (ContainerUtil.intersects(sourceFileEntries,candidateEntries)) {
        return candidate;
      }
    }
  }
  return null;
}
