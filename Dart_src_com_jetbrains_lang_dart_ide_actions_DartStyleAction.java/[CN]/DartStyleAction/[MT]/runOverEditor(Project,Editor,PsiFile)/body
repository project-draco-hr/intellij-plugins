{
  final Document document=editor.getDocument();
  if (!ReadonlyStatusHandler.ensureDocumentWritable(project,document))   return;
  final Runnable runnable=new Runnable(){
    public void run(){
      final String path=psiFile.getVirtualFile().getPath();
      final int caretOffset=editor.getCaretModel().getOffset();
      final int lineLength=getRightMargin(project);
      DartAnalysisServerService.getInstance().updateFilesContent();
      DartAnalysisServerService.FormatResult formatResult=DartAnalysisServerService.getInstance().edit_format(path,caretOffset,0,lineLength);
      if (formatResult == null) {
        showHintLater(editor,DartBundle.message("dart.style.hint.failed"),true);
        LOG.warn("Unexpected response from edit_format, formatResult is null");
        return;
      }
      final List<SourceEdit> edits=formatResult.getEdits();
      if (edits == null || edits.size() == 0) {
        showHintLater(editor,DartBundle.message("dart.style.hint.already.good"),false);
      }
 else       if (edits.size() == 1) {
        document.replaceString(0,document.getTextLength(),edits.get(0).getReplacement());
        editor.getCaretModel().moveToOffset(formatResult.getOffset());
        showHintLater(editor,DartBundle.message("dart.style.hint.success"),false);
      }
 else {
        showHintLater(editor,DartBundle.message("dart.style.hint.failed"),true);
        LOG.warn("Unexpected response from edit_format, formatResult.getEdits().size() = " + edits.size());
      }
    }
  }
;
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      CommandProcessor.getInstance().executeCommand(project,runnable,DartBundle.message("dart.style.action.name"),null);
    }
  }
);
}
