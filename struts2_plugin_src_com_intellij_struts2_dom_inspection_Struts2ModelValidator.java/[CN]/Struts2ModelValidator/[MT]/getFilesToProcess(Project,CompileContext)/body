{
  final StrutsManager strutsManager=StrutsManager.getInstance(project);
  final PsiManager psiManager=PsiManager.getInstance(project);
  @SuppressWarnings("MismatchedQueryAndUpdateOfCollection") final FactoryMap<Module,Boolean> enabledForModule=new FactoryMap<Module,Boolean>(){
    protected Boolean create(    final Module module){
      return isEnabledForModule(module);
    }
  }
;
  final Set<VirtualFile> files=new THashSet<>();
  for (  final VirtualFile file : context.getCompileScope().getFiles(StdFileTypes.XML,false)) {
    final Module module=context.getModuleByFile(file);
    if (module != null && enabledForModule.get(module)) {
      final PsiFile psiFile=psiManager.findFile(file);
      if (psiFile instanceof XmlFile) {
        final StrutsModel model=strutsManager.getModelByFile((XmlFile)psiFile);
        if (model != null) {
          for (          final XmlFile configFile : model.getConfigFiles()) {
            ContainerUtil.addIfNotNull(files,configFile.getVirtualFile());
          }
        }
      }
    }
  }
  InspectionValidatorUtil.expandCompileScopeIfNeeded(files,context);
  return files;
}
