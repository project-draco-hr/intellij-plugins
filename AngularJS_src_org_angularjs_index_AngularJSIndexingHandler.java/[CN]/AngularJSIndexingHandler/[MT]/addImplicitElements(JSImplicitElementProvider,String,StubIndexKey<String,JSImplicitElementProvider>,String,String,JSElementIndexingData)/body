{
  final Function<String,String> converter=command != null ? NAME_CONVERTERS.get(command) : null;
  final String name=converter != null ? converter.fun(defaultName) : defaultName;
  JSQualifiedNameImpl qName=JSQualifiedNameImpl.fromQualifiedName(name);
  JSImplicitElementImpl.Builder elementBuilder=new JSImplicitElementImpl.Builder(qName,elementProvider).setType(elementProvider instanceof JSDocComment ? JSImplicitElement.Type.Tag : JSImplicitElement.Type.Class).setTypeString(value);
  final JSImplicitElementImpl implicitElement=elementBuilder.toImplicitElement();
  implicitElement.putUserData(IMPLICIT_ELEMENT_INDEXES_KEY,index);
  outData.addImplicitElement(implicitElement);
  if (!StringUtil.equals(defaultName,name)) {
    elementBuilder=new JSImplicitElementImpl.Builder(defaultName,elementProvider).setType(elementProvider instanceof JSDocComment ? JSImplicitElement.Type.Tag : JSImplicitElement.Type.Class).setTypeString(value);
    final JSImplicitElementImpl implicitElement2=elementBuilder.toImplicitElement();
    implicitElement2.putUserData(IMPLICIT_ELEMENT_INDEXES_KEY,AngularSymbolIndex.KEY);
    outData.addImplicitElement(implicitElement2);
  }
}
