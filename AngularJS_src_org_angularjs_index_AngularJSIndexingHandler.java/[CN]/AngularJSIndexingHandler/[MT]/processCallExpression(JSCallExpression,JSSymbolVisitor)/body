{
  JSReferenceExpression callee=(JSReferenceExpression)callExpression.getMethodExpression();
  JSExpression qualifier=callee.getQualifier();
  if (qualifier == null)   return;
  final String command=callee.getReferencedName();
  final ID<String,Void> index=INDEXERS.get(command);
  if (index != null) {
    JSExpression[] arguments=callExpression.getArguments();
    if (arguments.length > 0) {
      JSExpression argument=arguments[0];
      if (argument instanceof JSLiteralExpression && ((JSLiteralExpression)argument).isQuotedLiteral()) {
        final String argumentText=argument.getText();
        storeAdditionalData(visitor,index,argument,command,argumentText,argument.getTextOffset(),null);
      }
 else       if (argument instanceof JSObjectLiteralExpression) {
        for (        JSProperty property : ((JSObjectLiteralExpression)argument).getProperties()) {
          final String argumentText=property.getName();
          storeAdditionalData(visitor,index,property,command,argumentText,property.getTextOffset(),null);
        }
      }
    }
  }
  if (INTERESTING_METHODS.contains(command)) {
    JSExpression[] arguments=callExpression.getArguments();
    if (arguments.length > 0) {
      JSExpression argument=arguments[0];
      if (argument instanceof JSLiteralExpression && ((JSLiteralExpression)argument).isQuotedLiteral()) {
        visitor.storeAdditionalData(argument,AngularSymbolIndex.INDEX_ID.toString(),StringUtil.unquoteString(argument.getText()),argument.getTextOffset(),null);
      }
    }
  }
}
