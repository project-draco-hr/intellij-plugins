{
  JSReferenceExpression callee=(JSReferenceExpression)callExpression.getMethodExpression();
  JSExpression qualifier=callee.getQualifier();
  if (qualifier == null)   return;
  final String command=callee.getReferencedName();
  if (DIRECTIVE.equals(command)) {
    JSExpression[] arguments=callExpression.getArguments();
    if (arguments.length > 0) {
      JSExpression argument=arguments[0];
      if (argument instanceof JSLiteralExpression && ((JSLiteralExpression)argument).isQuotedLiteral()) {
        final String attributeName=getAttributeName(argument.getText());
        visitor.storeAdditionalData(argument,AngularDirectivesIndex.INDEX_ID.toString(),attributeName,argument.getTextOffset());
        visitor.storeAdditionalData(argument,AngularSymbolIndex.INDEX_ID.toString(),attributeName,argument.getTextOffset());
      }
    }
  }
 else   if (CONTROLLER.equals(command)) {
    JSExpression[] arguments=callExpression.getArguments();
    if (arguments.length > 0) {
      JSExpression argument=arguments[0];
      if (argument instanceof JSLiteralExpression && ((JSLiteralExpression)argument).isQuotedLiteral()) {
        visitor.storeAdditionalData(argument,AngularControllerIndex.INDEX_ID.toString(),StringUtil.unquoteString(argument.getText()),argument.getTextOffset());
      }
    }
  }
  if (INTERESTING_METHODS.contains(command)) {
    JSExpression[] arguments=callExpression.getArguments();
    if (arguments.length > 0) {
      JSExpression argument=arguments[0];
      if (argument instanceof JSLiteralExpression && ((JSLiteralExpression)argument).isQuotedLiteral()) {
        visitor.storeAdditionalData(argument,AngularSymbolIndex.INDEX_ID.toString(),StringUtil.unquoteString(argument.getText()),argument.getTextOffset());
      }
    }
  }
}
