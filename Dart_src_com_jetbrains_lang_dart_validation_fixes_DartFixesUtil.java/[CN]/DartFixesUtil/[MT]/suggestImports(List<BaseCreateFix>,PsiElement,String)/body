{
  final VirtualFile vFile=DartResolveUtil.getRealVirtualFile(context.getContainingFile());
  final GlobalSearchScope scope=vFile == null ? null : DartResolveScopeProvider.getDartScope(context.getProject(),vFile,true);
  if (scope == null)   return;
  final THashSet<String> processedUrlsToImport=new THashSet<String>();
  DartComponentIndex.processComponentsByName(componentName,scope,new Processor<DartComponentInfo>(){
    @Override public boolean process(    DartComponentInfo info){
      final DartComponentType componentType=info.getComponentType();
      if (componentType == DartComponentType.CLASS || componentType == DartComponentType.FUNCTION || componentType == DartComponentType.TYPEDEF || componentType == DartComponentType.VARIABLE) {
        final String libraryName=info.getLibraryName();
        if (libraryName != null) {
          final String urlToImport=DartImportUtil.getUrlToImport(context,libraryName);
          if (urlToImport != null && processedUrlsToImport.add(urlToImport)) {
            quickFixes.add(new DartImportFix(urlToImport,componentName));
          }
        }
      }
      return true;
    }
  }
);
}
