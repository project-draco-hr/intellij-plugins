{
  final List<Library> libraries=instanceName != null ? libraryHandler.getLibraries(instanceName) : new ArrayList<Library>();
  application.runWriteAction(new Runnable(){
    public void run(){
      final Module module=getFrameworkInstanceModule();
      ModifiableRootModel model=ModuleRootManager.getInstance(module).getModifiableModel();
      List<OrderEntry> oldOrderEntries=new ArrayList<OrderEntry>();
      for (      OrderEntry oldOrderEntry : model.getOrderEntries()) {
        if (oldOrderEntry instanceof LibraryOrderEntry) {
          oldOrderEntries.add(oldOrderEntry);
        }
      }
      for (Iterator<OrderEntry> oldOrderEntriesIterator=oldOrderEntries.iterator(); oldOrderEntriesIterator.hasNext(); ) {
        OrderEntry orderEntry=oldOrderEntriesIterator.next();
        if (orderEntry instanceof LibraryOrderEntry) {
          if (libraries.remove(((LibraryOrderEntry)orderEntry).getLibrary())) {
            oldOrderEntriesIterator.remove();
          }
        }
      }
      boolean commitNeeded=false;
      for (      OrderEntry orderEntry : oldOrderEntries) {
        model.removeOrderEntry(orderEntry);
        commitNeeded=true;
      }
      for (      Library newBundle : libraries) {
        if (newBundle instanceof LibraryEx && ((LibraryEx)newBundle).isDisposed()) {
          continue;
        }
        model.addLibraryEntry(newBundle);
        commitNeeded=true;
      }
      if (commitNeeded) {
        model.commit();
      }
 else {
        model.dispose();
      }
    }
  }
);
}
