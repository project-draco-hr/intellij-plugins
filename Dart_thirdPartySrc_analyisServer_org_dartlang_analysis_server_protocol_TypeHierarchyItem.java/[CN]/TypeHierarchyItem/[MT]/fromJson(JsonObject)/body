{
  Element classElement=Element.fromJson(jsonObject.get("classElement").getAsJsonObject());
  String displayName=jsonObject.get("displayName") == null ? null : jsonObject.get("displayName").getAsString();
  Element memberElement=jsonObject.get("memberElement") == null ? null : Element.fromJson(jsonObject.get("memberElement").getAsJsonObject());
  Integer superclass=jsonObject.get("superclass") == null ? null : jsonObject.get("superclass").getAsInt();
  int[] interfaces=JsonUtilities.decodeIntArray(jsonObject.get("interfaces").getAsJsonArray());
  int[] mixins=JsonUtilities.decodeIntArray(jsonObject.get("mixins").getAsJsonArray());
  int[] subclasses=JsonUtilities.decodeIntArray(jsonObject.get("subclasses").getAsJsonArray());
  return new TypeHierarchyItem(classElement,displayName,memberElement,superclass,interfaces,mixins,subclasses);
}
