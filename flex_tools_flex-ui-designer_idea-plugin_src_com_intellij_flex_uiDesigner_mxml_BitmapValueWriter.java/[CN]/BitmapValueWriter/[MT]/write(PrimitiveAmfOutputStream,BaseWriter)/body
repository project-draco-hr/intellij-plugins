{
  out.write(AmfExtendedTypes.BITMAP);
  int id;
  if ((id=checkRegistered(out)) == -1) {
    return;
  }
  final BufferedImage image;
  try {
    image=ImageUtil.getImage(virtualFile,mimeType);
  }
 catch (  IOException e) {
    BinaryFileManager.getInstance().remove(virtualFile);
    throw new InvalidPropertyException(e,"error.cannot.write.binary.file",virtualFile.getName());
  }
  UnbufferedOutput rawOut=null;
  try {
    rawOut=writer.getBlockOut().writeUnbufferedHeader(2 + 2 + 2+ 2+ 1+ (image.getWidth() * image.getHeight() * 4));
    rawOut.write(Client.ClientMethod.METHOD_CLASS);
    rawOut.write(Client.ClientMethod.registerBitmap.ordinal());
    writeId(id,rawOut);
    ImageUtil.write(image,rawOut,mimeType,virtualFile);
  }
 catch (  Throwable e) {
    try {
      BinaryFileManager.getInstance().remove(virtualFile);
    }
  finally {
      if (rawOut != null) {
        try {
          notifyClientSocket(rawOut,virtualFile);
        }
 catch (        IOException inner) {
          inner.initCause(e);
          e=inner;
        }
      }
    }
    throw new InvalidPropertyException(e,"error.cannot.write.binary.file",virtualFile.getName());
  }
}
