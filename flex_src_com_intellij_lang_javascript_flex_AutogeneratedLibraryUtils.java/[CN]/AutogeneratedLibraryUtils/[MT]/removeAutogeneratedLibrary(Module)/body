{
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      final ModifiableRootModel modifiableRootModel=ModuleRootManager.getInstance(module).getModifiableModel();
      final LibraryTable libraryTable=modifiableRootModel.getModuleLibraryTable();
      final Collection<Library> librariesToRemove=new ArrayList<Library>();
      for (final Iterator<Library> libraryIterator=libraryTable.getLibraryIterator(); libraryIterator.hasNext(); ) {
        final Library library=libraryIterator.next();
        if (isAutogeneratedLibrary(library)) {
          librariesToRemove.add(library);
        }
      }
      for (      final Library library : librariesToRemove) {
        libraryTable.removeLibrary(library);
      }
      if (modifiableRootModel.isChanged()) {
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          public void run(){
            modifiableRootModel.commit();
          }
        }
);
      }
 else {
        modifiableRootModel.dispose();
      }
    }
  }
,ModalityState.NON_MODAL,new Condition(){
    public boolean value(    Object o){
      return module.isDisposed();
    }
  }
);
}
