{
  if (getName().equals("testDelete")) {
    addLibrary(sdkModificator,getTestDataPath() + "/flash-integration_4.1.swc");
  }
  super.modifySdk(sdk,sdkModificator);
  if (getName().equals("testDeleteIfAllDefitionsHaveUnresolvedDependencies")) {
    addLibrary(sdkModificator,getTestDataPath() + "/spark_dmv_4.5.swc");
  }
 else   if (getName().equals("testResolveToClassWithBiggestTimestamp")) {
    final String path=getTestDataPath() + "/ResolveToClassWithBiggestTimestamp/bin/";
    addLibrary(sdkModificator,path + "lib_1.swc",false);
    addLibrary(sdkModificator,path + "lib_2.swc",false);
  }
  Disposer.register(myModule,new Disposable(){
    @Override public void dispose(){
      AccessToken token=WriteAction.start();
      try {
        final ProjectJdkTable projectJdkTable=ProjectJdkTable.getInstance();
        projectJdkTable.removeJdk(sdk);
      }
  finally {
        token.finish();
      }
    }
  }
);
}
