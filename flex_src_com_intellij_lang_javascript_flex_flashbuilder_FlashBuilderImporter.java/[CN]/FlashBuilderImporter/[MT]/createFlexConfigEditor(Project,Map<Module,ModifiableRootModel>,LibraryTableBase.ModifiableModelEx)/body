{
  final FlexProjectConfigurationEditor.ProjectModifiableModelProvider provider=new FlexProjectConfigurationEditor.ProjectModifiableModelProvider(){
    public Module[] getModules(){
      final Set<Module> modules=moduleToModifiableModelMap.keySet();
      return modules.toArray(new Module[modules.size()]);
    }
    public ModifiableRootModel getModuleModifiableModel(    final Module module){
      return moduleToModifiableModelMap.get(module);
    }
    public void addListener(    final FlexIdeBCConfigurator.Listener listener,    final Disposable parentDisposable){
    }
    public void commitModifiableModels() throws ConfigurationException {
    }
    public LibraryTableBase.ModifiableModelEx getLibrariesModifiableModel(    final String level){
      if (LibraryTablesRegistrar.APPLICATION_LEVEL.equals(level)) {
        return globalLibrariesModifiableModel;
      }
 else {
        throw new UnsupportedOperationException();
      }
    }
  }
;
  return new FlexProjectConfigurationEditor(project,provider);
}
