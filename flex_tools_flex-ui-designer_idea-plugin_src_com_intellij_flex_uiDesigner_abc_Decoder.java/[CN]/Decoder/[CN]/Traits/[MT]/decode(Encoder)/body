{
  int count=in.readU32();
  visitor.traitCount(count);
  for (int i=0; i < count; i++) {
    int name=in.readU32();
    int kind=in.readU8();
    int slotID, typeID, valueID;
    int value_kind=0;
switch (kind & 0x0f) {
case TRAIT_Var:
case TRAIT_Const:
      slotID=in.readU32();
    typeID=in.readU32();
  valueID=in.readU32();
if (valueID != 0) {
  value_kind=in.readU8();
}
visitor.slotTrait(kind,name,slotID,typeID,valueID,value_kind,decodeMetaData(kind));
break;
case TRAIT_Method:
case TRAIT_Getter:
case TRAIT_Setter:
visitor.methodTrait(kind,name,in.readU32(),in.readU32(),decodeMetaData(kind));
break;
case TRAIT_Class:
visitor.classTrait(kind,name,in.readU32(),in.readU32(),decodeMetaData(kind));
break;
case TRAIT_Function:
visitor.functionTrait(kind,name,in.readU32(),in.readU32(),decodeMetaData(kind));
break;
}
}
}
