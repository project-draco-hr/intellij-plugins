{
  if (!(element instanceof DartReference)) {
    return null;
  }
  final PsiElement parent=element.getParent();
  if (parent instanceof DartType) {
    return getUsageTypeByType((DartType)parent);
  }
  if (DartResolveUtil.isLValue(element)) {
    return UsageType.WRITE;
  }
  if (!(parent instanceof DartReference)) {
    return UsageType.READ;
  }
  final PsiElement target=((DartReference)element).resolve();
  final DartComponentType targetType=DartComponentType.typeOf(target == null ? null : target.getParent());
  final DartReference[] references=PsiTreeUtil.getChildrenOfType(parent,DartReference.class);
  final boolean isFirstChild=references != null && references.length > 0 && references[0] == element;
  if (isFirstChild && references.length == 2 && targetType == DartComponentType.CLASS) {
    return UsageType.CLASS_STATIC_MEMBER_ACCESS;
  }
  if (isFirstChild) {
    return UsageType.READ;
  }
  if (!(parent.getParent() instanceof DartCallExpression)) {
    return UsageType.READ;
  }
  return null;
}
