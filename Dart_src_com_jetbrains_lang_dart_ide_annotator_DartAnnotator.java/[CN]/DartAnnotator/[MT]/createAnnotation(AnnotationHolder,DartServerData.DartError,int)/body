{
  int highlightingStart=error.getOffset();
  int highlightingEnd=error.getOffset() + error.getLength();
  if (highlightingEnd > fileTextLength)   highlightingEnd=fileTextLength;
  if (highlightingStart > 0 && highlightingStart >= highlightingEnd)   highlightingStart=highlightingEnd - 1;
  final TextRange textRange=new TextRange(highlightingStart,highlightingEnd);
  final String severity=error.getSeverity();
  final String message=StringUtil.notNullize(error.getMessage());
  final ProblemHighlightType specialHighlightType=getSpecialHighlightType(message);
  final Annotation annotation;
  if (AnalysisErrorSeverity.INFO.equals(severity) && specialHighlightType == null) {
    annotation=holder.createWeakWarningAnnotation(textRange,message);
    annotation.setTextAttributes(DartSyntaxHighlighterColors.HINT);
  }
 else   if (AnalysisErrorSeverity.WARNING.equals(severity) || (AnalysisErrorSeverity.INFO.equals(severity) && specialHighlightType != null)) {
    annotation=holder.createWarningAnnotation(textRange,message);
    annotation.setTextAttributes(DartSyntaxHighlighterColors.WARNING);
  }
 else   if (AnalysisErrorSeverity.ERROR.equals(severity)) {
    annotation=holder.createErrorAnnotation(textRange,message);
    annotation.setTextAttributes(DartSyntaxHighlighterColors.ERROR);
  }
 else {
    annotation=null;
  }
  if (annotation != null && specialHighlightType != null) {
    annotation.setTextAttributes(null);
    annotation.setHighlightType(specialHighlightType);
  }
  return annotation;
}
