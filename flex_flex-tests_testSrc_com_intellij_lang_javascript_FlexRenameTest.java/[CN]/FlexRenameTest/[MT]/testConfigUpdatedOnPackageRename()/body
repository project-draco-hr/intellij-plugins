{
  FlexTestUtils.modifyBuildConfiguration(myModule,new Consumer<ModifiableFlexBuildConfiguration>(){
    public void consume(    final ModifiableFlexBuildConfiguration bc){
      bc.setMainClass("foo.bar.SomeClass");
    }
  }
);
  final RunManagerEx runManager=RunManagerEx.getInstanceEx(myProject);
  FlexTestUtils.createFlexUnitRunConfig(runManager,"SomeClass.testSomething()",myModule,FlexUnitRunnerParameters.Scope.Method,"","foo.bar.SomeClass","testSomething",true);
  FlexTestUtils.createFlexUnitRunConfig(runManager,"SomeClass",myModule,FlexUnitRunnerParameters.Scope.Class,"","foo.bar.SomeClass","",true);
  FlexTestUtils.createFlexUnitRunConfig(runManager,"foo.bar",myModule,FlexUnitRunnerParameters.Scope.Package,"foo.bar","","",true);
  FlexTestUtils.createFlashRunConfig(runManager,myModule,"SomeClass","foo.bar.SomeClass",true);
  doTest("renamed","as");
  assertEquals("foo.renamed.SomeClass",FlexBuildConfigurationManager.getInstance(myModule).getActiveConfiguration().getMainClass());
  FlexTestUtils.checkFlexUnitRunConfig(runManager,myModule,"SomeClass.testSomething()","","foo.renamed.SomeClass","testSomething");
  FlexTestUtils.checkFlexUnitRunConfig(runManager,myModule,"SomeClass","","foo.renamed.SomeClass","");
  FlexTestUtils.checkFlexUnitRunConfig(runManager,myModule,"foo.renamed","foo.renamed","","");
  FlexTestUtils.checkFlashRunConfig(runManager,myModule,"SomeClass","foo.renamed.SomeClass");
}
