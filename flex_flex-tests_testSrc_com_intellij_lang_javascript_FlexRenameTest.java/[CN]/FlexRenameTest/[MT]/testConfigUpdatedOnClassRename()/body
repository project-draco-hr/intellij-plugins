{
  FlexTestUtils.modifyBuildConfiguration(myModule,new Consumer<ModifiableFlexBuildConfiguration>(){
    public void consume(    final ModifiableFlexBuildConfiguration bc){
      bc.setMainClass("foo.bar.SomeClass");
    }
  }
);
  final RunManagerEx runManager=RunManagerEx.getInstanceEx(myProject);
  FlexTestUtils.createFlexUnitRunConfig(runManager,"Own name",myModule,FlexUnitRunnerParameters.Scope.Method,"","foo.bar.SomeClass","testSomething",false);
  FlexTestUtils.createFlexUnitRunConfig(runManager,"SomeClass",myModule,FlexUnitRunnerParameters.Scope.Class,"","foo.bar.SomeClass","",true);
  FlexTestUtils.createFlexUnitRunConfig(runManager,"Same class short name",myModule,FlexUnitRunnerParameters.Scope.Class,"","foo.SomeClass","",false);
  FlexTestUtils.createFlashRunConfig(runManager,myModule,"SomeClass","foo.bar.SomeClass",true);
  doTest("Renamed","as");
  assertEquals("foo.bar.Renamed",FlexBuildConfigurationManager.getInstance(myModule).getActiveConfiguration().getMainClass());
  FlexTestUtils.checkFlexUnitRunConfig(runManager,myModule,"Own name","","foo.bar.Renamed","testSomething");
  FlexTestUtils.checkFlexUnitRunConfig(runManager,myModule,"Renamed","","foo.bar.Renamed","");
  FlexTestUtils.checkFlexUnitRunConfig(runManager,myModule,"Same class short name","","foo.SomeClass","");
  FlexTestUtils.checkFlashRunConfig(runManager,myModule,"Renamed","foo.bar.Renamed");
}
