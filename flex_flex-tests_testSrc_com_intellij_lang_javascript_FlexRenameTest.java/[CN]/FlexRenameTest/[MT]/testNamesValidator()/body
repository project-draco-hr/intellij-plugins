{
  final NamesValidator namesValidator=LanguageNamesValidation.INSTANCE.forLanguage(JSSupportLoader.getJsFileType().getLanguage());
  assertTrue(namesValidator.isIdentifier("zzz",myProject));
  assertTrue(!namesValidator.isIdentifier("\"zzz\"",myProject));
  assertTrue(namesValidator.isKeyword("function",myProject));
  assertTrue(!namesValidator.isIdentifier("zzz<=",myProject));
  final NamesValidator ecmaL4NamesValidator=LanguageNamesValidation.INSTANCE.forLanguage(JavaScriptSupportLoader.ECMA_SCRIPT_L4);
  assertTrue(ecmaL4NamesValidator.isKeyword("private",myProject));
  assertTrue(ecmaL4NamesValidator.isKeyword("namespace",myProject));
  assertTrue(ecmaL4NamesValidator.isIdentifier("namespace",myProject));
  final NamesValidator jsonNamesValidator=LanguageNamesValidation.INSTANCE.forLanguage(JsonLanguage.INSTANCE);
  assertTrue(jsonNamesValidator.isIdentifier("aaa.bbb",myProject));
}
