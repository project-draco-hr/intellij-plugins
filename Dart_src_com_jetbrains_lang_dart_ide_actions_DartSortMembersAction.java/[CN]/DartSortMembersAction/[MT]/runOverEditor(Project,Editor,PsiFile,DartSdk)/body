{
  final Document document=editor.getDocument();
  if (!ReadonlyStatusHandler.ensureDocumentWritable(project,document))   return;
  final Runnable runnable=new Runnable(){
    public void run(){
      final String path=FileUtil.toSystemDependentName(psiFile.getVirtualFile().getPath());
      final DartAnalysisServerService service=DartAnalysisServerService.getInstance();
      service.updateFilesContent();
      final SourceFileEdit fileEdit=service.edit_sortMembers(path);
      if (fileEdit == null) {
        showHintLater(editor,DartBundle.message("dart.sort.members.hint.failed"),true);
        LOG.warn("Unexpected response from edit_sortMembers, fileEdit is null");
        return;
      }
      final List<SourceEdit> edits=fileEdit.getEdits();
      if (edits == null || edits.size() == 0) {
        showHintLater(editor,DartBundle.message("dart.sort.members.hint.already.good"),false);
      }
 else {
        applySourceEdits(document,edits);
        showHintLater(editor,DartBundle.message("dart.sort.members.hint.success"),false);
      }
    }
  }
;
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      CommandProcessor.getInstance().executeCommand(project,runnable,DartBundle.message("dart.sort.members.action.name"),null);
    }
  }
);
}
