{
  return new CustomJavaFindUsagesHandler(){
    @Override public void processElementUsages(    @NotNull final PsiElement element,    @NotNull final Processor<UsageInfo> processor,    @NotNull final FindUsagesOptions options){
      final ReadActionProcessor<PsiReference> refProcessor=new ReadActionProcessor<PsiReference>(){
        @Override public boolean processInReadAction(        final PsiReference ref){
          TextRange rangeInElement=ref.getRangeInElement();
          return processor.process(new UsageInfo(ref.getElement(),rangeInElement.getStartOffset(),rangeInElement.getEndOffset(),false));
        }
      }
;
      final SearchScope scope=options.searchScope;
      if (options instanceof JavaMethodFindUsagesOptions && options.isUsages && CucumberJavaUtil.isStepDefinition(element)) {
        ReferencesSearch.search(new ReferencesSearch.SearchParameters(element,scope,false,options.fastTrack)).forEach(refProcessor);
      }
    }
  }
;
}
