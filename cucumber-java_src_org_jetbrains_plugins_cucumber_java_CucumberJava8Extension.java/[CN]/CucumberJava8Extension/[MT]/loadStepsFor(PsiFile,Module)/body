{
  final List<AbstractStepDefinition> result=new ArrayList<>();
  final GlobalSearchScope dependenciesScope=module.getModuleWithDependenciesAndLibrariesScope(true);
  final GlobalSearchScope javaFiles=GlobalSearchScope.getScopeRestrictedByFileTypes(dependenciesScope,JavaFileType.INSTANCE);
  String[] keywords=new String[]{"Given","And","Then","But","When"};
  for (  String method : keywords) {
    PsiSearchHelper.SERVICE.getInstance(module.getProject()).processElementsWithWord(new TextOccurenceProcessor(){
      @Override public boolean execute(      @NotNull PsiElement element,      int offsetInElement){
        final PsiElement parent=element.getParent();
        if (parent != null) {
          final PsiReference[] references=parent.getReferences();
          for (          PsiReference ref : references) {
            PsiElement resolved=ref.resolve();
            PsiClass psiClass=PsiTreeUtil.getParentOfType(resolved,PsiClass.class);
            if (psiClass != null) {
              final String fqn=psiClass.getQualifiedName();
              if (fqn != null && fqn.startsWith("cucumber.api.java8")) {
                final PsiMethodCallExpression methodCallExpression=PsiTreeUtil.getParentOfType(element,PsiMethodCallExpression.class);
                result.add(new JavaStepDefinition(methodCallExpression));
              }
            }
          }
        }
        return true;
      }
    }
,javaFiles,method,UsageSearchContext.IN_CODE,true);
  }
  return result;
}
