{
  BipartiteString[] allSplits=new BipartiteString[]{splitByLastIndexOfSeparatorOccurrence(pathBeforeCaret,JstdConfigFileUtils.UNIX_PATH_SEPARATOR),splitByLastIndexOfSeparatorOccurrence(pathBeforeCaret,JstdConfigFileUtils.WINDOWS_PATH_SEPARATOR)};
  Arrays.sort(allSplits,new Comparator<BipartiteString>(){
    @Override public int compare(    BipartiteString o1,    BipartiteString o2){
      return o1.getSuffix().length() - o2.getSuffix().length();
    }
  }
);
  for (  BipartiteString bipartite : allSplits) {
    if (!bipartite.getPrefix().isEmpty()) {
      VirtualFile parentFile=basePath.findFileByRelativePath(FileUtil.toSystemIndependentName(bipartite.getPrefix()));
      if (parentFile != null) {
        return new ParentDirWithLastComponentPrefix(parentFile,bipartite.getSuffix());
      }
    }
  }
  for (  BipartiteString bipartite : allSplits) {
    File absolutePath=new File(FileUtil.toSystemIndependentName(bipartite.getPrefix()));
    if (absolutePath.isAbsolute()) {
      VirtualFile absolute=LocalFileSystem.getInstance().findFileByIoFile(absolutePath);
      if (absolute != null) {
        return new ParentDirWithLastComponentPrefix(absolute,bipartite.getSuffix());
      }
    }
  }
  return null;
}
