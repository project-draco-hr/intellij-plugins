{
  Set qNames=new HashSet();
  for (int i=start; i < end; i++) {
    Source source=(Source)sources.get(i);
    CompilationUnit u=source.getCompilationUnit();
    if (u == null || u.inheritance.size() == 0) {
      continue;
    }
    qNames.clear();
    String head=source.getName();
    String name=source.getNameForReporting();
    for (Iterator k=u.inheritance.iterator(); k.hasNext(); ) {
      Object unresolved=k.next();
      if (unresolved instanceof MultiName) {
        MultiName mName=(MultiName)unresolved;
        QName qName=resolveMultiName(name,mName,sources,sourceList,sourcePath,resources,swcContext,symbolTable);
        if (qName != null) {
          qNames.add(qName);
          u.inheritanceHistory.put(mName,qName);
          Source tailSource=symbolTable.findSourceByQName(qName);
          String tail=tailSource.getName();
          addVertexToGraphs(tailSource,tailSource.getCompilationUnit(),igraph,dgraph);
          addEdgeToGraphs(igraph,dgraph,head,tail);
        }
        k.remove();
      }
    }
    if (qNames.size() > 0) {
      u.inheritance.addAll(qNames);
    }
  }
}
