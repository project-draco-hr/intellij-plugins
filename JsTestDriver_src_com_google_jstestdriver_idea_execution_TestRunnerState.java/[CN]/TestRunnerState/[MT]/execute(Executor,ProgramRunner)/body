{
  final TestConsoleProperties testConsoleProperties=new SMTRunnerConsoleProperties(new RuntimeConfigurationProducer.DelegatingRuntimeConfiguration<JstdRunConfiguration>(myRunConfiguration),"jsTestDriver",executor);
  FutureResult<ProcessData> processDataFuture=new FutureResult<ProcessData>();
  TestListenerContext context=new TestListenerContext(processDataFuture);
  RemoteTestListener listener=createRemoteTestListener(context);
  CountDownLatch receivingSocketOpen=new CountDownLatch(1);
  Future<?> testResultReceiverFuture=testResultReceiverExecutor.submit(new RemoteTestResultReceiver(listener,testResultPort,receivingSocketOpen));
  try {
    receivingSocketOpen.await(5,TimeUnit.SECONDS);
  }
 catch (  InterruptedException e) {
    throw new ExecutionException("Thread has been interrupted unexpectedly",e);
  }
  if (testResultReceiverFuture.isDone()) {
    throw new ExecutionException("RemoteTestResultReceiver exits unexpectedly. See log for details");
  }
  ProcessHandler processHandler=startProcess();
  BaseTestsOutputConsoleView consoleView=attachRunner(myProject.getName(),processHandler,testConsoleProperties,getRunnerSettings(),getConfigurationSettings());
  processDataFuture.set(new ProcessData((SMTRunnerConsoleView)consoleView,processHandler));
  return new DefaultExecutionResult(context.consoleView(),context.processHandler(),createActions(context.consoleView(),context.processHandler()));
}
