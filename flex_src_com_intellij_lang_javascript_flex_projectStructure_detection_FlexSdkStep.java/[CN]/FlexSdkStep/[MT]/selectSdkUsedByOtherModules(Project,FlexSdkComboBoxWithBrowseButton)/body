{
  if (project == null) {
    return;
  }
  final FlexProjectConfigurationEditor currentEditor=FlexBuildConfigurationsExtension.getInstance().getConfigurator().getConfigEditor();
  if (currentEditor != null) {
    final Module[] modules=ModuleStructureConfigurable.getInstance(project).getModules();
    for (    Module module : modules) {
      if (ModuleType.get(module) != FlexModuleType.getInstance()) {
        continue;
      }
      for (      ModifiableFlexBuildConfiguration c : currentEditor.getConfigurations(module)) {
        SdkEntry sdkEntry=c.getDependencies().getSdkEntry();
        Sdk sdk;
        if (sdkEntry != null && (sdk=FlexSdkUtils.findFlexOrFlexmojosSdk(sdkEntry.getName())) != null && sdk.getSdkType() == FlexSdkType2.getInstance()) {
          combo.setSelectedSdkRaw(sdk.getName());
          return;
        }
      }
    }
  }
 else {
    for (    final Module module : ModuleManager.getInstance(project).getModules()) {
      if (ModuleType.get(module) == FlexModuleType.getInstance()) {
        for (        FlexBuildConfiguration bc : FlexBuildConfigurationManager.getInstance(module).getBuildConfigurations()) {
          Sdk sdk=bc.getSdk();
          if (sdk != null) {
            combo.setSelectedSdkRaw(sdk.getName());
            return;
          }
        }
      }
    }
  }
}
