{
  GeneralCommandLine commandLine=new GeneralCommandLine();
  commandLine.setPassParentEnvironment(true);
  commandLine.setWorkDirectory(configurationFile.getParentFile());
  commandLine.setExePath(nodeInterpreter.getAbsolutePath());
  File serverFile=getServerAppFile();
  commandLine.addParameter(serverFile.getAbsolutePath());
  commandLine.addParameter("--configFile=" + configurationFile.getAbsolutePath());
  try {
    Process process=commandLine.createProcess();
    KillableColoredProcessHandler processHandler=new KillableColoredProcessHandler(process,commandLine.getCommandLineString(),CharsetToolkit.UTF8_CHARSET);
    processHandler.addProcessListener(new ProcessAdapter(){
      @Override public void onTextAvailable(      ProcessEvent event,      Key outputType){
        String text=event.getText().trim();
        if (text != null && outputType == ProcessOutputTypes.STDOUT) {
          handleStdout(text);
        }
      }
      @Override public void processTerminated(      ProcessEvent event){
        myTerminated=true;
        KarmaServerRegistry.serverTerminated(KarmaServer.this);
      }
    }
);
    processHandler.startNotify();
    processHandler.setShouldDestroyProcessRecursively(true);
    return processHandler;
  }
 catch (  ExecutionException e) {
    throw new IOException("Can not create karma server process",e);
  }
}
