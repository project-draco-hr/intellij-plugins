{
  myCoverageTempDir=FileUtil.createTempDirectory("karma-intellij-coverage-",null);
  myConfigurationFile=configurationFile;
  myKarmaJsSourcesLocator=new KarmaJsSourcesLocator(karmaPackageDir);
  myState=new KarmaServerState(this);
  try {
    myProcessHandler=startServer(nodeInterpreter,configurationFile);
  }
 catch (  ExecutionException e) {
    throw new IOException("Can not create karma server process",e);
  }
  myProcessEventStore=new ProcessEventStore(myProcessHandler);
  myProcessEventStore.addStreamEventListener(new StreamEventListener(){
    @Override public void on(    @NotNull String eventType,    @NotNull String eventBody){
      if ("config".equals(eventType)) {
        myKarmaConfig=KarmaConfig.parseFromJson(eventBody);
      }
 else       if ("coverage-finished".equals(eventType)) {
        KarmaCoverageSession coverageSession=myActiveCoverageSession;
        myActiveCoverageSession=null;
        if (coverageSession != null && coverageSession.getCoverageFilePath().equals(eventBody)) {
          coverageSession.onCoverageSessionFinished();
        }
      }
    }
  }
);
  myProcessEventStore.startNotify();
  Disposer.register(ApplicationManager.getApplication(),new Disposable(){
    @Override public void dispose(){
      if (!myProcessHandler.isProcessTerminated()) {
        ScriptRunnerUtil.terminateProcessHandler(myProcessHandler,500,null);
      }
    }
  }
);
}
