{
  extend(CompletionType.BASIC,PlatformPatterns.psiElement(ManifestTokenType.HEADER_NAME).withLanguage(ManifestLanguage.INSTANCE),new CompletionProvider<CompletionParameters>(){
    public void addCompletions(    @NotNull CompletionParameters completionParameters,    ProcessingContext processingContext,    @NotNull CompletionResultSet completionResultSet){
      for (      String availableHeader : HeaderParserRepository.getInstance().getAllHeaderNames()) {
        completionResultSet.addElement(LookupElementBuilder.create(availableHeader));
      }
    }
  }
);
  extend(CompletionType.BASIC,PlatformPatterns.psiElement(ManifestTokenType.HEADER_VALUE_PART).withLanguage(ManifestLanguage.INSTANCE).withSuperParent(2,PlatformPatterns.psiElement(Directive.class).withName(ManifestConstants.Directives.NO_IMPORT)).withSuperParent(4,PlatformPatterns.psiElement(Header.class).withName(ManifestConstants.Headers.EXPORT_PACKAGE)),new CompletionProvider<CompletionParameters>(){
    public void addCompletions(    @NotNull CompletionParameters completionParameters,    ProcessingContext processingContext,    @NotNull CompletionResultSet completionResultSet){
      PsiElement psiElement=completionParameters.getOriginalPosition();
      if (psiElement != null && psiElement.getPrevSibling() == null) {
        completionResultSet.addElement(LookupElementBuilder.create("true"));
        completionResultSet.addElement(LookupElementBuilder.create("false"));
      }
    }
  }
);
  extend(CompletionType.BASIC,PlatformPatterns.psiElement(ManifestTokenType.HEADER_VALUE_PART).withLanguage(ManifestLanguage.INSTANCE).withSuperParent(2,PlatformPatterns.psiElement(Directive.class).withName(ManifestConstants.Directives.SPLIT_PACKAGE)).withSuperParent(4,PlatformPatterns.psiElement(Header.class).withName(ManifestConstants.Headers.EXPORT_PACKAGE)),new CompletionProvider<CompletionParameters>(){
    public void addCompletions(    @NotNull CompletionParameters completionParameters,    ProcessingContext processingContext,    @NotNull CompletionResultSet completionResultSet){
      PsiElement psiElement=completionParameters.getOriginalPosition();
      if (psiElement != null && psiElement.getPrevSibling() == null) {
        completionResultSet.addElement(LookupElementBuilder.create("merge-first"));
        completionResultSet.addElement(LookupElementBuilder.create("merge-last"));
        completionResultSet.addElement(LookupElementBuilder.create("first"));
        completionResultSet.addElement(LookupElementBuilder.create("error"));
      }
    }
  }
);
  extend(CompletionType.BASIC,PlatformPatterns.psiElement(ManifestTokenType.HEADER_VALUE_PART).withLanguage(ManifestLanguage.INSTANCE).withSuperParent(4,PlatformPatterns.psiElement(Header.class).withName(ManifestConstants.Headers.EXPORT_PACKAGE)),new ExportPackageCompletionProvider());
  extend(CompletionType.BASIC,PlatformPatterns.psiElement(ManifestTokenType.HEADER_VALUE_PART).withLanguage(ManifestLanguage.INSTANCE).withSuperParent(3,PlatformPatterns.psiElement(Header.class).withName(ManifestConstants.Headers.EXPORT_PACKAGE)),new ExportPackageCompletionProvider());
}
