{
  final PsiFile originalFile=parameters.getOriginalFile();
  final VirtualFile folder=CfmlUtil.findFileByLibTag(originalFile,libtag);
  if (folder != null && folder.isDirectory()) {
    final Set<String> names=new THashSet<String>(CfmlIndex.getInstance(originalFile.getProject()).getAllComponentsNames());
    names.retainAll(ContainerUtil.map(folder.getChildren(),new Function<VirtualFile,String>(){
      @Override public String fun(      VirtualFile virtualFile){
        return FileUtil.getNameWithoutExtension(virtualFile.getName()).toLowerCase();
      }
    }
));
    for (    String componentName : names) {
      result.addElement(LookupElementBuilder.create(prefix + ':' + componentName).withCaseSensitivity(false));
    }
  }
}
