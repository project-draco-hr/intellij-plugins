{
  final AirRunnerParameters params=getRunnerParameters();
  final GeneralCommandLine commandLine=new GeneralCommandLine();
  final VirtualFile airDescriptorFile=LocalFileSystem.getInstance().refreshAndFindFileByPath(params.getAirDescriptorPath());
  if (airDescriptorFile == null)   throw new ExecutionException(FlexBundle.message("file.not.found",params.getAirDescriptorPath()));
  final VirtualFile airRootDir=LocalFileSystem.getInstance().refreshAndFindFileByPath(params.getAirRootDirPath());
  if (airRootDir == null)   throw new ExecutionException(FlexBundle.message("folder.does.not.exist",params.getAirRootDirPath()));
  final Module module=ModuleManager.getInstance(getProject()).findModuleByName(params.getModuleName());
  if (module == null)   throw new ExecutionException(FlexBundle.message("module.not.found",params.getModuleName()));
  final Sdk sdk=FlexUtils.getSdkForActiveBC(module);
  if (sdk == null) {
    final String s=(ModuleType.get(module) instanceof FlexModuleType ? "module " : "Flex facet(s) of module ") + module.getName();
    throw new ExecutionException(FlexBundle.message("flex.sdk.not.set.for",s));
  }
  final String adlPath=FlexSdkUtils.getAdlPath(sdk);
  commandLine.setExePath(adlPath);
  if (sdk.getSdkType() instanceof FlexmojosSdkType) {
    final Pair<VirtualFile,Boolean> airRuntimeDirInfo;
    try {
      airRuntimeDirInfo=FlexSdkUtils.getAirRuntimeDirInfoForFlexmojosSdk(sdk);
    }
 catch (    IOException e) {
      throw new ExecutionException(e.getMessage());
    }
    myNeedToRemoveAirRuntimeDir=airRuntimeDirInfo.second;
    myAirRuntimeDirForFlexmojosSdk=airRuntimeDirInfo.first;
    commandLine.addParameter("-runtime");
    commandLine.addParameter(myAirRuntimeDirForFlexmojosSdk.getPath());
  }
 else {
    myNeedToRemoveAirRuntimeDir=false;
    myAirRuntimeDirForFlexmojosSdk=null;
  }
  final String adlOptions=params.getAdlOptions();
  if (!StringUtil.isEmptyOrSpaces(adlOptions)) {
    commandLine.addParameters(StringUtil.split(adlOptions," "));
  }
  commandLine.addParameter(params.getAirDescriptorPath());
  commandLine.addParameter(params.getAirRootDirPath());
  final String programParameters=params.getAirProgramParameters();
  if (!StringUtil.isEmptyOrSpaces(programParameters)) {
    commandLine.addParameter("--");
    commandLine.addParameters(StringUtil.split(programParameters," "));
  }
  return commandLine;
}
