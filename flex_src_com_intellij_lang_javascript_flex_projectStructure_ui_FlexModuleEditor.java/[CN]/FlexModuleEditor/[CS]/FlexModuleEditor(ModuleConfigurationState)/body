{
  myState=state;
  mySdksModel=ProjectStructureConfigurable.getInstance(myState.getProject()).getProjectJdksModel();
  mySdkLabel.setLabelFor(mySdkPathCombo.getChildComponent());
  myEntriesEditor=new CommonContentEntriesEditor(state.getRootModel().getModule().getName(),state,true,true);
  myEntriesEditor.getComponent().setBorder(new EmptyBorder(10,0,0,0));
  myContentEntriesHolder.add(myEntriesEditor.createComponent(),BorderLayout.CENTER);
  myListener=new SdkModel.Listener(){
    @Override public void sdkAdded(    Sdk sdk){
    }
    @Override public void beforeSdkRemove(    Sdk sdk){
      if (!isModified() && findExistingSdk(mySdkPathCombo.getText(),FlexIdeUtils.getSdkType()) == null) {
        mySdkPathCombo.setText("");
        myInitialSdkHome="";
      }
    }
    @Override public void sdkChanged(    Sdk sdk,    String previousName){
    }
    @Override public void sdkHomeSelected(    Sdk sdk,    String newSdkHome){
    }
  }
;
  mySdksModel.addListener(myListener);
  mySdkPathCombo.addListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      updateInfoLabel();
    }
  }
);
}
