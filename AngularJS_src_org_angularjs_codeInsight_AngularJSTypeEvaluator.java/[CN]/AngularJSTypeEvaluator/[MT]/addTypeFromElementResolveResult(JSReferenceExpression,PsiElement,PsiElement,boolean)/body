{
  if (resolveResult instanceof JSDefinitionExpression) {
    final PsiElement resolveParent=resolveResult.getParent();
    if (resolveParent instanceof AngularJSAsExpression) {
      final String name=resolveParent.getFirstChild().getText();
      final JSTypeSource source=JSTypeSourceFactory.createTypeSource(resolveResult);
      final JSType type=JSNamedType.createType(name,source,JSNamedType.StaticOrInstance.INSTANCE);
      addType(type,resolveResult);
      return true;
    }
 else     if (resolveParent instanceof AngularJSRepeatExpression) {
      if (calculateRepeatParameterType((AngularJSRepeatExpression)resolveParent)) {
        return true;
      }
    }
  }
  if (resolveResult instanceof JSParameter && AngularJSIndexingHandler.isInjectable(resolveResult) && AngularIndexUtil.hasAngularJS(resolveResult.getProject())) {
    final String name=((JSParameter)resolveResult).getName();
    final JSTypeSource source=JSTypeSourceFactory.createTypeSource(resolveResult);
    final JSType type=JSNamedType.createType(name,source,JSNamedType.StaticOrInstance.INSTANCE);
    addType(type,resolveResult);
  }
  return super.addTypeFromElementResolveResult(expression,parent,resolveResult,hasSomeType);
}
