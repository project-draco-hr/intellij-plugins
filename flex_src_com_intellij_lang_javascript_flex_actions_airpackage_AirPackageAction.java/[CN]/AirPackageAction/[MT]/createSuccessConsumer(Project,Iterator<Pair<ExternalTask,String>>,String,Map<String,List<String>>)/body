{
  return new Consumer<List<String>>(){
    public void consume(    final List<String> messages){
      packagePathsToWarnings.put(createdPackagePath,messages);
      if (iterator.hasNext()) {
        final Pair<ExternalTask,String> taskAndPackagePath=iterator.next();
        final ExternalTask task=taskAndPackagePath.first;
        final String packagePath=taskAndPackagePath.second;
        final Consumer<List<String>> onSuccessRunnable=createSuccessConsumer(project,iterator,packagePath,packagePathsToWarnings);
        ExternalTask.runInBackground(task,FlexBundle.message("packaging.air.application",PathUtil.getFileName(packagePath)),onSuccessRunnable,createFailureConsumer(project,packagePath,task));
      }
 else {
        final StringBuilder hrefs=new StringBuilder();
        for (        Map.Entry<String,List<String>> entry : packagePathsToWarnings.entrySet()) {
          final String packagePath=entry.getKey();
          final List<String> warnings=entry.getValue();
          if (hrefs.length() > 0) {
            hrefs.append("<br>");
          }
          hrefs.append("<a href='").append(packagePath).append("'>").append(PathUtil.getFileName(packagePath)).append("</a>");
          if (!warnings.isEmpty()) {
            hrefs.append("<br>");
            for (            String warning : warnings) {
              hrefs.append(warning).append("<br>");
            }
          }
        }
        final String message=FlexBundle.message("air.application.created",packagePathsToWarnings.size(),hrefs);
        final NotificationListener listener=new NotificationListener(){
          public void hyperlinkUpdate(          @NotNull final Notification notification,          @NotNull final HyperlinkEvent event){
            if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
              notification.expire();
              final String packagePath=event.getDescription();
              ShowFilePathAction.openFile(new File(packagePath));
            }
          }
        }
;
        NOTIFICATION_GROUP.createNotification("",message,NotificationType.INFORMATION,listener).notify(project);
      }
    }
  }
;
}
