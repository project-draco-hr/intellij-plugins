{
  final Collection<Pair<ExternalTask,String>> tasksAndPackagePaths=new ArrayList<Pair<ExternalTask,String>>();
  final AirPackageProjectParameters params=AirPackageProjectParameters.getInstance(project);
  for (  Pair<Module,FlexIdeBuildConfiguration> moduleAndBC : modulesAndBCs) {
    final FlexIdeBuildConfiguration bc=moduleAndBC.second;
    if (bc.getTargetPlatform() == TargetPlatform.Desktop) {
      final DesktopPackageType packageType=params.desktopPackageType;
      final ExternalTask task=AirPackageUtil.createAirDesktopTask(project,bc,packageType,passwords);
      final String packagePath=bc.getOutputFolder() + "/" + bc.getAirDesktopPackagingOptions().getPackageFileName()+ packageType.getFileExtension();
      tasksAndPackagePaths.add(Pair.create(task,packagePath));
    }
 else {
      if (bc.getAndroidPackagingOptions().isEnabled()) {
        final AndroidPackagingOptions packagingOptions=bc.getAndroidPackagingOptions();
        final AndroidPackageType packageType=params.androidPackageType;
        final ExternalTask task=AirPackageUtil.createAndroidPackageTask(project,bc,packageType,params.apkCaptiveRuntime,params.apkDebugListenPort,passwords);
        final String packagePath=bc.getOutputFolder() + "/" + packagingOptions.getPackageFileName()+ ".apk";
        tasksAndPackagePaths.add(Pair.create(task,packagePath));
      }
      if (bc.getIosPackagingOptions().isEnabled()) {
        final IosPackagingOptions packagingOptions=bc.getIosPackagingOptions();
        final IOSPackageType packageType=params.iosPackageType;
        final ExternalTask task=AirPackageUtil.createIOSPackageTask(project,bc,packageType,params.iosFastPackaging,passwords);
        final String packagePath=bc.getOutputFolder() + "/" + packagingOptions.getPackageFileName()+ ".ipa";
        tasksAndPackagePaths.add(Pair.create(task,packagePath));
      }
    }
  }
  createPackages(project,tasksAndPackagePaths);
}
