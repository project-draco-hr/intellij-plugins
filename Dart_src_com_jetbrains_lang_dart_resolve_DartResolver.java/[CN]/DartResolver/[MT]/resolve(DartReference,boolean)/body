{
  if (reference instanceof DartThisExpression) {
    return toResult(PsiTreeUtil.getParentOfType(reference,DartClass.class));
  }
  if (reference instanceof DartParameterNameReferenceExpression) {
    PsiElement target;
{
      final DartCallExpression callExpression=PsiTreeUtil.getParentOfType(reference,DartCallExpression.class);
      final DartExpression expression=callExpression != null ? callExpression.getExpression() : null;
      target=expression instanceof DartReference ? ((DartReference)expression).resolve() : null;
      target=target != null ? target.getParent() : null;
    }
    if (target == null) {
      final DartNewExpression newExpression=PsiTreeUtil.getParentOfType(reference,DartNewExpression.class);
      if (newExpression != null) {
        target=DartResolveUtil.findConstructorDeclaration(newExpression);
      }
    }
    final DartFormalParameterList parameters=PsiTreeUtil.getChildOfType(target,DartFormalParameterList.class);
    return toResult(DartResolveUtil.findParameterByName(parameters,reference.getText()));
  }
  if (DartResolveUtil.aloneOrFirstInChain(reference)) {
    return resolveSimpleReference(reference);
  }
  final DartReference leftReference=DartResolveUtil.getLeftReference(reference);
  final DartReference[] references=PsiTreeUtil.getChildrenOfType(reference,DartReference.class);
  if (references != null && references.length == 2) {
    final List<DartComponentName> result=new SmartList<DartComponentName>();
    final String importPrefix=references[0].getCanonicalText();
    final String componentName=references[1].getCanonicalText();
    DartResolveUtil.processDeclarationsInImportedFileByImportPrefix(reference,importPrefix,new DartResolveProcessor(result,componentName),componentName);
    if (!result.isEmpty()) {
      return result;
    }
    return toResult(references[1].resolve());
  }
 else   if (leftReference != null) {
    final DartClassResolveResult classResolveResult=leftReference.resolveDartClass();
    final DartClass dartClass=classResolveResult.getDartClass();
    if (dartClass != null) {
      final String name=reference.getCanonicalText();
      final DartComponent subComponent=leftReference instanceof DartType ? dartClass.findNamedConstructor(name) : filterAccess(reference,dartClass.findMembersByName(name));
      return toResult(subComponent == null ? null : subComponent.getComponentName());
    }
    final List<DartComponentName> result=new SmartList<DartComponentName>();
    final String importPrefix=leftReference.getCanonicalText();
    final String componentName=reference.getCanonicalText();
    DartResolveUtil.processDeclarationsInImportedFileByImportPrefix(reference,importPrefix,new DartResolveProcessor(result,componentName),componentName);
    if (!result.isEmpty()) {
      return result;
    }
  }
  return null;
}
