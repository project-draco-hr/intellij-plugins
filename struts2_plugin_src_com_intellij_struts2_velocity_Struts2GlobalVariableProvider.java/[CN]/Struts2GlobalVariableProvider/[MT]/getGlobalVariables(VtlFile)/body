{
  final Module module=ModuleUtilCore.findModuleForPsiElement(file);
  if (module == null) {
    return Collections.emptySet();
  }
  if (StrutsFacet.getInstance(module) == null) {
    return Collections.emptySet();
  }
  final List<VtlVariable> result=ContainerUtil.newArrayList();
  result.add(new MyVtlVariable("response",file,"javax.servlet.http.HttpServletResponse"));
  result.add(new MyVtlVariable("res",file,"javax.servlet.http.HttpServletResponse"));
  result.add(new MyVtlVariable("request",file,"javax.servlet.http.HttpServletRequest"));
  result.add(new MyVtlVariable("req",file,"javax.servlet.http.HttpServletRequest"));
  result.add(new MyVtlVariable("application",file,"javax.servlet.ServletContext"));
  result.add(new MyVtlVariable("session",file,"javax.servlet.http.HttpSession"));
  result.add(new MyVtlVariable("base",file,CommonClassNames.JAVA_LANG_STRING));
  result.add(new MyVtlVariable("stack",file,"com.opensymphony.xwork2.util.ValueStack"));
  result.add(new MyVtlVariable("action",file,"com.opensymphony.xwork2.ActionInvocation"));
  return result;
}
