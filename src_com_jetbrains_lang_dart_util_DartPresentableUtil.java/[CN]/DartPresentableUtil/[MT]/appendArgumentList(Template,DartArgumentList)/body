{
  final List<DartNamedArgument> namedArgumentList=argumentList.getNamedArgumentList();
  final Set<String> additionalUsedNamed=new THashSet<String>();
  for (  DartNamedArgument namedArgument : namedArgumentList) {
    additionalUsedNamed.add(namedArgument.getLabel().getText());
  }
  boolean needComma=false;
  for (  DartExpression expression : argumentList.getExpressionList()) {
    if (needComma) {
      result.addTextSegment(", ");
    }
    if (expression instanceof DartReference) {
      DartClass dartClass=((DartReference)expression).resolveDartClass().getDartClass();
      if (dartClass != null) {
        result.addTextSegment(dartClass.getName());
        result.addTextSegment(" ");
      }
    }
    Collection<String> suggestedNames=DartNameSuggesterUtil.getSuggestedNames(expression,additionalUsedNamed);
    String parameterName=suggestedNames.iterator().next();
    additionalUsedNamed.add(parameterName);
    result.addVariable(getExpression(parameterName),true);
    needComma=true;
  }
  if (namedArgumentList.isEmpty()) {
    return;
  }
  needComma=false;
  result.addTextSegment(", {");
  for (  DartNamedArgument namedArgument : namedArgumentList) {
    if (needComma) {
      result.addTextSegment(", ");
    }
    DartExpression expression=namedArgument.getExpression();
    if (expression instanceof DartReference) {
      DartClass dartClass=((DartReference)expression).resolveDartClass().getDartClass();
      if (dartClass != null) {
        result.addTextSegment(dartClass.getName());
        result.addTextSegment(" ");
      }
    }
    String labelText=namedArgument.getLabel().getText();
    labelText=labelText.substring(0,labelText.length() - 1);
    result.addVariable(getExpression(labelText),true);
    needComma=true;
  }
  result.addTextSegment("}");
}
