{
  VirtualFile installFolder=getLocalFileSystem().findFileByPath(frameworkInstanceDefinition.getBaseFolder());
  if (installFolder == null) {
    LOG.warn("The folder " + frameworkInstanceDefinition.getBaseFolder() + " does not exist.");
    return;
  }
  if (!installFolder.isDirectory()) {
    LOG.warn(frameworkInstanceDefinition.getBaseFolder() + " is not a folder");
    return;
  }
  VirtualFile knopflerfishOrgFolder=installFolder.findChild("knopflerfish.org");
  if (knopflerfishOrgFolder == null || !knopflerfishOrgFolder.isDirectory()) {
    LOG.warn(installFolder.getPath() + " does not contain a folder \"knopflerfish.org\"");
    return;
  }
  final VirtualFile osgiFolder=knopflerfishOrgFolder.findChild("osgi");
  if (osgiFolder == null) {
    LOG.warn(knopflerfishOrgFolder.getPath() + " does not contain a folder \"osgi\"");
    return;
  }
  myApplication.runWriteAction(new Runnable(){
    public void run(){
      osgiFolder.refresh(false,true);
      KnopflerfishSourceFinder sourceFinder=new KnopflerfishSourceFinder(osgiFolder);
      ArrayList<VirtualFile> directoriesToAdd=new ArrayList<VirtualFile>();
      VirtualFile jarsFolder=osgiFolder.findChild("jars");
      if (jarsFolder != null) {
        if (!jarsFolder.isDirectory()) {
          LOG.warn(jarsFolder.getPath() + " is not a folder");
          return;
        }
        VirtualFile[] files=jarsFolder.getChildren();
        for (        VirtualFile file : files) {
          if (file.isDirectory()) {
            directoriesToAdd.add(file);
          }
        }
      }
      collector.collectFrameworkLibraries(sourceFinder,directoriesToAdd);
    }
  }
);
}
