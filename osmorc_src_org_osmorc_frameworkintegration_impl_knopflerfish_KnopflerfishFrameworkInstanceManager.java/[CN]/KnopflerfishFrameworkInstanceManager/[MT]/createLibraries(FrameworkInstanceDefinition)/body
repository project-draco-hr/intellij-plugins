{
  VirtualFile installFolder=_fileSystem.findFileByPath(frameworkInstanceDefinition.getBaseFolder());
  if (installFolder == null) {
    throw new RuntimeException("The folder " + frameworkInstanceDefinition.getBaseFolder() + " does not exist.");
  }
  if (!installFolder.isDirectory()) {
    throw new RuntimeException(frameworkInstanceDefinition.getBaseFolder() + " is not a folder");
  }
  VirtualFile knopflerfishOrgFolder=installFolder.findChild("knopflerfish.org");
  if (knopflerfishOrgFolder == null) {
    throw new RuntimeException(installFolder.getPath() + " does not contain a folder \"knopflerfish.org\"");
  }
  final VirtualFile osgiFolder=knopflerfishOrgFolder.findChild("osgi");
  if (osgiFolder == null) {
    throw new RuntimeException(knopflerfishOrgFolder.getPath() + " does not contain a folder \"osgi\"");
  }
  _application.runWriteAction(new Runnable(){
    public void run(){
      osgiFolder.refresh(false,true);
      KnopflerfishSourceFinder sourceFinder=new KnopflerfishSourceFinder(osgiFolder);
      _libraryHandler.startLibraryChanges();
      _libraryHandler.createLibrariesFromBundles(osgiFolder,frameworkInstanceDefinition.getName(),sourceFinder);
      VirtualFile jarsFolder=osgiFolder.findChild("jars");
      if (jarsFolder != null) {
        if (!jarsFolder.isDirectory()) {
          throw new RuntimeException(jarsFolder.getPath() + " is not a folder");
        }
        VirtualFile[] files=jarsFolder.getChildren();
        for (        VirtualFile file : files) {
          if (file.isDirectory()) {
            _libraryHandler.createLibrariesFromBundles(file,frameworkInstanceDefinition.getName(),sourceFinder);
          }
        }
      }
      _libraryHandler.commitLibraryChanges();
    }
  }
);
}
