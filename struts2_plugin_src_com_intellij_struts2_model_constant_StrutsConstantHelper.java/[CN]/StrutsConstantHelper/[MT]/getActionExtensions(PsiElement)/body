{
  final PsiFile psiFile=psiElement.getContainingFile().getOriginalFile();
  CachedValue<AtomicNotNullLazyValue<List<String>>> extensions=psiFile.getUserData(KEY_ACTION_EXTENSIONS);
  if (extensions == null) {
    final Project project=psiElement.getProject();
    extensions=CachedValuesManager.getManager(project).createCachedValue(new CachedValueProvider<AtomicNotNullLazyValue<List<String>>>(){
      public Result<AtomicNotNullLazyValue<List<String>>> compute(){
        final AtomicNotNullLazyValue<List<String>> lazyValue=new AtomicNotNullLazyValue<List<String>>(){
          @NotNull @Override protected List<String> compute(){
            final List<String> extensions=StrutsConstantManager.getInstance(project).getConvertedValue(psiElement,StrutsCoreConstantContributor.ACTION_EXTENSION);
            final List<String> processedExtensions;
            if (extensions == null) {
              processedExtensions=Collections.emptyList();
            }
 else {
              processedExtensions=ContainerUtil.map(extensions,DOT_PATH_FUNCTION);
            }
            return processedExtensions;
          }
        }
;
        return Result.create(lazyValue,PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT);
      }
    }
,false);
    psiFile.putUserData(KEY_ACTION_EXTENSIONS,extensions);
  }
  return extensions.getValue().getValue();
}
