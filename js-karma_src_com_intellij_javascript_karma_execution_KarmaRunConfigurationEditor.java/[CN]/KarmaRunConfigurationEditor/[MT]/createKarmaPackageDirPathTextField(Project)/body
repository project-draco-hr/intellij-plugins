{
  TextFieldWithHistoryWithBrowseButton karmaPackageDirPathComponent=new TextFieldWithHistoryWithBrowseButton();
  final TextFieldWithHistory textFieldWithHistory=karmaPackageDirPathComponent.getChildComponent();
  textFieldWithHistory.setHistorySize(-1);
  textFieldWithHistory.setMinimumAndPreferredWidth(0);
  SwingHelper.addHistoryOnExpansion(textFieldWithHistory,new NotNullProducer<List<String>>(){
    @NotNull @Override public List<String> produce(){
      NodeSettings nodeSettings=KarmaGlobalSettingsUtil.getNodeSettings();
      if (nodeSettings != null) {
        nodeSettings.initGlobalNodeModulesDir();
      }
      List<CompletionModuleInfo> modules=ContainerUtil.newArrayList();
      VirtualFile requester=KarmaGlobalSettingsUtil.getRequester(myProject,myConfigPathTextFieldWithBrowseButton.getChildComponent().getText());
      NodeModuleSearchUtil.findModulesWithName(modules,KarmaGlobalSettingsUtil.NODE_PACKAGE_NAME,requester,nodeSettings,true);
      List<String> moduleDirs=ContainerUtil.newArrayListWithExpectedSize(modules.size());
      for (      CompletionModuleInfo module : modules) {
        VirtualFile dir=module.getVirtualFile();
        if (dir != null && dir.isDirectory()) {
          moduleDirs.add(FileUtil.toSystemDependentName(dir.getPath()));
        }
      }
      Collections.sort(moduleDirs);
      return moduleDirs;
    }
  }
);
  SwingHelper.installFileCompletionAndBrowseDialog(project,karmaPackageDirPathComponent,KarmaBundle.message("runConfiguration.karma_package_dir.browse_dialog.title"),FileChooserDescriptorFactory.createSingleFolderDescriptor());
  return karmaPackageDirPathComponent;
}
