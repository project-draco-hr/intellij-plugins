{
  BundleManifest manifest=getManifestByObject(module);
  if (manifest == null) {
    return Collections.emptySet();
  }
  Set<ManifestHolder> dependencyHolders=new HashSet<ManifestHolder>();
  List<String> imports=manifest.getImports();
  for (  String anImport : imports) {
    dependencyHolders.addAll(myBundleCache.whoProvides(anImport));
  }
  List<String> requiredBundles=manifest.getRequiredBundles();
  List<ManifestHolder> allRequiredBundles=new ArrayList<ManifestHolder>();
  for (  String requiredBundle : requiredBundles) {
    resolveRequiredBundle(requiredBundle,allRequiredBundles);
  }
  dependencyHolders.addAll(allRequiredBundles);
  ManifestHolder manifestHolder=myBundleCache.getManifestHolder(module);
  if (manifestHolder != null) {
    dependencyHolders.addAll(myBundleCache.getFragmentHosts(manifestHolder));
  }
  Set<Object> result=new HashSet<Object>();
  for (  ManifestHolder holder : dependencyHolders) {
    try {
      result.add(holder.getBoundObject());
    }
 catch (    ManifestHolderDisposedException e) {
    }
  }
  List<String> entries=manifest.getBundleClassPathEntries();
  result.addAll(resolveBundleClassPath(entries));
  return result;
}
