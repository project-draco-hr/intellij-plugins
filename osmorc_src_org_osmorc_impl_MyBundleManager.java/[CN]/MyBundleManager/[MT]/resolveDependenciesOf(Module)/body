{
  BundleManifest manifest=getManifestByObject(module);
  if (manifest == null) {
    return Collections.emptySet();
  }
  Set<Object> result=new HashSet<Object>();
  List<String> imports=manifest.getImports();
  for (  String anImport : imports) {
    Set<ManifestHolder> manifestHolders=myBundleCache.whoProvides(anImport);
    for (    ManifestHolder manifestHolder : manifestHolders) {
      try {
        Object boundObject=manifestHolder.getBoundObject();
        result.add(boundObject);
      }
 catch (      ManifestHolderDisposedException ignore) {
      }
    }
  }
  List<String> requiredBundles=manifest.getRequiredBundles();
  for (  String requiredBundle : requiredBundles) {
    ManifestHolder manifestHolder=myBundleCache.whoIsRequiredBundle(requiredBundle);
    if (manifestHolder != null) {
      try {
        result.add(manifestHolder.getBoundObject());
      }
 catch (      ManifestHolderDisposedException ignore) {
      }
    }
  }
  ManifestHolder manifestHolder=myBundleCache.getManifestHolder(module);
  if (manifestHolder != null) {
    Set<ManifestHolder> fragmentHosts=myBundleCache.getFragmentHosts(manifestHolder);
    for (    ManifestHolder fragmentHost : fragmentHosts) {
      try {
        result.add(fragmentHost.getBoundObject());
      }
 catch (      ManifestHolderDisposedException ignore) {
      }
    }
  }
  return result;
}
