{
  ManifestHolder manifestHolder=myBundleCache.whoIsRequiredBundle(requireBundleSpec);
  if (manifestHolder == null) {
    return;
  }
  if (resolvedDependencies.contains(manifestHolder)) {
    return;
  }
  BundleManifest requireBundleManifest;
  try {
    requireBundleManifest=manifestHolder.getBundleManifest();
  }
 catch (  ManifestHolderDisposedException e) {
    return;
  }
  if (requireBundleManifest != null) {
    resolvedDependencies.add(manifestHolder);
    List<String> toResolve=new ArrayList<String>();
    toResolve.addAll(requireBundleManifest.getReExportedBundles());
    Set<ManifestHolder> fragments=myBundleCache.getFragmentsForBundle(manifestHolder);
    fragments=BundleCache.getCandidatesWithHighestVersions(fragments);
    for (    ManifestHolder fragment : fragments) {
      BundleManifest manifest=null;
      try {
        manifest=fragment.getBundleManifest();
      }
 catch (      ManifestHolderDisposedException e) {
      }
      if (manifest != null) {
        toResolve.addAll(manifest.getReExportedBundles());
      }
    }
    for (    String dependencySpec : toResolve) {
      resolveRequiredBundle(dependencySpec,resolvedDependencies);
    }
  }
}
