{
  ApplicationSettings registry=ServiceManager.getService(ApplicationSettings.class);
  myFrameworkStartLevel.setModel(new SpinnerNumberModel(0,0,Integer.MAX_VALUE,1));
  JSpinner.DefaultEditor editor=(JSpinner.DefaultEditor)myFrameworkStartLevel.getEditor();
  editor.getTextField().setFormatterFactory(new DefaultFormatterFactory(new JSpinnerCellEditor.MyNumberFormatter("Auto")));
  myDefaultStartLevel.setModel(new SpinnerNumberModel(1,1,Integer.MAX_VALUE,1));
  frameworkInstances.setModel(new DefaultComboBoxModel(registry.getFrameworkInstanceDefinitions().toArray()));
  frameworkInstances.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      onFrameworkChange();
    }
  }
);
  this.project=project;
  RunConfigurationTableModel model=new RunConfigurationTableModel();
  modulesList.setModel(model);
  modulesList.setRowSelectionAllowed(true);
  modulesList.setColumnSelectionAllowed(false);
  modulesList.setDefaultEditor(Integer.class,new JSpinnerCellEditor());
  modulesList.setDefaultRenderer(Integer.class,new JSpinnerCellEditor());
  modulesList.setAutoCreateRowSorter(true);
  addButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      onAddClick();
    }
  }
);
  removeButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      onRemoveClick();
    }
  }
);
  osmorcControlledRadioButton.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      boolean isUserDefined=!osmorcControlledRadioButton.isSelected();
      workingDirField.setEnabled(isUserDefined);
    }
  }
);
  workingDirField.addBrowseFolderListener("Choose a working directory","The working directory is the directory from which the framework is started",null,FileChooserDescriptorFactory.createSingleFolderDescriptor());
  workingDirField.getTextField().setColumns(30);
  frameworkSpecificBundleSelectionActions=new DefaultActionGroup("frameworkSpecificBundleSelectionActions",true);
  frameworkSpecificButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      JBPopupFactory.getInstance().createActionGroupPopup(null,frameworkSpecificBundleSelectionActions,DataManager.getInstance().getDataContext(frameworkSpecificButton),JBPopupFactory.ActionSelectionAid.NUMBERING,true).showUnderneathOf(frameworkSpecificButton);
    }
  }
);
  modulesList.addComponentListener(new ComponentAdapter(){
    @Override public void componentResized(    ComponentEvent e){
      int width=modulesList.getWidth();
      int bundleNameWidth=2 * width / 3;
      int otherWidth=width / 3 / 2;
      TableColumn bundleColumn=modulesList.getColumnModel().getColumn(0);
      bundleColumn.setPreferredWidth(bundleNameWidth);
      TableColumn startLevelColumn=modulesList.getColumnModel().getColumn(1);
      startLevelColumn.setPreferredWidth(otherWidth);
      TableColumn startColumn=modulesList.getColumnModel().getColumn(2);
      startColumn.setPreferredWidth(otherWidth);
    }
  }
);
  vmParams.getTextField().setPreferredSize(new Dimension(100,20));
  programParameters.getTextField().setPreferredSize(new Dimension(100,20));
  setAnchor(alternativeJREPanel.getCbEnabled());
}
