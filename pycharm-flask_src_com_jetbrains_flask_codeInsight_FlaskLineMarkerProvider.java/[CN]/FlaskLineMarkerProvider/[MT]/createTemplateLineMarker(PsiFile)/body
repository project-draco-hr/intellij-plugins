{
  final List<PyStringLiteralExpression> references=FlaskTemplateManager.findTemplateReferences(element);
  if (!references.isEmpty()) {
    final Set<PyFunction> viewFunctions=new HashSet<PyFunction>();
    for (    PyStringLiteralExpression literal : references) {
      PyFunction containingFunction=PsiTreeUtil.getParentOfType(literal,PyFunction.class);
      if (containingFunction != null) {
        viewFunctions.add(containingFunction);
      }
    }
    return createViewFunctionNavigationMarker(element,viewFunctions);
  }
  return null;
}
