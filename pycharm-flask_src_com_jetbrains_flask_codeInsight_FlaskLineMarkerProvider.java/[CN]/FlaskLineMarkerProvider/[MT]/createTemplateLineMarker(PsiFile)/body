{
  final Set<PyFunction> viewFunctions=new HashSet<PyFunction>();
  ReferencesSearch.search(element).forEach(new Processor<PsiReference>(){
    @Override public boolean process(    PsiReference reference){
      if (reference.getElement() instanceof PyStringLiteralExpression) {
        PyStringLiteralExpression literal=(PyStringLiteralExpression)reference.getElement();
        if (FlaskTemplateManager.isTemplateReference(literal)) {
          viewFunctions.add(PsiTreeUtil.getParentOfType(literal,PyFunction.class));
        }
      }
      return true;
    }
  }
);
  if (!viewFunctions.isEmpty()) {
    return createViewFunctionNavigationMarker(element,viewFunctions);
  }
  return null;
}
