{
  final FlexIdeBuildConfiguration config=myBCCombo.getBC();
  final boolean overrideMainClass=myOverrideMainClassCheckBox.isSelected();
  myMainClassComponent.setEnabled(overrideMainClass);
  myOutputFileNameLabel.setEnabled(overrideMainClass);
  myOutputFileNameTextField.setEnabled(overrideMainClass);
  if (!overrideMainClass && config != null) {
    myMainClassComponent.setText(config.getMainClass());
    myOutputFileNameTextField.setText(config.getOutputFileName());
  }
  final boolean web=config != null && config.getTargetPlatform() == TargetPlatform.Web;
  final boolean desktop=config != null && config.getTargetPlatform() == TargetPlatform.Desktop;
  final boolean mobile=config != null && config.getTargetPlatform() == TargetPlatform.Mobile;
  myLaunchPanel.setVisible(web);
  myWebOptionsPanel.setVisible(web);
  myDesktopOptionsPanel.setVisible(desktop);
  myMobileRunPanel.setVisible(mobile);
  myMobileOptionsPanel.setVisible(mobile);
  if (web) {
    updateBCOutputLabel(config);
    myURLTextField.setEnabled(myURLRadioButton.isSelected());
    myLauncherParametersTextWithBrowse.getTextField().setText(myLauncherParameters.getPresentableText());
    myRunTrustedCheckBox.setEnabled(!myURLRadioButton.isSelected());
  }
  if (mobile) {
    final boolean runOnEmulator=myOnEmulatorRadioButton.isSelected();
    myEmulatorCombo.setEnabled(runOnEmulator);
    UIUtil.setEnabled(myEmulatorScreenSizePanel,runOnEmulator,true);
    myAdlOptionsLabel.setEnabled(runOnEmulator);
    myEmulatorAdlOptionsEditor.setEnabled(runOnEmulator);
    if (runOnEmulator) {
      updateEmulatorRelatedControls();
    }
    updateDebugTransportRelatedControls();
  }
}
