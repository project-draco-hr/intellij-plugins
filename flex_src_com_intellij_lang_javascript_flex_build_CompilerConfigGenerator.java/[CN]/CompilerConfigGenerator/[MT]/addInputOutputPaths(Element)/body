{
  if (myBC.getOutputType() == OutputType.Library) {
    addFilesIncludedInSwc(rootElement);
    if (!myFlexmojos) {
      addLibClasses(rootElement);
    }
  }
 else {
    final InfoFromConfigFile info=FlexCompilerConfigFileUtil.getInfoFromConfigFile(myBC.getCompilerOptions().getAdditionalConfigFilePath());
    final String pathToMainClassFile=myCSS ? myBC.getMainClass() : myFlexUnit ? FlexUtils.getPathToFlexUnitTempDirectory() + "/" + myBC.getMainClass()+ FlexUnitPrecompileTask.DOT_FLEX_UNIT_LAUNCHER_EXTENSION : FlexUtils.getPathToMainClassFile(myBC.getMainClass(),myModule);
    if (pathToMainClassFile.isEmpty() && info.getMainClass(myModule) == null && !ApplicationManager.getApplication().isUnitTestMode()) {
      throw new IOException(FlexBundle.message("bc.incorrect.main.class",myBC.getMainClass(),myBC.getName(),myModule.getName()));
    }
    if (!pathToMainClassFile.isEmpty()) {
      addOption(rootElement,CompilerOptionInfo.MAIN_CLASS_INFO,FileUtil.toSystemIndependentName(pathToMainClassFile));
    }
  }
  addOption(rootElement,CompilerOptionInfo.OUTPUT_PATH_INFO,myBC.getOutputFilePath(false));
}
