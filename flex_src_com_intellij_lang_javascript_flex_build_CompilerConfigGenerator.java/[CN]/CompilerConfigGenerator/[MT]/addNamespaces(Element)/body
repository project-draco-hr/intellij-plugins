{
  if (myConfig.PURE_ACTION_SCRIPT)   return;
  final StringBuilder namespaceBuilder=new StringBuilder();
  if (StringUtil.compareVersionNumbers(mySdkVersion,"4") < 0) {
    namespaceBuilder.append("http://www.adobe.com/2006/mxml").append(CompilerOptionInfo.LIST_ENTRY_PARTS_SEPARATOR).append("${FLEX_SDK}/frameworks/mxml-manifest.xml");
  }
 else {
    namespaceBuilder.append("http://ns.adobe.com/mxml/2009").append(CompilerOptionInfo.LIST_ENTRY_PARTS_SEPARATOR).append("${FLEX_SDK}/frameworks/mxml-2009-manifest.xml");
    if (myConfig.TARGET_PLATFORM == TargetPlatform.Mobile || myConfig.DEPENDENCIES.COMPONENT_SET == ComponentSet.SparkAndMx || myConfig.DEPENDENCIES.COMPONENT_SET == ComponentSet.SparkOnly) {
      namespaceBuilder.append(CompilerOptionInfo.LIST_ENTRIES_SEPARATOR).append("library://ns.adobe.com/flex/spark").append(CompilerOptionInfo.LIST_ENTRY_PARTS_SEPARATOR).append("${FLEX_SDK}/frameworks/spark-manifest.xml");
    }
    if (myConfig.TARGET_PLATFORM != TargetPlatform.Mobile) {
      if (myConfig.DEPENDENCIES.COMPONENT_SET == ComponentSet.SparkAndMx || myConfig.DEPENDENCIES.COMPONENT_SET == ComponentSet.MxOnly) {
        namespaceBuilder.append(CompilerOptionInfo.LIST_ENTRIES_SEPARATOR).append("library://ns.adobe.com/flex/mx").append(CompilerOptionInfo.LIST_ENTRY_PARTS_SEPARATOR).append("${FLEX_SDK}/frameworks/mx-manifest.xml");
      }
      namespaceBuilder.append(CompilerOptionInfo.LIST_ENTRIES_SEPARATOR).append("http://www.adobe.com/2006/mxml").append(CompilerOptionInfo.LIST_ENTRY_PARTS_SEPARATOR).append("${FLEX_SDK}/frameworks/mxml-manifest.xml");
    }
  }
  final CompilerOptionInfo info=CompilerOptionInfo.getOptionInfo("compiler.namespaces.namespace");
  addOption(rootElement,info,namespaceBuilder.toString());
}
