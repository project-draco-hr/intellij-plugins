{
  for (  final DependencyEntry entry : myBC.getDependencies().getEntries()) {
    final LinkageType linkageType=entry.getDependencyType().getLinkageType();
    if (entry instanceof BuildConfigurationEntry) {
      if (linkageType == LinkageType.LoadInRuntime)       continue;
      final FlexIdeBuildConfiguration dependencyBC=((BuildConfigurationEntry)entry).findBuildConfiguration();
      if (dependencyBC != null && FlexCompiler.checkDependencyType(myBC,dependencyBC,linkageType)) {
        addLib(rootElement,dependencyBC.getOutputFilePath(true),linkageType);
      }
    }
 else     if (entry instanceof ModuleLibraryEntry) {
      final LibraryOrderEntry orderEntry=FlexProjectRootsUtil.findOrderEntry((ModuleLibraryEntry)entry,ModuleRootManager.getInstance(myModule));
      if (orderEntry != null) {
        addLibraryRoots(rootElement,orderEntry.getRootFiles(OrderRootType.CLASSES),linkageType);
      }
    }
 else     if (entry instanceof SharedLibraryEntry) {
      final Library library=FlexProjectRootsUtil.findOrderEntry(myModule.getProject(),(SharedLibraryEntry)entry);
      if (library != null) {
        addLibraryRoots(rootElement,library.getFiles((OrderRootType.CLASSES)),linkageType);
      }
    }
  }
}
