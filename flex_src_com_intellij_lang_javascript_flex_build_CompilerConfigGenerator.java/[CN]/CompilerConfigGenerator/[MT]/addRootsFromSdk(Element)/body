{
  final String globalLib=myConfig.TARGET_PLATFORM == FlexIdeBuildConfiguration.TargetPlatform.Web ? "${FLEX_SDK}/frameworks/libs/player/{targetPlayerMajorVersion}" + (StringUtil.compareVersionNumbers(mySdkVersion,"4") < 0 ? "" : ".{targetPlayerMinorVersion}") + "/playerglobal.swc" : "${FLEX_SDK}/frameworks/libs/air/airglobal.swc";
  addOption(rootElement,CompilerOptionInfo.EXTERNAL_LIBRARY_INFO,globalLib);
  final StringBuilder libBuilder=new StringBuilder();
  libBuilder.append("${FLEX_SDK}/frameworks/libs").append(CompilerOptionInfo.LIST_ENTRIES_SEPARATOR).append("${FLEX_SDK}/frameworks/locale/{locale}");
  if (myConfig.TARGET_PLATFORM == FlexIdeBuildConfiguration.TargetPlatform.Desktop) {
    libBuilder.append(CompilerOptionInfo.LIST_ENTRIES_SEPARATOR).append("${FLEX_SDK}/frameworks/libs/air");
  }
  if (StringUtil.compareVersionNumbers(mySdkVersion,"4.5") >= 0) {
    if (myConfig.TARGET_PLATFORM == FlexIdeBuildConfiguration.TargetPlatform.Mobile) {
      libBuilder.append(CompilerOptionInfo.LIST_ENTRIES_SEPARATOR).append("${FLEX_SDK}/frameworks/libs/mobile").append(CompilerOptionInfo.LIST_ENTRIES_SEPARATOR).append("${FLEX_SDK}/frameworks/libs/air/servicemonitor.swc");
    }
 else {
      libBuilder.append(CompilerOptionInfo.LIST_ENTRIES_SEPARATOR).append("${FLEX_SDK}/frameworks/libs/mx");
    }
  }
  addOption(rootElement,CompilerOptionInfo.LIBRARY_PATH_INFO,libBuilder.toString());
}
