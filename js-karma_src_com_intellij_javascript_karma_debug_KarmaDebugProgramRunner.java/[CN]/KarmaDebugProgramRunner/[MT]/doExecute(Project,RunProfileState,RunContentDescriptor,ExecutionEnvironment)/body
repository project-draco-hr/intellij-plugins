{
  FileDocumentManager.getInstance().saveAllDocuments();
  final ExecutionResult executionResult=state.execute(env.getExecutor(),this);
  if (executionResult == null) {
    return null;
  }
  KarmaConsoleView consoleView=KarmaConsoleView.get(executionResult);
  if (consoleView == null) {
    throw new RuntimeException("KarmaConsoleView was expected!");
  }
  final KarmaServer karmaServer=consoleView.getKarmaExecutionSession().getKarmaServer();
  if (karmaServer.isReady() && karmaServer.hasCapturedBrowsers()) {
    return doStart(project,karmaServer,consoleView,executionResult,contentToReuse,env);
  }
  RunContentBuilder contentBuilder=new RunContentBuilder(project,this,env.getExecutor(),executionResult,env);
  final RunContentDescriptor descriptor=contentBuilder.showRunContent(contentToReuse);
  karmaServer.doWhenReadyWithCapturedBrowser(new Runnable(){
    @Override public void run(){
      KarmaUtil.restart(descriptor);
    }
  }
);
  return descriptor;
}
