{
  KarmaDebugBrowserSelector browserSelector=new KarmaDebugBrowserSelector(project,karmaServer.getCapturedBrowsers(),env,this);
  final Pair<JSDebugEngine,WebBrowser> debugEngine=browserSelector.selectDebugEngine();
  if (debugEngine == null) {
    return null;
  }
  if (!debugEngine.first.prepareDebugger(project,debugEngine.second)) {
    return null;
  }
  final Url url=Urls.newFromEncoded(karmaServer.formatUrl("/debug.html"));
  final DebuggableFileFinder fileFinder=getDebuggableFileFinder(karmaServer);
  XDebugSession session=XDebuggerManager.getInstance(project).startSession(this,env,contentToReuse,new XDebugProcessStarter(){
    @Override @NotNull public XDebugProcess start(    @NotNull final XDebugSession session){
      JSDebugProcess<?> debugProcess=debugEngine.first.createDebugProcess(session,debugEngine.second,fileFinder,url,executionResult,true);
      debugProcess.setElementsInspectorEnabled(false);
      debugProcess.setLayouter(consoleView.createDebugLayouter(debugProcess));
      return debugProcess;
    }
  }
);
  return session.getRunContentDescriptor();
}
