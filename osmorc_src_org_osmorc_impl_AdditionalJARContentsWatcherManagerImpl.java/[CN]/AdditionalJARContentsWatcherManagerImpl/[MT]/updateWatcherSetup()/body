{
  OsmorcFacet osmorcFacet=OsmorcFacet.getInstance(_module);
  if (osmorcFacet != null) {
    List<VirtualFile> newAdditionalJARContents=new ArrayList<VirtualFile>();
    OsmorcFacetConfiguration osmorcFacetConfiguration=osmorcFacet.getConfiguration();
    List<Pair<String,String>> jarContents=osmorcFacetConfiguration.getAdditionalJARContents();
    for (    Pair<String,String> jarContent : jarContents) {
      VirtualFile file=_fileSystem.findFileByPath(jarContent.getFirst());
      if (file != null) {
        newAdditionalJARContents.add(file);
      }
    }
    List<LocalFileSystem.WatchRequest> toRemove=new ArrayList<LocalFileSystem.WatchRequest>();
    for (Iterator<VirtualFile> jarContentsIterator=_additionalBundleJARContents.iterator(); jarContentsIterator.hasNext(); ) {
      VirtualFile file=jarContentsIterator.next();
      if (!newAdditionalJARContents.contains(file)) {
        jarContentsIterator.remove();
        for (Iterator<LocalFileSystem.WatchRequest> watchIterator=_watchRequests.iterator(); watchIterator.hasNext(); ) {
          LocalFileSystem.WatchRequest watchRequest=watchIterator.next();
          if (Comparing.strEqual(file.getPath(),watchRequest.getRootPath())) {
            toRemove.add(watchRequest);
            watchIterator.remove();
          }
        }
      }
    }
    List<String> toAdd=new ArrayList<String>();
    for (    VirtualFile newAdditionalJARContent : newAdditionalJARContents) {
      if (!_additionalBundleJARContents.contains(newAdditionalJARContent)) {
        toAdd.add(newAdditionalJARContent.getPath());
        _additionalBundleJARContents.add(newAdditionalJARContent);
      }
    }
    final Set<LocalFileSystem.WatchRequest> requests=_fileSystem.replaceWatchedRoots(toRemove,toAdd,null);
    _watchRequests.addAll(requests);
  }
 else {
    cleanup();
  }
}
