{
  FileInputStream in=null;
  try {
    in=new FileInputStream(file);
    ZipInputStream zip=new ZipInputStream(in);
    ZipEntry e;
    while ((e=zip.getNextEntry()) != null) {
      if (!e.isDirectory() && "catalog.xml".equals(e.getName())) {
        InputStreamReader reader=new InputStreamReader(zip,"UTF-8");
        NanoXmlUtil.parse(reader,new NanoXmlUtil.IXMLBuilderAdapter(){
          private boolean processingDef;
          @Override public void startElement(          String name,          String nsPrefix,          String nsURI,          String systemID,          int lineNr) throws Exception {
            if (name.equals("def")) {
              processingDef=true;
            }
          }
          @Override public void endElement(          String name,          String nsPrefix,          String nsURI) throws Exception {
            if (name.equals("def")) {
              processingDef=false;
            }
          }
          @Override public void addAttribute(          String name,          String nsPrefix,          String nsURI,          String value,          String type) throws Exception {
            if (processingDef && name.equals("id")) {
              String fqn=value.replace(':','.');
              String packageName=StringUtil.getPackageName(fqn);
              if (!packageName.isEmpty()) {
                result.consume(packageName);
              }
            }
          }
        }
);
      }
    }
  }
  finally {
    if (in != null) {
      try {
        in.close();
      }
 catch (      IOException ignored) {
      }
    }
  }
}
