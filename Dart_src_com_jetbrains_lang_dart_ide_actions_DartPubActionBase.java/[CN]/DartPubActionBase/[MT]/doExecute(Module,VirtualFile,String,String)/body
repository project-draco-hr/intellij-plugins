{
  final Task.Backgroundable task=new Task.Backgroundable(module.getProject(),getTitle(),true){
    public void run(    @NotNull ProgressIndicator indicator){
      final String presentableCommandLine="pub " + StringUtil.join(pubParameters," ");
      indicator.setText(DartBundle.message("dart.0.in.progress",presentableCommandLine));
      indicator.setIndeterminate(true);
      final GeneralCommandLine command=new GeneralCommandLine();
      command.setExePath(pubPath);
      command.setWorkDirectory(pubspecYamlFile.getParent().getPath());
      command.addParameters(pubParameters);
      ApplicationManager.getApplication().invokeAndWait(new Runnable(){
        @Override public void run(){
          FileDocumentManager.getInstance().saveAllDocuments();
        }
      }
,ModalityState.defaultModalityState());
      try {
        final ProcessOutput processOutput=new CapturingProcessHandler(command).runProcess();
        final String err=processOutput.getStderr().trim();
        LOG.debug(presentableCommandLine + ", exit code: " + processOutput.getExitCode()+ ", err:\n"+ err+ "\nout:\n"+ processOutput.getStdout());
        if (err.isEmpty()) {
          Notifications.Bus.notify(new Notification(GROUP_DISPLAY_ID,DartPubActionBase.this.getTitle(),getSuccessMessage(),NotificationType.INFORMATION));
        }
 else {
          Notifications.Bus.notify(new Notification(GROUP_DISPLAY_ID,DartPubActionBase.this.getTitle(),err,NotificationType.ERROR));
        }
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          public void run(){
            DartProjectComponent.excludePackagesFolders(module,pubspecYamlFile);
            pubspecYamlFile.getParent().refresh(true,true);
          }
        }
);
      }
 catch (      ExecutionException ex) {
        LOG.error(ex);
        Notifications.Bus.notify(new Notification(GROUP_DISPLAY_ID,DartPubActionBase.this.getTitle(),DartBundle.message("dart.pub.exception",ex.getMessage()),NotificationType.ERROR));
      }
    }
  }
;
  task.queue();
}
