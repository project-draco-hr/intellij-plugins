{
  final TypedNameProviderRegistry nameProviderRegistry=new TypedNameProviderRegistry();
  nameProviderRegistry.addTypedNameProvider(new TypedNameProvider<StrutsRoot>(StrutsRoot.class){
    protected String getDisplayName(    final StrutsRoot strutsRoot){
      return DomUtil.getFile(strutsRoot).getName();
    }
  }
);
  nameProviderRegistry.addTypedNameProvider(new TypedNameProvider<ExceptionMapping>(ExceptionMapping.class){
    protected String getDisplayName(    final ExceptionMapping exceptionMapping){
      final PsiClass exceptionClass=exceptionMapping.getExceptionClass().getValue();
      if (exceptionClass != null) {
        return exceptionClass.getName();
      }
      return exceptionMapping.getName().getStringValue();
    }
  }
);
  nameProviderRegistry.addTypedNameProvider(new TypedNameProvider<GlobalExceptionMapping>(GlobalExceptionMapping.class){
    protected String getDisplayName(    final GlobalExceptionMapping globalExceptionMapping){
      final PsiClass exceptionClass=globalExceptionMapping.getExceptionClass().getValue();
      if (exceptionClass != null) {
        return exceptionClass.getName();
      }
      return globalExceptionMapping.getName().getStringValue();
    }
  }
);
  nameProviderRegistry.addTypedNameProvider(new TypedNameProvider<InterceptorRef>(InterceptorRef.class){
    protected String getDisplayName(    final InterceptorRef interceptorRef){
      return interceptorRef.getName().getStringValue();
    }
  }
);
  nameProviderRegistry.addTypedNameProvider(new TypedNameProvider<DefaultInterceptorRef>(DefaultInterceptorRef.class){
    protected String getDisplayName(    final DefaultInterceptorRef defaultInterceptorRef){
      return defaultInterceptorRef.getName().getStringValue();
    }
  }
);
  nameProviderRegistry.addTypedNameProvider(new TypedNameProvider<Include>(Include.class){
    protected String getDisplayName(    final Include include){
      return include.getFile().getStringValue();
    }
  }
);
  nameProviderRegistry.addTypedNameProvider(new TypedNameProvider<Result>(Result.class){
    protected String getDisplayName(    final Result result){
      final String resultName=result.getName().getStringValue();
      return resultName != null ? resultName : Result.DEFAULT_NAME;
    }
  }
);
  nameProviderRegistry.addTypedNameProvider(new TypedNameProvider<GlobalResult>(GlobalResult.class){
    protected String getDisplayName(    final GlobalResult globalResult){
      final String globalResultName=globalResult.getName().getStringValue();
      return globalResultName != null ? globalResultName : Result.DEFAULT_NAME;
    }
  }
);
  nameProviderRegistry.addTypedNameProvider(new TypedNameProvider<DefaultActionRef>(DefaultActionRef.class){
    protected String getDisplayName(    final DefaultActionRef defaultActionRef){
      return defaultActionRef.getName().getStringValue();
    }
  }
);
  nameProviderRegistry.addTypedNameProvider(new TypedNameProvider<DefaultClassRef>(DefaultClassRef.class){
    protected String getDisplayName(    final DefaultClassRef defaultClassRef){
      return defaultClassRef.getDefaultClass().getStringValue();
    }
  }
);
  ElementPresentationManager.registerNameProvider(nameProviderRegistry);
}
