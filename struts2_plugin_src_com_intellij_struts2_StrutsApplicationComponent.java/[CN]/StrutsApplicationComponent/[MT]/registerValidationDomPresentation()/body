{
  ElementPresentationManager.registerIcon(ValidatorConfig.class,StrutsIcons.VALIDATOR);
  ElementPresentationManager.registerIcon(Validators.class,StrutsIcons.VALIDATION_CONFIG_FILE_ICON);
  ElementPresentationManager.registerNameProvider(new NullableFunction<Object,String>(){
    public String fun(    final Object o){
      return o instanceof Validators ? ((Validators)o).getRoot().getFile().getName() : null;
    }
  }
);
  ElementPresentationManager.registerIcon(Field.class,Icons.FIELD_ICON);
  ElementPresentationManager.registerNameProvider(new NullableFunction<Object,String>(){
    public String fun(    final Object o){
      return o instanceof Field ? ((Field)o).getName().getStringValue() : null;
    }
  }
);
  ElementPresentationManager.registerIcon(FieldValidator.class,StrutsIcons.VALIDATOR);
  ElementPresentationManager.registerNameProvider(new NullableFunction<Object,String>(){
    public String fun(    final Object o){
      if (!(o instanceof FieldValidator)) {
        return null;
      }
      final ValidatorConfig validatorConfig=((FieldValidator)o).getType().getValue();
      return validatorConfig != null ? validatorConfig.getName().getStringValue() : null;
    }
  }
);
  ElementPresentationManager.registerIcon(Message.class,StrutsIcons.MESSAGE);
  ElementPresentationManager.registerNameProvider(new NullableFunction<Object,String>(){
    public String fun(    final Object o){
      if (!(o instanceof Message)) {
        return null;
      }
      final Message message=(Message)o;
      final String key=message.getKey().getStringValue();
      return !StringUtil.isEmpty(key) ? key : message.getValue();
    }
  }
);
}
