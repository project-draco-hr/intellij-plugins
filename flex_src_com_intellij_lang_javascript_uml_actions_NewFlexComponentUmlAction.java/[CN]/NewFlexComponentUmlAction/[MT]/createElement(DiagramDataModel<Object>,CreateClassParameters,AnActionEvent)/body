{
  final Ref<JSClass> clazz=new Ref<JSClass>();
  CommandProcessor.getInstance().executeCommand(params.getTargetDirectory().getProject(),new Runnable(){
    @Override public void run(){
      try {
        CreateClassOrInterfaceFix.createClass(params.getTemplateName(),params.getClassName(),params.getPackageName(),getSuperClass(params),params.getInterfacesFqns(),params.getTargetDirectory(),getActionName(),true,new HashMap<String,Object>(params.getTemplateAttributes()),new Consumer<JSClass>(){
          @Override public void consume(          final JSClass jsClass){
            CreateFlexComponentFix.fixParentComponent(jsClass,params.getSuperclassFqn());
            clazz.set(jsClass);
          }
        }
);
      }
 catch (      Exception e) {
        throw new IncorrectOperationException(e);
      }
    }
  }
,JSBundle.message(FlexBundle.message("new.flex.component.command.name")),null);
  return clazz.get();
}
