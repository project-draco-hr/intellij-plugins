{
  if (tokenStart < endOffset) {
    if (isNewline(tokenStart)) {
      tokenType=isLineStart(tokenStart) ? ManifestTokenType.SECTION_END : ManifestTokenType.NEWLINE;
      tokenEnd=tokenStart + 1;
      currentState=INITIAL_STATE;
    }
 else     if (currentState == WAITING_FOR_HEADER_ASSIGNMENT_STATE) {
      if (isColon(tokenStart)) {
        tokenType=ManifestTokenType.COLON;
        currentState=WAITING_FOR_SPACE_AFTER_HEADER_NAME_STATE;
      }
 else {
        tokenType=TokenType.BAD_CHARACTER;
      }
      tokenEnd=tokenStart + 1;
    }
 else     if (currentState == WAITING_FOR_SPACE_AFTER_HEADER_NAME_STATE) {
      if (isSpace(tokenStart)) {
        tokenType=ManifestTokenType.SIGNIFICANT_SPACE;
      }
 else {
        tokenType=TokenType.BAD_CHARACTER;
      }
      currentState=INITIAL_STATE;
      tokenEnd=tokenStart + 1;
    }
 else     if (isHeaderStart(tokenStart)) {
      if (isAlphaNum(tokenStart)) {
        tokenEnd=tokenStart + 1;
        while (tokenEnd < endOffset && isHeaderChar(tokenEnd)) {
          tokenEnd++;
        }
      }
      tokenType=ManifestTokenType.HEADER_NAME;
      currentState=WAITING_FOR_HEADER_ASSIGNMENT_STATE;
    }
 else     if (isContinuationStart(tokenStart)) {
      tokenType=ManifestTokenType.SIGNIFICANT_SPACE;
      tokenEnd=tokenStart + 1;
      currentState=INITIAL_STATE;
    }
 else     if (isSpecialCharacter(tokenStart)) {
      tokenType=getTokenTypeForSpecialCharacter(tokenStart);
      tokenEnd=tokenStart + 1;
      currentState=INITIAL_STATE;
    }
 else {
      tokenEnd=tokenStart;
      while (tokenEnd < endOffset && !isSpecialCharacter(tokenEnd) && !isNewline(tokenEnd)) {
        tokenEnd++;
      }
      tokenType=ManifestTokenType.HEADER_VALUE_PART;
    }
  }
 else {
    tokenType=null;
    tokenEnd=tokenStart;
  }
}
