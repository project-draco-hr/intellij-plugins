{
  if (xmlTag != null) {
    final Project project=xmlTag.getProject();
    final String attributeName=DirectiveUtil.normalizeAttributeName(attrName);
    ThreeState attributeAvailable=isApplicable(project,attributeName,xmlTag,AngularDirectivesDocIndex.KEY);
    if (attributeAvailable == ThreeState.UNSURE) {
      attributeAvailable=isApplicable(project,attributeName,xmlTag,AngularDirectivesIndex.KEY);
    }
    if (attributeAvailable == ThreeState.YES) {
      return createDescriptor(project,attributeName);
    }
    for (    XmlAttribute attribute : xmlTag.getAttributes()) {
      if (isAngular2Attribute(attribute.getName(),project) || attribute.getName().equals(attrName))       continue;
      final PsiElement declaration=AngularIndexUtil.resolve(project,AngularDirectivesIndex.KEY,attribute.getName());
      if (declaration != null) {
        for (        XmlAttributeDescriptor binding : AngularAttributeDescriptor.getFieldBasedDescriptors((JSImplicitElement)declaration)) {
          if (binding.getName().equals(attrName)) {
            return binding;
          }
        }
      }
    }
    if (AngularAttributesRegistry.isBindingAttribute(attrName,project)) {
      return new AngularBindingDescriptor(xmlTag,attrName);
    }
    if (AngularAttributesRegistry.isEventAttribute(attrName,project)) {
      return new AngularEventHandlerDescriptor(xmlTag,attrName);
    }
    return getAngular2Descriptor(attrName,project);
  }
  return null;
}
