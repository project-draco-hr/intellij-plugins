{
  if (myFilePathsWithUnsentChanges.contains(filePath))   return;
  final List<DartRegion> newImplementedClasses=new ArrayList<DartRegion>(implementedClasses.size());
  for (  ImplementedClass implementedClass : implementedClasses) {
    newImplementedClasses.add(new DartRegion(implementedClass.getOffset(),implementedClass.getLength()));
  }
  final List<DartRegion> newImplementedMembers=new ArrayList<DartRegion>(implementedMembers.size());
  for (  ImplementedMember implementedMember : implementedMembers) {
    newImplementedMembers.add(new DartRegion(implementedMember.getOffset(),implementedMember.getLength()));
  }
  boolean hasChanges=false;
synchronized (myImplementedClassData) {
    final List<DartRegion> old=myImplementedClassData.get(filePath);
    if (old == null || !old.equals(newImplementedClasses)) {
      hasChanges=true;
      myImplementedClassData.put(filePath,newImplementedClasses);
    }
  }
synchronized (myImplementedMemberData) {
    final List<DartRegion> old=myImplementedMemberData.get(filePath);
    if (old == null || !old.equals(newImplementedMembers)) {
      hasChanges=true;
      myImplementedMemberData.put(filePath,newImplementedMembers);
    }
  }
  if (hasChanges) {
    forceFileAnnotation(filePath,false);
  }
}
