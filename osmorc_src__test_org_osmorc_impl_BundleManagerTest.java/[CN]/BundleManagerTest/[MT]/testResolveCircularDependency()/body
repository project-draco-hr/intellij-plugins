{
  myBundleManager.addManifestHolder(makeHolder("MyManifest.MF","Bundle-SymbolicName: foo.bar\n" + "Bundle-Version: 1.0.0\n" + "Require-Bundle: org.eclipse.circular.one",getModule()));
  FutureTask<Set<Object>> bt=new FutureTask<Set<Object>>(new Callable<Set<Object>>(){
    @Override public Set<Object> call() throws Exception {
      return myBundleManager.resolveDependenciesOf(getModule());
    }
  }
);
  Executors.newFixedThreadPool(1).execute(bt);
  long t=System.currentTimeMillis();
  while (!bt.isDone()) {
    long elapsed=System.currentTimeMillis() - t;
    if (elapsed > 1000) {
      bt.cancel(true);
      fail("Infinite loop detected in MyBundleManager while resolving circular dependencies.");
    }
    TimeoutUtil.sleep(100);
  }
  Set<Object> objects=bt.get();
  assertThat(objects,notNullValue());
  assertThat(objects.contains("org.eclipse.circular.one"),is(true));
  assertThat(objects.contains("org.eclipse.circular.two"),is(true));
  assertThat(objects.size(),is(2));
}
