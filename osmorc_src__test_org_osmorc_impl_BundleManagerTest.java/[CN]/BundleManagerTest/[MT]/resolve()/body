{
  FutureTask<Set<Object>> bt=new FutureTask<Set<Object>>(new Callable<Set<Object>>(){
    @Override public Set<Object> call() throws Exception {
      return ApplicationManager.getApplication().runReadAction(new Computable<Set<Object>>(){
        @Override public Set<Object> compute(){
          return myBundleManager.resolveDependenciesOf(getModule());
        }
      }
);
    }
  }
);
  Executors.newFixedThreadPool(1).execute(bt);
  long t=System.currentTimeMillis();
  while (!bt.isDone()) {
    long elapsed=System.currentTimeMillis() - t;
    if (elapsed > 1000) {
      bt.cancel(true);
      fail("Infinite loop detected in MyBundleManager while resolving circular dependencies.");
    }
    TimeoutUtil.sleep(100);
  }
  return bt.get();
}
