{
  final MavenProject project=maven.readProject(pomFile);
  final MavenProject oldProject=session.getCurrentProject();
  final String compileGoal="compile-" + project.getPackaging();
  MojoExecution flexmojosMojoExecution=null;
  try {
    session.setCurrentProject(project);
    for (    Plugin plugin : project.getBuildPlugins()) {
      if (plugin.getGroupId().equals("org.sonatype.flexmojos") && plugin.getArtifactId().equals("flexmojos-maven-plugin")) {
        flexmojosMojoExecution=maven.createMojoExecution(plugin,compileGoal,project);
        break;
      }
    }
    if (flexmojosMojoExecution == null) {
      return null;
    }
    maven.getPluginRealm(flexmojosMojoExecution);
    final Mojo mojo=mavenPluginManager.getConfiguredMojo(Mojo.class,session,flexmojosMojoExecution);
    try {
      return new File((String)mojo.getClass().getMethod("getOutput").invoke(mojo));
    }
  finally {
      plexusContainer.release(mojo);
    }
  }
  finally {
    session.setCurrentProject(oldProject);
    if (flexmojosMojoExecution != null) {
      maven.releaseMojoExecution(compileGoal,flexmojosMojoExecution);
    }
  }
}
