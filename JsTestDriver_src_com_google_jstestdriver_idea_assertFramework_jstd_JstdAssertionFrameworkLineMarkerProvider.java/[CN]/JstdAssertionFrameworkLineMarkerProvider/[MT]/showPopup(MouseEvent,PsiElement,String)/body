{
  final JBList list=new JBList(Type.values());
  list.setCellRenderer(new ListCellRendererWrapper(list.getCellRenderer()){
    @Override public void customize(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (value == Type.RUN) {
        setIcon(AllIcons.Toolwindows.ToolWindowRun);
        setText("Run '" + displayName + "'");
      }
 else       if (value == Type.DEBUG) {
        setIcon(AllIcons.Toolwindows.ToolWindowDebugger);
        setText("Debug '" + displayName + "'");
      }
    }
  }
);
  PopupChooserBuilder builder=new PopupChooserBuilder(list);
  JBPopup popup=builder.setMovable(true).setItemChoosenCallback(new Runnable(){
    @Override public void run(){
      int[] ids=list.getSelectedIndices();
      if (ids == null || ids.length == 0)       return;
      Object[] selectedElements=list.getSelectedValues();
      for (      Object element : selectedElements) {
        if (psiElement.isValid()) {
          if (element == Type.RUN) {
            execute(DefaultRunExecutor.getRunExecutorInstance(),psiElement);
          }
 else           if (element == Type.DEBUG) {
            execute(DefaultDebugExecutor.getDebugExecutorInstance(),psiElement);
          }
        }
      }
    }
  }
).createPopup();
  popup.show(new RelativePoint(e));
}
