{
  final DartSdk sdk=DartSdk.getDartSdk(env.getProject());
  assert(sdk != null);
  final RunProfile runConfiguration=env.getRunProfile();
  final VirtualFile contextFileOrDir;
  final ExecutionResult executionResult;
  final String debuggingHost;
  final int debuggingPort;
  final int observatoryPort;
  if (runConfiguration instanceof DartRunConfigurationBase) {
    contextFileOrDir=((DartRunConfigurationBase)runConfiguration).getRunnerParameters().getDartFile();
    executionResult=state.execute(env.getExecutor(),this);
    if (executionResult == null) {
      return null;
    }
    debuggingHost=null;
    debuggingPort=((DartCommandLineRunningState)state).getDebuggingPort();
    observatoryPort=((DartCommandLineRunningState)state).getObservatoryPort();
  }
 else   if (runConfiguration instanceof DartRemoteDebugConfiguration) {
    final String path=((DartRemoteDebugConfiguration)runConfiguration).getParameters().getDartProjectPath();
    contextFileOrDir=LocalFileSystem.getInstance().findFileByPath(path);
    if (contextFileOrDir == null) {
      throw new RuntimeConfigurationError("Folder not found: " + FileUtil.toSystemDependentName(path));
    }
    executionResult=null;
    debuggingHost=((DartRemoteDebugConfiguration)runConfiguration).getParameters().getHost();
    if (StringUtil.compareVersionNumbers(sdk.getVersion(),"1.14") < 0) {
      debuggingPort=((DartRemoteDebugConfiguration)runConfiguration).getParameters().getPort();
      observatoryPort=-1;
    }
 else {
      debuggingPort=-1;
      observatoryPort=((DartRemoteDebugConfiguration)runConfiguration).getParameters().getPort();
    }
  }
 else {
    LOG.error("Unexpected run configuration: " + runConfiguration.getClass().getName());
    return null;
  }
  FileDocumentManager.getInstance().saveAllDocuments();
  final XDebuggerManager debuggerManager=XDebuggerManager.getInstance(env.getProject());
  final XDebugSession debugSession=debuggerManager.startSession(env,new XDebugProcessStarter(){
    @Override @NotNull public XDebugProcess start(    @NotNull final XDebugSession session){
      final DartUrlResolver dartUrlResolver=DartUrlResolver.getInstance(env.getProject(),contextFileOrDir);
      return StringUtil.compareVersionNumbers(sdk.getVersion(),"1.14") < 0 ? new DartCommandLineDebugProcess(session,debuggingHost,debuggingPort,observatoryPort,executionResult,dartUrlResolver) : new DartVmServiceDebugProcess(session,StringUtil.notNullize(debuggingHost,"localhost"),observatoryPort,executionResult,dartUrlResolver,dasExecutionContextId,runConfiguration instanceof DartRemoteDebugConfiguration);
    }
  }
);
  return debugSession.getRunContentDescriptor();
}
