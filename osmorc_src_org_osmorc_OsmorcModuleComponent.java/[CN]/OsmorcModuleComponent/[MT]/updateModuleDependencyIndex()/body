{
  myApplication.invokeLater(new Runnable(){
    public void run(){
      if (myModule.isDisposed()) {
        return;
      }
      ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
      if (indicator != null) {
        indicator.setText("Updating OSGi dependency index for module '" + myModule.getName() + "'");
      }
      ModifiableRootModel model=new ReadAction<ModifiableRootModel>(){
        protected void run(        Result<ModifiableRootModel> result) throws Throwable {
          ModifiableRootModel model=ModuleRootManager.getInstance(myModule).getModifiableModel();
          result.setResult(model);
        }
      }
.execute().getResultObject();
      OrderEntry[] entries=model.getOrderEntries();
      try {
        for (int i=0, entriesLength=entries.length; i < entriesLength; i++) {
          if (indicator != null) {
            indicator.setFraction(i / entriesLength);
          }
          OrderEntry entry=entries[i];
          if (entry instanceof LibraryOrderEntry) {
            final Library library=((LibraryOrderEntry)entry).getLibrary();
            if (library != null) {
              myBundleManager.addOrUpdateBundle(library);
            }
          }
        }
      }
  finally {
        model.dispose();
      }
    }
  }
);
}
