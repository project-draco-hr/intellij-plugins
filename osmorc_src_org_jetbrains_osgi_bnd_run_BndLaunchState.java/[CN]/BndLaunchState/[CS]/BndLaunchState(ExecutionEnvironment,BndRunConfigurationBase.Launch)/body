{
  super(environment);
  myConfiguration=configuration;
  myProject=myConfiguration.getProject();
  String toolWindowId=environment.getExecutor().getToolWindowId();
  NotificationGroup notificationGroup=ourNotificationGroups.get(toolWindowId);
  if (notificationGroup == null) {
    String name=BndRunConfigurationType.getInstance().getDisplayName() + " (" + toolWindowId+ ")";
    notificationGroup=NotificationGroup.toolWindowGroup(name,toolWindowId);
    ourNotificationGroups.put(toolWindowId,notificationGroup);
  }
  myNotifications=notificationGroup;
  final File runFile=new File(myConfiguration.bndRunFile);
  if (!runFile.isFile()) {
    throw new CantRunException(message("bnd.run.configuration.invalid",runFile));
  }
  try {
    String title=message("bnd.run.configuration.progress");
    myLauncher=ProgressManager.getInstance().run(new Task.WithResult<ProjectLauncher,Exception>(myProject,title,false){
      @Override protected ProjectLauncher compute(      @NotNull ProgressIndicator indicator) throws Exception {
        indicator.setIndeterminate(true);
        ProjectLauncher launcher=Workspace.getRun(runFile).getProjectLauncher();
        launcher.prepare();
        return launcher;
      }
    }
);
  }
 catch (  Exception e) {
    LOG.info(e);
    throw new CantRunException(message("bnd.run.configuration.cannot.run",runFile,e.getMessage()));
  }
  myBundleStamps=ContainerUtil.newHashMap();
  bundlesChanged();
}
