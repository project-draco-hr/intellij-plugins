{
  final Collection<Module> modulesToClear=new ArrayList<Module>();
  for (  final Map.Entry<Module,ModuleDependencies> entry : myModuleToDependenciesCache.entrySet()) {
    final Module module=entry.getKey();
    final ModuleDependencies dependencies=entry.getValue();
    for (    final VirtualFile file : dependencies.myFiles) {
      if (file.equals(dirtyFile) || (file.isDirectory() && VfsUtil.isAncestor(file,dirtyFile,false)) || (dirtyFile.isDirectory() && VfsUtil.isAncestor(dirtyFile,file,false))) {
        modulesToClear.add(module);
        break;
      }
    }
  }
  for (  Module module : modulesToClear) {
    markModuleAndDependentModulesDirty(module);
  }
}
