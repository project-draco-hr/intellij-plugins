{
  return new JSElementVisitor(){
    @Override public void visitJSCallExpression(    final JSCallExpression jsCallExpression){
      JSReferenceExpression methodExpression=CastUtils.tryCast(jsCallExpression.getMethodExpression(),JSReferenceExpression.class);
      JSArgumentList jsArgumentList=jsCallExpression.getArgumentList();
      if (methodExpression != null && jsArgumentList != null) {
        JSExpression[] arguments=ObjectUtils.notNull(jsArgumentList.getArguments(),JSExpression.EMPTY_ARRAY);
        String methodName=methodExpression.getReferencedName();
        if (methodName == null) {
          return;
        }
        boolean suitableSymbol=isSuitableMethod(methodName,arguments);
        if (suitableSymbol) {
          boolean resolved=isResolved(methodExpression);
          if (!resolved) {
            holder.registerProblem(methodExpression,getDisplayName(),ProblemHighlightType.GENERIC_ERROR,TextRange.create(0,methodExpression.getTextLength()),getQuickFix());
          }
        }
      }
    }
  }
;
}
