{
  final CharSequence text=document.getCharsSequence();
  final String boundString=getExistingBoundString(text,nodeRange.getStartOffset());
  if (boundString == null) {
    LOG.warn("Could not fetch bound string from found node");
    return;
  }
  final int boundLength=boundString.length();
  if (nodeRange.getStartOffset() + boundLength == caret.getSelectionStart() && nodeRange.getEndOffset() - boundLength == caret.getSelectionEnd()) {
    document.deleteString(nodeRange.getEndOffset() - boundLength,nodeRange.getEndOffset());
    document.deleteString(nodeRange.getStartOffset(),nodeRange.getStartOffset() + boundLength);
    return;
  }
  int from=caret.getSelectionStart();
  int to=caret.getSelectionEnd();
  if (shouldMoveToWordBounds()) {
    while (from - boundLength > nodeRange.getStartOffset() && Character.isWhitespace(text.charAt(from - 1))) {
      from--;
    }
    while (to + boundLength < nodeRange.getEndOffset() && Character.isWhitespace(text.charAt(to))) {
      to++;
    }
  }
  if (to + boundLength == nodeRange.getEndOffset()) {
    document.deleteString(nodeRange.getEndOffset() - boundLength,nodeRange.getEndOffset());
  }
 else {
    document.insertString(to,boundString);
  }
  if (from - boundLength == nodeRange.getStartOffset()) {
    document.deleteString(nodeRange.getStartOffset(),nodeRange.getStartOffset() + boundLength);
  }
 else {
    document.insertString(from,boundString);
  }
}
