{
  final JpsJavaCompilerConfiguration configuration=JpsJavaExtensionService.getInstance().getOrCreateCompilerConfiguration(target.getModule().getProject());
  final JpsCompilerExcludes excludes=configuration.getCompilerExcludes();
  try {
    holder.processDirtyFiles(new FileProcessor<BuildRootDescriptor,FlexResourceBuildTarget>(){
      public boolean apply(      final FlexResourceBuildTarget target,      final File file,      final BuildRootDescriptor root) throws IOException {
        if (excludes.isExcluded(file))         return true;
        final String relativePath=FileUtil.toSystemIndependentName(FileUtil.getRelativePath(root.getRootFile(),file));
        if (target.isTests()) {
          if (!FlexCommonUtils.isSourceFile(file.getName())) {
            final String outputRootUrl=JpsJavaExtensionService.getInstance().getOutputUrl(target.getModule(),target.isTests());
            if (outputRootUrl == null)             return true;
            final String targetPath=JpsPathUtil.urlToPath(outputRootUrl) + '/' + relativePath;
            context.processMessage(new ProgressMessage("Copying " + file.getPath()));
            copyResource(context,file,Collections.singleton(targetPath),outputConsumer);
          }
        }
 else {
          final Collection<String> targetPaths=new ArrayList<String>();
          for (          JpsFlexBuildConfiguration bc : target.getModule().getProperties().getBuildConfigurations()) {
            if (bc.isSkipCompile() || !FlexCommonUtils.canHaveResourceFiles(bc.getNature()) || bc.getCompilerOptions().getResourceFilesMode() == JpsFlexCompilerOptions.ResourceFilesMode.None) {
              continue;
            }
            final JpsFlexCompilerOptions.ResourceFilesMode mode=bc.getCompilerOptions().getResourceFilesMode();
            if (mode == JpsFlexCompilerOptions.ResourceFilesMode.All && !FlexCommonUtils.isSourceFile(file.getName()) || mode == JpsFlexCompilerOptions.ResourceFilesMode.ResourcePatterns && configuration.isResourceFile(file,root.getRootFile())) {
              final String outputFolder=PathUtilRt.getParentPath(bc.getActualOutputFilePath());
              targetPaths.add(outputFolder + "/" + relativePath);
            }
          }
          if (!targetPaths.isEmpty()) {
            context.processMessage(new ProgressMessage("Copying " + file.getPath()));
            copyResource(context,file,targetPaths,outputConsumer);
          }
        }
        return true;
      }
    }
);
  }
 catch (  Exception e) {
    throw new ProjectBuildException(e.getMessage(),e);
  }
}
