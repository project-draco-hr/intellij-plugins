{
  importProject("<actionScriptProperties mainApplicationPath='pack/App1.mxml'>\n" + "  <compiler outputFolderPath='bin-debug' sourceFolderPath='src'/>\n" + "  <applications>\n"+ "    <application path='pack/App1.mxml'/>\n"+ "    <application path=\"FlexUnitCompilerApplication.as\"/>\n"+ "    <application path=\"FlexUnitApplication.as\"/>\n"+ "    <application path='App2.mxml'/>\n"+ "  </applications>\n"+ "  <modules>\n"+ "    <module application='src/pack/App1.mxml' destPath='modules/Module1.swf' optimize='true' sourcePath='src/modules/Module1.mxml'/>\n"+ "    <module application='src/App2.mxml' destPath='Module2.swf' optimize='true' sourcePath='src/Module2.mxml'/>\n"+ "    <module application='src/pack/App1.mxml' destPath='pack/ModuleNoOpt.swf' optimize='false' sourcePath='src/pack/ModuleNoOpt.as'/>\n"+ "  </modules>\n"+ "  <buildCSSFiles>\n"+ "    <buildCSSFileEntry sourcePath='in_project_root.css'/>\n"+ "    <buildCSSFileEntry sourcePath='src/pack/css_in_pack.css'/>\n"+ "  </buildCSSFiles>\n"+ "</actionScriptProperties>");
  final String path=myFlashBuilderProjectDir.getPath();
  final FlexBuildConfiguration bc1=getBC("App1",2);
  assertEquals(TargetPlatform.Web,bc1.getTargetPlatform());
  assertTrue(bc1.isPureAs());
  assertEquals(OutputType.Application,bc1.getOutputType());
  assertEquals("pack.App1",bc1.getMainClass());
  assertEquals("App1.swf",bc1.getOutputFileName());
  assertEquals(path + "/bin-debug",bc1.getOutputFolder());
  final List<String> expectedCssPaths=Arrays.asList(path + "/in_project_root.css",path + "/src/pack/css_in_pack.css");
  assertSameElements(bc1.getCssFilesToCompile(),expectedCssPaths);
  final Collection<FlexBuildConfiguration.RLMInfo> rlms1=bc1.getRLMs();
  assertEquals(2,rlms1.size());
  final Iterator<FlexBuildConfiguration.RLMInfo> iterator1=rlms1.iterator();
  final FlexBuildConfiguration.RLMInfo rlm11=iterator1.next();
  assertEquals("modules.Module1",rlm11.MAIN_CLASS);
  assertEquals("modules/Module1.swf",rlm11.OUTPUT_FILE);
  assertTrue(rlm11.OPTIMIZE);
  final FlexBuildConfiguration.RLMInfo rlm12=iterator1.next();
  assertEquals("pack.ModuleNoOpt",rlm12.MAIN_CLASS);
  assertEquals("pack/ModuleNoOpt.swf",rlm12.OUTPUT_FILE);
  assertFalse(rlm12.OPTIMIZE);
  final DependencyEntry[] entries1=bc1.getDependencies().getEntries();
  assertEquals(0,entries1.length);
  final FlexBuildConfiguration bc2=getBC("App2",2);
  assertEquals(TargetPlatform.Web,bc2.getTargetPlatform());
  assertTrue(bc2.isPureAs());
  assertEquals(OutputType.Application,bc2.getOutputType());
  assertEquals("App2",bc2.getMainClass());
  assertEquals("App2.swf",bc2.getOutputFileName());
  assertEquals(path + "/bin-debug",bc2.getOutputFolder());
  assertSameElements(bc2.getCssFilesToCompile(),expectedCssPaths);
  final Collection<FlexBuildConfiguration.RLMInfo> rlms2=bc2.getRLMs();
  assertEquals(1,rlms2.size());
  final FlexBuildConfiguration.RLMInfo rlm21=rlms2.iterator().next();
  assertEquals("Module2",rlm21.MAIN_CLASS);
  assertEquals("Module2.swf",rlm21.OUTPUT_FILE);
  assertTrue(rlm21.OPTIMIZE);
  final DependencyEntry[] entries2=bc2.getDependencies().getEntries();
  assertEquals(0,entries2.length);
}
