{
  if (xmlTag != null) {
    final Project project=xmlTag.getProject();
    final Map<String,XmlAttributeDescriptor> result=new LinkedHashMap<String,XmlAttributeDescriptor>();
    FileBasedIndex.getInstance().processValues(AngularJSIndex.INDEX_ID,AngularJSIndexingHandler.DIRECTIVE_KEY,null,new FileBasedIndex.ValueProcessor<TObjectIntHashMap<String>>(){
      @Override public boolean process(      VirtualFile file,      TObjectIntHashMap<String> descriptorNames){
        for (        Object o : descriptorNames.keys()) {
          AngularAttributeDescriptor descriptor=createDescriptor(project,(String)o,file,descriptorNames.get((String)o));
          result.put(descriptor.getName(),descriptor);
        }
        return true;
      }
    }
,GlobalSearchScope.allScope(project));
    if (!result.containsKey("ng-model")) {
      for (      String name : DIRECTIVE_NAMES) {
        result.put(name,createDescriptor(project,name,null,-1));
      }
    }
    return result.values().toArray(new XmlAttributeDescriptor[result.size()]);
  }
  return DESCRIPTORS;
}
