{
  final AbcNameFilter sparkInclusionNameFilter=new AbcNameFilterStartsWith("com.intellij.flex.uiDesigner.flex",true);
  final Collection<CharSequence> airsparkDefinitions=new ArrayList<CharSequence>(1);
  airsparkDefinitions.add("spark.components:WindowedApplication");
  final Collection<CharSequence> commonDefinitions=new ArrayList<CharSequence>(1);
  commonDefinitions.add("com.intellij.flex.uiDesigner:SpecialClassForAdobeEngineers");
  AbcNameFilterByNameSetAndStartsWith filter=new AbcNameFilterByNameSetAndStartsWith(commonDefinitions,new String[]{"mx.","spark."}){
    @Override public boolean accept(    CharSequence name){
      return StringUtil.startsWith(name,FlexSdkAbcInjector.STYLE_PROTO_CHAIN) || StringUtil.startsWith(name,"mx.styles:StyleManager") || StringUtil.startsWith(name,FlexSdkAbcInjector.LAYOUT_MANAGER)|| StringUtil.startsWith(name,FlexSdkAbcInjector.RESOURCE_MANAGER)|| (super.accept(name) && !sparkInclusionNameFilter.accept(name) && !airsparkDefinitions.contains(name));
    }
  }
;
  File source=getSourceFile(rootPath,flexVersion);
  new AbcFilter().filter(source,createAbcFile(rootPath,flexVersion),filter);
  new AbcFilter().filter(source,new File(rootPath + "/complement-flex" + flexVersion+ ".swf"),sparkInclusionNameFilter);
  new AbcFilter().filter(source,new File(rootPath + "/complement-air4.swf"),new AbcNameFilter(){
    @Override public boolean accept(    CharSequence name){
      return airsparkDefinitions.contains(name);
    }
  }
);
}
