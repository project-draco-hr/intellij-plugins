{
  String basePath=instance.getBaseFolder();
  if (basePath == null || !new File(basePath).isDirectory())   return Collections.emptyList();
  List<File> dirs=ContainerUtil.newArrayList();
  for (  String subDir : getBundleDirectories()) {
    if (subDir.isEmpty()) {
      dirs.add(new File(basePath));
    }
 else     if (subDir.endsWith("/*")) {
      File[] nestedDirs=new File(basePath,subDir.substring(0,subDir.length() - 2)).listFiles();
      if (nestedDirs != null) {
        ContainerUtil.addAll(dirs,nestedDirs);
      }
    }
 else {
      dirs.add(new File(basePath,subDir));
    }
  }
  Collection<SelectedBundle> bundles=ContainerUtil.newArrayList();
  outer:   for (  File dir : dirs) {
    File[] files=dir.listFiles();
    if (files != null) {
      for (      File file : files) {
        if (file.getName().endsWith(".jar") && JarUtil.containsEntry(file,"META-INF/MANIFEST.MF")) {
          Result result=checkType(file,type);
          if (result != Result.NOT_A) {
            SelectedBundle bundle=makeBundle(file,type);
            bundles.add(bundle);
          }
          if (result == Result.IS_A) {
            break outer;
          }
        }
      }
    }
  }
  return bundles;
}
