{
  try {
    final Collection<Pair<Module,FlexBuildConfiguration>> modulesAndBCsToCompile=FlexBuildTargetScopeProvider.getModulesAndBCsToCompile(context.getCompileScope());
    suggestParallelCompilationIfNeeded(context.getProject(),modulesAndBCsToCompile);
    final Collection<Trinity<Module,FlexBuildConfiguration,FlashProjectStructureProblem>> problems=ApplicationManager.getApplication().runReadAction(new Computable<Collection<Trinity<Module,FlexBuildConfiguration,FlashProjectStructureProblem>>>(){
      public Collection<Trinity<Module,FlexBuildConfiguration,FlashProjectStructureProblem>> compute(){
        return getProblems(context.getCompileScope(),modulesAndBCsToCompile);
      }
    }
);
    if (!problems.isEmpty()) {
      boolean hasErrors=false;
      for (      Trinity<Module,FlexBuildConfiguration,FlashProjectStructureProblem> problem : problems) {
        if (problem.getThird().severity == ProjectStructureProblemType.Severity.ERROR) {
          hasErrors=true;
          break;
        }
      }
      if (hasErrors) {
        context.addMessage(CompilerMessageCategory.ERROR,"Flash build configurations contain errors. " + "Double-click error message below to navigate to the corresponding field in the Project Structure dialog",null,-1,-1);
      }
      reportProblems(context,problems);
      return !hasErrors;
    }
  }
 catch (  ConfigurationException e) {
    context.addMessage(CompilerMessageCategory.ERROR,FlexBundle.message("project.setup.problem",e.getMessage()),null,-1,-1);
    return false;
  }
  return true;
}
