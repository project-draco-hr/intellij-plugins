{
  if (myParallelCompilationSuggested)   return;
  if (CompilerWorkspaceConfiguration.getInstance(project).PARALLEL_COMPILATION)   return;
  if (modulesAndBCsToCompile.size() < 2)   return;
  if (!independentBCsExist(modulesAndBCsToCompile))   return;
  final NotificationListener listener=new NotificationListener(){
    public void hyperlinkUpdate(    @NotNull final Notification notification,    @NotNull final HyperlinkEvent event){
      notification.expire();
      if ("enable".equals(event.getDescription())) {
        CompilerWorkspaceConfiguration.getInstance(project).PARALLEL_COMPILATION=true;
        final NotificationListener listener1=new NotificationListener(){
          public void hyperlinkUpdate(          @NotNull final Notification notification,          @NotNull final HyperlinkEvent event){
            notification.expire();
            ShowSettingsUtil.getInstance().showSettingsDialog(project,CompilerBundle.message("compiler.configurable.display.name"));
          }
        }
;
        new Notification(FLASH_COMPILER_GROUP_ID,FlexBundle.message("parallel.compilation.enabled"),FlexBundle.message("see.settings.compiler"),NotificationType.INFORMATION,listener1).notify(project);
      }
 else       if ("open".equals(event.getDescription())) {
        ShowSettingsUtil.getInstance().showSettingsDialog(project,CompilerBundle.message("compiler.configurable.display.name"));
      }
    }
  }
;
  new Notification(FLASH_COMPILER_GROUP_ID,FlexBundle.message("parallel.compilation.hint.title"),FlexBundle.message("parallel.compilation.hint"),NotificationType.INFORMATION,listener).notify(project);
  myParallelCompilationSuggested=true;
}
