{
  myMode=mode;
  myModule=module;
  myProject=project;
  myNature=nature;
  myDependenciesConfigurable=dependenciesConfigurable;
  myName=myMode == Mode.BC ? FlexBundle.message("compiler.options.title") : myMode == Mode.Module ? FlexBundle.message("default.compiler.options.for.module.title",module.getName()) : FlexBundle.message("default.compiler.options.for.project.title",project.getName());
  myBCManager=myMode == Mode.BC ? FlexBuildConfigurationManager.getInstance(module) : null;
  myProjectLevelOptionsHolder=FlexProjectLevelCompilerOptionsHolder.getInstance(project);
  myModel=model;
  myCurrentOptions=new THashMap<String,String>();
  myShowAllOptionsCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      updateTreeTable();
    }
  }
);
  myInheritModuleDefaultsLegend.setVisible(myMode == Mode.BC);
  myInheritProjectDefaultsLegend.setVisible(myMode == Mode.BC || myMode == Mode.Module);
  myResourcesPanel.setVisible(myMode == Mode.BC && BCUtils.canHaveResourceFiles(myNature));
  myCopyResourceFilesCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      updateResourcesControls();
    }
  }
);
  myResourcePatternsHyperlink.addHyperlinkListener(new HyperlinkAdapter(){
    protected void hyperlinkActivated(    final HyperlinkEvent e){
      ShowSettingsUtil.getInstance().editConfigurable(project,new CompilerUIConfigurable(module.getProject()));
    }
  }
);
  initButtonsAndAdditionalOptions();
  myShowAllOptionsCheckBox.setSelected(true);
  myShowAllOptionsCheckBox.setVisible(false);
}
