{
  Map<Pair<String,Boolean>,DartComponent> result=new THashMap<Pair<String,Boolean>,DartComponent>(computeSuperInterfacesMembersMap(dartClass));
  Map<Pair<String,Boolean>,DartComponent> superClassesMemberMap=new THashMap<Pair<String,Boolean>,DartComponent>(computeSuperClassesMemberMap(dartClass));
  result.keySet().removeAll(superClassesMemberMap.keySet());
  for (  Map.Entry<Pair<String,Boolean>,DartComponent> entry : superClassesMemberMap.entrySet()) {
    final DartComponent component=entry.getValue();
    if (component.isAbstract() && !result.containsKey(entry.getKey())) {
      result.put(entry.getKey(),entry.getValue());
    }
  }
  result.keySet().removeAll(computeClassMembersMap(dartClass,false).keySet());
  candidates.addAll(result.values());
}
