{
  final PsiManager psiManager=PsiManager.getInstance(project);
  final ValidatorManager validatorManager=ValidatorManager.getInstance(project);
  final Set<VirtualFile> files=new HashSet<VirtualFile>();
  for (  final VirtualFile file : context.getCompileScope().getFiles(StdFileTypes.XML,true)) {
    if (file.getName().endsWith("-validation.xml")) {
      final PsiFile psiFile=psiManager.findFile(file);
      if (psiFile instanceof XmlFile && validatorManager.isValidatorsFile((XmlFile)psiFile)) {
        final Module module=ModuleUtil.findModuleForFile(file,project);
        if (module != null && StrutsFacet.getInstance(module) != null) {
          files.add(file);
        }
      }
    }
  }
  final CompileScope scope=context.getCompileScope();
  for (  final Module module : scope.getAffectedModules()) {
    if (StrutsFacet.getInstance(module) != null) {
      final PsiFile psiFile=validatorManager.getValidatorConfigFile(module);
      if (psiFile != null && validatorManager.isCustomValidatorConfigFile(psiFile)) {
        files.add(psiFile.getVirtualFile());
      }
    }
  }
  return files;
}
