{
  if (url.startsWith(DART_PREFIX)) {
    return findFileInDartSdkLibFolder(myProject,myDartSdk,url);
  }
  if (url.startsWith(PACKAGE_PREFIX)) {
    final String packageRelPath=url.substring(PACKAGE_PREFIX.length());
    final int slashIndex=packageRelPath.indexOf('/');
    final String packageName=slashIndex > 0 ? packageRelPath.substring(0,slashIndex) : packageRelPath;
    final String pathRelToPackageDir=slashIndex > 0 ? packageRelPath.substring(slashIndex + 1) : "";
    final VirtualFile packageDir=StringUtil.isEmpty(packageName) ? null : myLivePackageNameToDirMap.get(packageName);
    if (packageDir != null) {
      return packageDir.findFileByRelativePath(pathRelToPackageDir);
    }
    if (myPackageRoot != null) {
      final VirtualFile file=myPackageRoot.findFileByRelativePath(packageRelPath);
      if (file != null) {
        return file;
      }
    }
    final List<String> packageDirs=myPubListPackageDirsMap.get(packageName);
    if (packageDirs != null) {
      for (      String packageDirPath : packageDirs) {
        final VirtualFile file=LocalFileSystem.getInstance().findFileByPath(packageDirPath + "/" + pathRelToPackageDir);
        if (file != null) {
          return file;
        }
      }
    }
  }
  if (url.startsWith(FILE_PREFIX)) {
    final String path=StringUtil.trimLeading(url.substring(FILE_PREFIX.length()),'/');
    return LocalFileSystem.getInstance().findFileByPath(SystemInfo.isWindows ? path : ("/" + path));
  }
  if (ApplicationManager.getApplication().isUnitTestMode() && url.startsWith(TEMP_PREFIX)) {
    return TempFileSystem.getInstance().findFileByPath(url.substring((TEMP_PREFIX).length()));
  }
  return null;
}
