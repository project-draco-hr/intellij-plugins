{
  SdkEntry currentSdk=mySdkPanel.getCurrentSdk();
  if (currentSdk != null) {
    if (myDependencies.getSdk() == null || !currentSdk.isEqual(myDependencies.getSdk()))     return true;
  }
 else {
    if (myDependencies.getSdk() != null)     return true;
  }
  if (myDependencies.COMPONENT_SET != myComponentSetCombo.getSelectedItem())   return true;
  if (myDependencies.FRAMEWORK_LINKAGE != myFrameworkLinkageCombo.getSelectedItem())   return true;
  List<MyTableItem> items=myTable.getItems();
  if (!items.isEmpty() && items.get(0) instanceof SdkItem) {
    items=items.subList(1,items.size());
  }
  List<DependencyEntry> entries=myDependencies.getEntries();
  if (items.size() != entries.size())   return true;
  for (int i=0; i < items.size(); i++) {
    MyTableItem item=items.get(i);
    DependencyEntry entry=entries.get(i);
    if (item instanceof BCItem) {
      if (!(entry instanceof BuildConfigurationEntry)) {
        return true;
      }
      BCItem bcItem=(BCItem)item;
      BuildConfigurationEntry bcEntry=(BuildConfigurationEntry)entry;
      if (bcItem.configurable != null) {
        if (bcItem.configurable.getModifiableRootModel().getModule() != bcEntry.getModule())         return true;
        if (!bcItem.configurable.getDisplayName().equals(bcEntry.getBcName()))         return true;
      }
 else {
        if (bcItem.moduleName.equals(bcEntry.getModuleName()))         return true;
        if (bcItem.bcName.equals(bcEntry.getBcName()))         return true;
      }
      if (!bcItem.dependencyType.isEqual(entry.getDependencyType()))       return true;
    }
 else     if (item instanceof ModuleLibraryItem) {
      if (!(entry instanceof ModuleLibraryEntry)) {
        return true;
      }
      ModuleLibraryItem libraryItem=(ModuleLibraryItem)item;
      ModuleLibraryEntry libraryEntry=(ModuleLibraryEntry)entry;
      if (!libraryEntry.isEqual(libraryItem.libraryEntry)) {
        return true;
      }
      if (!libraryItem.dependencyType.isEqual(entry.getDependencyType()))       return true;
    }
  }
  return false;
}
