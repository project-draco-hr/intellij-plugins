{
  initPopupActions();
  final JBPopup popup=JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<AddItemPopupAction>(FlexBundle.message("add.dependency.popup.title"),myPopupActions){
    @Override public Icon getIconFor(    AddItemPopupAction aValue){
      return aValue.getIcon();
    }
    @Override public boolean hasSubstep(    AddItemPopupAction selectedValue){
      return selectedValue.hasSubStep();
    }
    public boolean isMnemonicsNavigationEnabled(){
      return true;
    }
    public PopupStep onChosen(    final AddItemPopupAction selectedValue,    final boolean finalChoice){
      if (selectedValue.hasSubStep()) {
        return selectedValue.createSubStep();
      }
      return doFinalStep(new Runnable(){
        public void run(){
          selectedValue.run();
        }
      }
);
    }
    @NotNull public String getTextFor(    AddItemPopupAction value){
      return "&" + value.getIndex() + "  "+ value.getTitle();
    }
  }
);
  popup.show(button.getPreferredPopupPoint());
}
