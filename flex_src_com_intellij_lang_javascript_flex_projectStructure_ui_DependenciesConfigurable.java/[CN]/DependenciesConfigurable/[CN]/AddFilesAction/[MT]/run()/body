{
  FileChooserDescriptor d=new FileChooserDescriptor(true,false,true,false,false,true){
    @Override public boolean isFileSelectable(    VirtualFile file){
      return !file.isDirectory() && "swc".equals(FileUtil.getExtension(file.getName()));
    }
  }
;
  d.setTitle("Select Libraries");
  VirtualFile[] files=FileChooser.chooseFiles(myProject,d);
  if (files.length == 0) {
    return;
  }
  DefaultMutableTreeNode rootNode=myTable.getRoot();
  for (  VirtualFile file : files) {
    ModuleLibraryEntry e=new ModuleLibraryEntry();
    e.setName(file.getName());
    e.addRoot(OrderRootType.CLASSES,file);
    rootNode.add(new DefaultMutableTreeNode(new ModuleLibraryItem(e),false));
  }
  myTable.refresh();
  myTable.getSelectionModel().clearSelection();
  int rowCount=myTable.getRowCount();
  myTable.getSelectionModel().addSelectionInterval(rowCount - files.length,rowCount - 1);
}
