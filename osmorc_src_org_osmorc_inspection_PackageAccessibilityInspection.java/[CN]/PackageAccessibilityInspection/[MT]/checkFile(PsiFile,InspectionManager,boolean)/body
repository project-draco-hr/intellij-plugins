{
  if (!checkTests && ProjectRootsUtil.isInTestSource(file)) {
    return null;
  }
  final OsmorcFacet facet=OsmorcFacet.getInstance(file);
  if (facet == null) {
    return null;
  }
  final List<ProblemDescriptor> problems=ContainerUtil.newSmartList();
  DependenciesBuilder.analyzeFileDependencies(file,new DependenciesBuilder.DependencyProcessor(){
    @Override public void process(    PsiElement place,    PsiElement dependency){
      if (dependency instanceof PsiClass) {
        Problem problem=checkAccessibility((PsiClass)dependency,facet);
        if (problem != null) {
          problems.add(manager.createProblemDescriptor(place,problem.message,isOnTheFly,problem.fixes,problem.type));
        }
      }
    }
  }
,DependencyVisitorFactory.VisitorOptions.SKIP_IMPORTS);
  return problems.isEmpty() ? null : problems.toArray(new ProblemDescriptor[problems.size()]);
}
