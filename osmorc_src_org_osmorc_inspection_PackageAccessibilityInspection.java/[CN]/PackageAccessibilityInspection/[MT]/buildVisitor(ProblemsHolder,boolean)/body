{
  boolean check=checkTests || !ProjectRootsUtil.isInTestSource(holder.getFile());
  return !check ? PsiElementVisitor.EMPTY_VISITOR : new JavaElementVisitor(){
    @Override public void visitReferenceElement(    PsiJavaCodeReferenceElement reference){
      checkReference(reference);
    }
    @Override public void visitImportStaticReferenceElement(    PsiImportStaticReferenceElement reference){
      checkReference(reference);
    }
    @Override public void visitReferenceExpression(    PsiReferenceExpression expression){
      checkReference(expression);
    }
    private void checkReference(    PsiJavaCodeReferenceElement ref){
      OsmorcFacet facet=OsmorcFacet.getInstance(ref);
      if (facet != null) {
        PsiElement target=ref.resolve();
        if (target instanceof PsiClass) {
          String toImport=checkAccessibility((PsiClass)target,facet);
          if (toImport == NOT_EXPORTED) {
            holder.registerProblem(ref,OsmorcBundle.message("WrongImportPackageInspection.message"));
          }
 else           if (toImport != null) {
            LocalQuickFix fix=new ImportPackageFix(toImport);
            holder.registerProblem(ref,OsmorcBundle.message("PackageAccessibilityInspection.message"),fix);
          }
        }
      }
    }
  }
;
}
