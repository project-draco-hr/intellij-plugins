{
  if (DartSdkGlobalLibUtil.isIdeWithMultipleModuleSupport()) {
    myCustomPackageRootsCheckBox.setVisible(false);
    myCustomPackageRootTextWithBrowse.setVisible(false);
    return;
  }
  myCustomPackageRootsCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final boolean enabled=myCustomPackageRootsCheckBox.isSelected() && myCustomPackageRootsCheckBox.isEnabled();
      myCustomPackageRootTextWithBrowse.setEnabled(enabled);
      updateErrorLabel();
      if (enabled) {
        IdeFocusManager.getInstance(myProject).requestFocus(myCustomPackageRootTextWithBrowse.getTextField(),true);
      }
    }
  }
);
  final ComponentWithBrowseButton.BrowseFolderActionListener<JTextField> bfListener=new ComponentWithBrowseButton.BrowseFolderActionListener<JTextField>(DartBundle.message("select.custom.package.roots"),null,myCustomPackageRootTextWithBrowse,myProject,FileChooserDescriptorFactory.createSingleFolderDescriptor(),TextComponentAccessor.TEXT_FIELD_WHOLE_TEXT){
    public void actionPerformed(    final ActionEvent e){
      selectCustomPackageRoots(myCustomPackageRootTextWithBrowse.getTextField());
    }
  }
;
  myCustomPackageRootTextWithBrowse.addBrowseFolderListener(myProject,bfListener);
  myCustomPackageRootTextWithBrowse.getTextField().getDocument().addDocumentListener(new DocumentAdapter(){
    protected void textChanged(    final DocumentEvent e){
      final Module module=myModuleToCustomPackageRootCurrent.keySet().iterator().next();
      final String customPackageRoot=FileUtil.toSystemIndependentName(myCustomPackageRootTextWithBrowse.getText().trim());
      myModuleToCustomPackageRootCurrent.put(module,customPackageRoot);
      updateErrorLabel();
    }
  }
);
}
