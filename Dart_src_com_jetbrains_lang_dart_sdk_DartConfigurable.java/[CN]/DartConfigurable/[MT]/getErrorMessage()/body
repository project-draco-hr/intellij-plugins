{
  if (!myEnableDartSupportCheckBox.isSelected()) {
    return null;
  }
  String message=DartSdkUtil.getErrorMessageIfWrongSdkRootPath(mySdkPathTextWithBrowse.getText().trim());
  if (message != null)   return message;
  message=DartiumUtil.getErrorMessageIfWrongDartiumPath(myDartiumPathTextWithBrowse.getText().trim());
  if (message != null)   return message;
  if (DartSdkGlobalLibUtil.isIdeWithMultipleModuleSupport()) {
    final Module[] modules=myModulesCheckboxTreeTable.getCheckedNodes(Module.class);
    if (modules.length == 0) {
      return DartBundle.message("warning.no.modules.selected.dart.support.will.be.disabled");
    }
    for (    final Module module : modules) {
      final String customPackageRoot=myModuleToCustomPackageRootCurrent.get(module);
      final String customPackagePathError=getErrorMessageForCustomPackageRoots(customPackageRoot);
      if (customPackagePathError != null) {
        return customPackagePathError;
      }
    }
  }
 else {
    if (myCustomPackageRootsCheckBox.isSelected()) {
      final String customPackageRoots=myModuleToCustomPackageRootCurrent.entrySet().iterator().next().getValue();
      if (customPackageRoots.isEmpty()) {
        return DartBundle.message("warning.custom.package.root.not.specified");
      }
      final String customPackagePathError=getErrorMessageForCustomPackageRoots(customPackageRoots);
      if (customPackagePathError != null) {
        return customPackagePathError;
      }
    }
  }
  return null;
}
