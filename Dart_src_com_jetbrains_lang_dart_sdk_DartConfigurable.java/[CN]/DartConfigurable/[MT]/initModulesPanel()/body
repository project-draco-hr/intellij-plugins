{
  if (!DartSdkGlobalLibUtil.isIdeWithMultipleModuleSupport()) {
    myModulesPanel.setVisible(false);
    return;
  }
  final Module[] modules=ModuleManager.getInstance(myProject).getModules();
  Arrays.sort(modules,new Comparator<Module>(){
    @Override public int compare(    final Module module1,    final Module module2){
      return module1.getName().toLowerCase().compareTo(module2.getName().toLowerCase());
    }
  }
);
  final CheckedTreeNode rootNode=new CheckedTreeNode(myProject);
  ((DefaultTreeModel)myModulesCheckboxTreeTable.getTree().getModel()).setRoot(rootNode);
  myModulesCheckboxTreeTable.getTree().setRootVisible(true);
  myModulesCheckboxTreeTable.getTree().setShowsRootHandles(false);
  for (  final Module module : modules) {
    rootNode.add(new CheckedTreeNode(module));
  }
  ((DefaultTreeModel)myModulesCheckboxTreeTable.getTree().getModel()).reload(rootNode);
}
