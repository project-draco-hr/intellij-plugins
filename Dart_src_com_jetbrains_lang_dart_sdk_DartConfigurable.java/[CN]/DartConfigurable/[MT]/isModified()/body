{
  final String sdkHomePath=FileUtilRt.toSystemIndependentName(mySdkPathTextWithBrowse.getText().trim());
  final boolean sdkSelected=DartSdkUtil.isDartSdkHome(sdkHomePath);
  if (!myDartSupportEnabledInitial && (!myEnableDartSupportCheckBox.isSelected() || !sdkSelected))   return false;
  if (myDartSupportEnabledInitial && !myEnableDartSupportCheckBox.isSelected())   return true;
  final String initialSdkHomePath=mySdkInitial == null ? "" : mySdkInitial.getHomePath();
  if (sdkSelected && !sdkHomePath.equals(initialSdkHomePath))   return true;
  final DartSdkUpdateOption sdkUpdateOption=myCheckSdkUpdateCheckBox.isSelected() ? (DartSdkUpdateOption)mySdkUpdateChannelCombo.getSelectedItem() : DartSdkUpdateOption.DoNotCheck;
  if (sdkUpdateOption != DartSdkUpdateOption.getDartSdkUpdateOption())   return true;
  final String dartiumPath=FileUtilRt.toSystemIndependentName(myDartiumPathTextWithBrowse.getText().trim());
  final String dartiumPathInitial=myDartiumInitial == null ? null : myDartiumInitial.getPath();
  if (!dartiumPath.isEmpty() && new File(dartiumPath).exists() && !dartiumPath.equals(dartiumPathInitial))   return true;
  if (myDartiumInitial != null && !myDartiumSettingsCurrent.equals(myDartiumInitial.getSpecificSettings()))   return true;
  if (DartSdkGlobalLibUtil.isIdeWithMultipleModuleSupport()) {
    final Module[] selectedModules=myModulesCheckboxTreeTable.getCheckedNodes(Module.class);
    if (selectedModules.length != myModulesWithDartSdkLibAttachedInitial.size())     return true;
    for (    final Module module : selectedModules) {
      if (!myModulesWithDartSdkLibAttachedInitial.contains(module))       return true;
      final String currentPackageRootPath=myModuleToCustomPackageRootCurrent.get(module);
      if (!Comparing.equal(getCustomPackageRootPath(module),currentPackageRootPath))       return true;
    }
  }
 else {
    if (myDartSupportEnabledInitial != myEnableDartSupportCheckBox.isSelected())     return true;
    final Map.Entry<Module,String> entry=myModuleToCustomPackageRootCurrent.entrySet().iterator().next();
    final String currentPackageRootPath=myCustomPackageRootsCheckBox.isSelected() ? entry.getValue() : null;
    if (!Comparing.equal(currentPackageRootPath,getCustomPackageRootPath(entry.getKey())))     return true;
  }
  return false;
}
