{
  final String currentSdkVersion=myVersionLabel.getText();
  final DartSdkUpdateChecker.SdkUpdateInfo sdkUpdateInfo=DartSdkUpdateChecker.getSdkUpdateInfo((DartSdkUpdateOption)mySdkUpdateChannelCombo.getSelectedItem());
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      if (sdkUpdateInfo == null) {
        Messages.showErrorDialog(myProject,DartBundle.message("dart.sdk.update.check.failed"),DartBundle.message("dart.sdk.update.title"));
      }
 else {
        final String message;
        if (currentSdkVersion.isEmpty()) {
          message=DartBundle.message("dart.sdk.0.available.for.download",sdkUpdateInfo.myVersion,sdkUpdateInfo.myDownloadUrl);
        }
 else         if (DartSdkUpdateChecker.compareDartSdkVersions(currentSdkVersion,sdkUpdateInfo.myVersion) >= 0) {
          message=DartBundle.message("dart.sdk.0.is.up.to.date",currentSdkVersion);
        }
 else {
          message=DartBundle.message("new.dart.sdk.0.available.for.download..dialog",sdkUpdateInfo.myVersion,sdkUpdateInfo.myDownloadUrl);
        }
        Messages.showInfoMessage(myProject,message,DartBundle.message("dart.sdk.update.title"));
      }
    }
  }
,ModalityState.defaultModalityState(),myProject.getDisposed());
}
