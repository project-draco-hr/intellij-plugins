{
  final NamesValidator namesValidator=LanguageNamesValidation.INSTANCE.forLanguage(JavaScriptSupportLoader.JAVASCRIPT.getLanguage());
  final String packageName=getPackageName();
  for (  final String s : StringUtil.split(packageName,".")) {
    if (!namesValidator.isIdentifier(s,null)) {
      setErrorText(FlexBundle.message("invalid.package",packageName));
      return;
    }
  }
  myHostComponentCombo.updateRecents();
  myPackageCombo.updateRecents();
  final Pair<PsiDirectory,GlobalSearchScope> baseDirAndScope=getPackageScope();
  myTargetDirectory=JSRefactoringUtil.chooseOrCreateDirectoryForClass(myModule.getProject(),myModule,baseDirAndScope.second,packageName,null,baseDirAndScope.first,ThreeState.UNSURE);
  if (myTargetDirectory != null) {
    super.doOKAction();
  }
}
