{
  return new Runnable(){
    public void run(){
      final CompositeConfigurable compositeConfigurable=myConfigurablesMap.get(bc);
      final BuildConfigurationNature oldNature=bc.getNature();
      final AddBuildConfigurationDialog dialog=new AddBuildConfigurationDialog(myConfigEditor.getProject(),FlexBundle.message("change.bc.type.title"),Collections.<String>emptyList(),oldNature,false);
      dialog.reset(bc.getName(),bc.getAndroidPackagingOptions().isEnabled(),bc.getIosPackagingOptions().isEnabled());
      if (!dialog.showAndGet()) {
        return;
      }
      final BuildConfigurationNature newNature=dialog.getNature();
      if (newNature.equals(oldNature)) {
        if (newNature.isApp() && newNature.isMobilePlatform()) {
          bc.getAndroidPackagingOptions().setEnabled(dialog.isAndroidEnabled());
          bc.getIosPackagingOptions().setEnabled(dialog.isIOSEnabled());
          compositeConfigurable.reset();
        }
        return;
      }
      bc.setNature(newNature);
      fixOutputFileExtension(bc);
      if (newNature.targetPlatform != oldNature.targetPlatform || newNature.outputType != oldNature.outputType) {
        updatePackageFileName(bc,PathUtil.suggestFileName(bc.getName()));
      }
      if (newNature.isApp() && newNature.isMobilePlatform()) {
        bc.getAndroidPackagingOptions().setEnabled(dialog.isAndroidEnabled());
        bc.getIosPackagingOptions().setEnabled(dialog.isIOSEnabled());
      }
      FlexProjectConfigurationEditor.resetNonApplicableValuesToDefaults(bc);
      final FlexBCConfigurable bcConfigurable=FlexBCConfigurable.unwrap(compositeConfigurable);
      bcConfigurable.createChildConfigurables();
      bcConfigurable.updateTabs(compositeConfigurable);
      compositeConfigurable.reset();
      myEventDispatcher.getMulticaster().natureChanged(bcConfigurable);
    }
  }
;
}
