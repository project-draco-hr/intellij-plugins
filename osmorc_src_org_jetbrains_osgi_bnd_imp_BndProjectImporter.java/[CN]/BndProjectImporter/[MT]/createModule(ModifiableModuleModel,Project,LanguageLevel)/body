{
  String name=project.getName();
  Module module=moduleModel.findModuleByName(name);
  if (module == null) {
    String path=project.getBase().getPath() + File.separator + name+ ModuleFileType.DOT_DEFAULT_EXTENSION;
    module=moduleModel.newModule(path,StdModuleTypes.JAVA.getId());
  }
  ModifiableRootModel rootModel=ModuleRootManager.getInstance(module).getModifiableModel();
  for (  ContentEntry entry : rootModel.getContentEntries()) {
    rootModel.removeContentEntry(entry);
  }
  for (  OrderEntry entry : rootModel.getOrderEntries()) {
    if (!(entry instanceof ModuleJdkOrderEntry || entry instanceof ModuleSourceOrderEntry)) {
      rootModel.removeOrderEntry(entry);
    }
  }
  rootModel.inheritSdk();
  ContentEntry contentEntry=rootModel.addContentEntry(url(project.getBase()));
  for (  File src : project.getSourcePath()) {
    contentEntry.addSourceFolder(url(src),false);
  }
  File testSrc=project.getTestSrc();
  if (testSrc != null) {
    contentEntry.addSourceFolder(url(testSrc),true);
  }
  contentEntry.addExcludeFolder(url(project.getTarget()));
  LanguageLevel sourceLevel=LanguageLevel.parse(project.getProperty(JAVAC_SOURCE));
  if (sourceLevel == projectLevel)   sourceLevel=null;
  rootModel.getModuleExtension(LanguageLevelModuleExtension.class).setLanguageLevel(sourceLevel);
  CompilerModuleExtension compilerExt=rootModel.getModuleExtension(CompilerModuleExtension.class);
  compilerExt.inheritCompilerOutputPath(false);
  compilerExt.setExcludeOutput(true);
  compilerExt.setCompilerOutputPath(url(project.getSrcOutput()));
  compilerExt.setCompilerOutputPathForTests(url(project.getTestOutput()));
  String targetLevel=project.getProperty(JAVAC_TARGET);
  CompilerConfiguration.getInstance(myProject).setBytecodeTargetLevel(module,targetLevel);
  OsmorcFacet facet=OsmorcFacet.getInstance(module);
  if (project.isNoBundles() && facet != null) {
    FacetUtil.deleteFacet(facet);
    facet=null;
  }
 else   if (!project.isNoBundles() && facet == null) {
    facet=FacetUtil.addFacet(module,OsmorcFacetType.getInstance());
  }
  if (facet != null) {
    OsmorcFacetConfiguration facetConfig=facet.getConfiguration();
    facetConfig.setManifestGenerationMode(ManifestGenerationMode.Bnd);
    facetConfig.setBndFileLocation(FileUtil.getRelativePath(path(project.getBase()),path(project.getPropertiesFile()),'/'));
    Map.Entry<String,Attrs> bsn=project.getBundleSymbolicName();
    File bundle=project.getOutputFile(bsn != null ? bsn.getKey() : name,project.getBundleVersion());
    facetConfig.setJarFileLocation(path(bundle),OutputPathType.SpecificOutputPath);
    facetConfig.setDoNotSynchronizeWithMaven(true);
  }
  return rootModel;
}
