{
  if (isRunOnDevice(flexRunnerParameters)) {
    final AirMobileRunnerParameters mobileParams=(AirMobileRunnerParameters)flexRunnerParameters;
    final String appId;
    if (mobileParams.getAirMobileRunMode() == AirMobileRunnerParameters.AirMobileRunMode.ExistingPackage) {
      appId=MobileAirUtil.getAppIdFromPackage(mobileParams.getExistingPackagePath());
      if (appId == null) {
        throw new ExecutionException("Failed to get application id for package: " + mobileParams.getExistingPackagePath());
      }
      if (!installToDevice(project,flexSdk,mobileParams,appId)) {
        return null;
      }
    }
 else {
      final Pair<String,String> swfPathAndApplicationId=getSwfPathAndApplicationId(mobileParams);
      appId=swfPathAndApplicationId.second;
      final Module module=ModuleManager.getInstance(project).findModuleByName(mobileParams.getModuleName());
      final MobileAirPackageParameters packageParameters=createAndroidPackageParams(flexSdk,swfPathAndApplicationId.first,mobileParams,true);
      if (!packAndInstallToAndroidDevice(module,flexSdk,packageParameters,swfPathAndApplicationId.second,true)) {
        return null;
      }
    }
    if (mobileParams.getDebugTransport() == AirMobileDebugTransport.USB) {
      launchOnAndroidDevice(project,flexSdk,appId,true);
      waitUntilCountdownStartsOnDevice(project,appId);
      MobileAirUtil.forwardTcpPort(project,flexSdk,mobileParams.getUsbDebugPort());
    }
  }
  final XDebugSession debugSession=XDebuggerManager.getInstance(project).startSession(this,env,contentToReuse,new XDebugProcessStarter(){
    @NotNull public XDebugProcess start(    @NotNull final XDebugSession session) throws ExecutionException {
      try {
        return new FlexDebugProcess(session,flexSdk,flexRunnerParameters){
          @NotNull @Override public ExecutionConsole createConsole(){
            if (flexRunnerParameters instanceof FlexUnitRunnerParameters) {
              try {
                return createFlexUnitRunnerConsole(project,env,getProcessHandler(),executor);
              }
 catch (              ExecutionException e) {
                LOG.error(e);
              }
            }
            return super.createConsole();
          }
        }
;
      }
 catch (      IOException e) {
        throw new ExecutionException(e.getMessage(),e);
      }
    }
  }
);
  return debugSession.getRunContentDescriptor();
}
