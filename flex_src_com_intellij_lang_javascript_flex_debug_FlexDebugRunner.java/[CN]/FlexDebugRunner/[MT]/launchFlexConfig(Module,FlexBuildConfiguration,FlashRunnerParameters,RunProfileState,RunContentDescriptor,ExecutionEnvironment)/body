{
  final Project project=module.getProject();
  if (bc.getTargetPlatform() == TargetPlatform.Mobile) {
    final Sdk sdk=bc.getSdk();
switch (runnerParameters.getMobileRunTarget()) {
case Emulator:
      break;
case AndroidDevice:
    final String androidDescriptorPath=getAirDescriptorPath(bc,bc.getAndroidPackagingOptions());
  final String androidAppId=getApplicationId(androidDescriptorPath);
if (androidAppId == null) {
  Messages.showErrorDialog(project,FlexBundle.message("failed.to.read.app.id",FileUtil.toSystemDependentName(androidDescriptorPath)),FlexBundle.message("error.title"));
  return null;
}
if (!packAndInstallToAndroidDevice(module,bc,runnerParameters,androidAppId,true)) {
return null;
}
if (runnerParameters.getDebugTransport() == AirMobileDebugTransport.USB) {
if (!AirPackageUtil.androidForwardTcpPort(project,sdk,runnerParameters.getDeviceInfo(),runnerParameters.getUsbDebugPort())) {
return null;
}
}
break;
case iOSSimulator:
final String adtVersionSimulator=AirPackageUtil.getAdtVersion(module.getProject(),bc.getSdk());
final String iosSimulatorDescriptorPath=getAirDescriptorPath(bc,bc.getIosPackagingOptions());
final String iosSimulatorAppId=getApplicationId(iosSimulatorDescriptorPath);
if (iosSimulatorAppId == null) {
Messages.showErrorDialog(project,FlexBundle.message("failed.to.read.app.id",FileUtil.toSystemDependentName(iosSimulatorDescriptorPath)),FlexBundle.message("error.title"));
return null;
}
if (!packAndInstallToIOSSimulator(module,bc,runnerParameters,adtVersionSimulator,iosSimulatorAppId,true)) {
return null;
}
break;
case iOSDevice:
final String adtVersion=AirPackageUtil.getAdtVersion(module.getProject(),bc.getSdk());
if (StringUtil.compareVersionNumbers(adtVersion,"3.4") >= 0) {
if (!packAndInstallToIOSDevice(module,bc,runnerParameters,adtVersion,true)) {
return null;
}
if (runnerParameters.getDebugTransport() == AirMobileDebugTransport.USB) {
final DeviceInfo device=runnerParameters.getDeviceInfo();
final int deviceHandle=device == null ? -1 : device.IOS_HANDLE;
if (deviceHandle < 0) {
return null;
}
if (!AirPackageUtil.iosForwardTcpPort(project,sdk,runnerParameters.getUsbDebugPort(),deviceHandle)) {
return null;
}
}
}
 else {
if (!AirPackageUtil.packageIpaForDevice(module,bc,runnerParameters,adtVersion,true)) {
return null;
}
}
break;
}
}
return launchDebugProcess(module,bc,runnerParameters,env);
}
