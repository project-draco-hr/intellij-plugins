{
  DartMethodDeclaration method=getMethod(dartClass,false);
  if (method != null) {
    if (method.isAbstract()) {
      return null;
    }
    return AllIcons.Hierarchy.MethodDefined;
  }
  if (myTreeStructure.isSuperClassForBaseClass(dartClass)) {
    return AllIcons.Hierarchy.MethodNotDefined;
  }
  final boolean isAbstractClass=dartClass.isAbstract();
  final DartMethodDeclaration baseClassMethod=getMethod(dartClass,true);
  final boolean hasBaseImplementation=baseClassMethod != null && !baseClassMethod.isAbstract();
  if (hasBaseImplementation || isAbstractClass) {
    return AllIcons.Hierarchy.MethodNotDefined;
  }
 else {
    return AllIcons.Hierarchy.ShouldDefineMethod;
  }
}
