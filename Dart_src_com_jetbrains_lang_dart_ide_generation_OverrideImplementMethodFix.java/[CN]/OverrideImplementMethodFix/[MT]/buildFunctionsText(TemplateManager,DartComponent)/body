{
  final Template template=templateManager.createTemplate(getClass().getName(),DART_TEMPLATE_GROUP);
  template.setToReformat(true);
  if (CodeStyleSettingsManager.getSettings(element.getProject()).INSERT_OVERRIDE_ANNOTATION) {
    template.addTextSegment("@override\n");
  }
  final boolean isField=element instanceof DartVarAccessDeclaration || element instanceof DartVarDeclarationListPart;
  if (isField && element.isFinal()) {
    template.addTextSegment("final");
    template.addTextSegment(" ");
  }
  final DartReturnType returnType=PsiTreeUtil.getChildOfType(element,DartReturnType.class);
  final DartType dartType=PsiTreeUtil.getChildOfType(element,DartType.class);
  if (returnType != null) {
    template.addTextSegment(DartPresentableUtil.buildTypeText(element,returnType,specializations));
    template.addTextSegment(" ");
  }
 else   if (dartType != null) {
    template.addTextSegment(DartPresentableUtil.buildTypeText(element,dartType,specializations));
    template.addTextSegment(" ");
  }
  if (isField) {
    if (returnType == null && dartType == null) {
      template.addTextSegment("var");
      template.addTextSegment(" ");
    }
    template.addTextSegment(element.getName());
    if (element.isFinal()) {
      template.addTextSegment(" ");
      template.addTextSegment("=");
      template.addTextSegment(" ");
      template.addTextSegment("null");
    }
    template.addTextSegment("; ");
    return template;
  }
  if (element.isOperator()) {
    template.addTextSegment("operator ");
  }
  if (element.isGetter() || element.isSetter()) {
    template.addTextSegment(element.isGetter() ? "get " : "set ");
  }
  template.addTextSegment(element.getName());
  if (!element.isGetter()) {
    template.addTextSegment("(");
    template.addTextSegment(DartPresentableUtil.getPresentableParameterList(element,specializations,false,true,true));
    template.addTextSegment(")");
  }
  template.addTextSegment("{\n");
  template.addEndVariable();
  template.addTextSegment("\n} ");
  return template;
}
