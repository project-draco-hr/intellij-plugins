{
  final String device=packagingOptions instanceof AndroidPackagingOptions ? "Android" : packagingOptions instanceof IosPackagingOptions ? "iOS" : "";
  if (packagingOptions.getPackageFileName().isEmpty()) {
    throw new ConfigurationException(FlexBundle.message("package.file.name.not.set",device));
  }
  for (  FilePathAndPathInPackage entry : packagingOptions.getFilesToPackage()) {
    final String fullPath=entry.FILE_PATH;
    String relPathInPackage=entry.PATH_IN_PACKAGE;
    if (relPathInPackage.startsWith("/")) {
      relPathInPackage=relPathInPackage.substring(1);
    }
    if (fullPath.isEmpty()) {
      throw new ConfigurationException(FlexBundle.message("packaging.options.empty.file.name",device));
    }
    final VirtualFile file=LocalFileSystem.getInstance().findFileByPath(fullPath);
    if (file == null) {
      throw new ConfigurationException(FlexBundle.message("packaging.options.file.not.found",device,FileUtil.toSystemDependentName(fullPath)));
    }
    if (relPathInPackage.length() == 0) {
      throw new ConfigurationException(FlexBundle.message("packaging.options.empty.relative.path",device));
    }
    if (file.isDirectory() && !fullPath.endsWith("/" + relPathInPackage)) {
      throw new ConfigurationException(FlexBundle.message("packaging.options.relative.path.not.matches",device,FileUtil.toSystemDependentName(relPathInPackage)));
    }
  }
  final AirSigningOptions signingOptions=packagingOptions.getSigningOptions();
  if (packagingOptions instanceof IosPackagingOptions) {
    final String provisioningProfilePath=signingOptions.getProvisioningProfilePath();
    if (provisioningProfilePath.isEmpty()) {
      throw new ConfigurationException(FlexBundle.message("ios.provisioning.profile.not.set"));
    }
    final VirtualFile provisioningProfile=LocalFileSystem.getInstance().findFileByPath(provisioningProfilePath);
    if (provisioningProfile == null || provisioningProfile.isDirectory()) {
      throw new ConfigurationException(FlexBundle.message("ios.provisioning.profile.not.found",FileUtil.toSystemDependentName(provisioningProfilePath)));
    }
  }
  final boolean tempCertificate=!(packagingOptions instanceof IosPackagingOptions) && signingOptions.isUseTempCertificate();
  if (!tempCertificate) {
    final String keystorePath=signingOptions.getKeystorePath();
    if (keystorePath.isEmpty()) {
      throw new ConfigurationException(FlexBundle.message("keystore.not.set",device));
    }
    final VirtualFile keystore=LocalFileSystem.getInstance().findFileByPath(keystorePath);
    if (keystore == null || keystore.isDirectory()) {
      throw new ConfigurationException(FlexBundle.message("keystore.not.found",device,FileUtil.toSystemDependentName(keystorePath)));
    }
  }
}
