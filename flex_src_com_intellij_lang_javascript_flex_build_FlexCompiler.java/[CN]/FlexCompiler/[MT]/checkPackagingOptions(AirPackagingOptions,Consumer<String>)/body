{
  final String device=packagingOptions instanceof AndroidPackagingOptions ? "Android" : packagingOptions instanceof IosPackagingOptions ? "iOS" : "";
  if (!packagingOptions.isUseGeneratedDescriptor()) {
    if (packagingOptions.getCustomDescriptorPath().isEmpty()) {
      errorConsumer.consume(FlexBundle.message("custom.descriptor.not.set",device));
    }
 else {
      final VirtualFile descriptorFile=LocalFileSystem.getInstance().findFileByPath(packagingOptions.getCustomDescriptorPath());
      if (descriptorFile == null || descriptorFile.isDirectory()) {
        errorConsumer.consume(FlexBundle.message("custom.descriptor.not.found",device,FileUtil.toSystemDependentName(packagingOptions.getCustomDescriptorPath())));
      }
    }
  }
  if (packagingOptions.getPackageFileName().isEmpty()) {
    errorConsumer.consume(FlexBundle.message("package.file.name.not.set",device));
  }
  for (  FilePathAndPathInPackage entry : packagingOptions.getFilesToPackage()) {
    final String fullPath=entry.FILE_PATH;
    String relPathInPackage=entry.PATH_IN_PACKAGE;
    if (relPathInPackage.startsWith("/")) {
      relPathInPackage=relPathInPackage.substring(1);
    }
    if (fullPath.isEmpty()) {
      errorConsumer.consume(FlexBundle.message("packaging.options.empty.file.name",device));
    }
 else {
      final VirtualFile file=LocalFileSystem.getInstance().findFileByPath(fullPath);
      if (file == null) {
        errorConsumer.consume(FlexBundle.message("packaging.options.file.not.found",device,FileUtil.toSystemDependentName(fullPath)));
      }
      if (relPathInPackage.length() == 0) {
        errorConsumer.consume(FlexBundle.message("packaging.options.empty.relative.path",device));
      }
      if (file != null && file.isDirectory() && !fullPath.endsWith("/" + relPathInPackage)) {
        errorConsumer.consume(FlexBundle.message("packaging.options.relative.path.not.matches",device,FileUtil.toSystemDependentName(relPathInPackage)));
      }
    }
  }
  final AirSigningOptions signingOptions=packagingOptions.getSigningOptions();
  if (packagingOptions instanceof IosPackagingOptions) {
    final String provisioningProfilePath=signingOptions.getProvisioningProfilePath();
    if (provisioningProfilePath.isEmpty()) {
      errorConsumer.consume(FlexBundle.message("ios.provisioning.profile.not.set"));
    }
 else {
      final VirtualFile provisioningProfile=LocalFileSystem.getInstance().findFileByPath(provisioningProfilePath);
      if (provisioningProfile == null || provisioningProfile.isDirectory()) {
        errorConsumer.consume(FlexBundle.message("ios.provisioning.profile.not.found",FileUtil.toSystemDependentName(provisioningProfilePath)));
      }
    }
  }
  final boolean tempCertificate=!(packagingOptions instanceof IosPackagingOptions) && signingOptions.isUseTempCertificate();
  if (!tempCertificate) {
    final String keystorePath=signingOptions.getKeystorePath();
    if (keystorePath.isEmpty()) {
      errorConsumer.consume(FlexBundle.message("keystore.not.set",device));
    }
 else {
      final VirtualFile keystore=LocalFileSystem.getInstance().findFileByPath(keystorePath);
      if (keystore == null || keystore.isDirectory()) {
        errorConsumer.consume(FlexBundle.message("keystore.not.found",device,FileUtil.toSystemDependentName(keystorePath)));
      }
    }
  }
}
