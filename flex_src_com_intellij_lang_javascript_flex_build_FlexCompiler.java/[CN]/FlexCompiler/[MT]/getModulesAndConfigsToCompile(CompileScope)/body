{
  final RunConfiguration runConfiguration=CompileStepBeforeRun.getRunConfiguration(scope);
  final Collection<Pair<Module,FlexIdeBuildConfiguration>> result=new HashSet<Pair<Module,FlexIdeBuildConfiguration>>();
  final BCBasedRunnerParameters params=runConfiguration instanceof FlashRunConfiguration ? ((FlashRunConfiguration)runConfiguration).getRunnerParameters() : ((NewFlexUnitRunConfiguration)runConfiguration).getRunnerParameters();
  final Pair<Module,FlexIdeBuildConfiguration> moduleAndConfig;
  final Ref<RuntimeConfigurationError> exceptionRef=new Ref<RuntimeConfigurationError>();
  moduleAndConfig=ApplicationManager.getApplication().runReadAction(new NullableComputable<Pair<Module,FlexIdeBuildConfiguration>>(){
    public Pair<Module,FlexIdeBuildConfiguration> compute(){
      try {
        return params.checkAndGetModuleAndBC(runConfiguration.getProject());
      }
 catch (      RuntimeConfigurationError e) {
        exceptionRef.set(e);
        return null;
      }
    }
  }
);
  if (!exceptionRef.isNull()) {
    throw new ConfigurationException(exceptionRef.get().getMessage(),FlexBundle.message("run.configuration.0",runConfiguration.getName()));
  }
  if (!moduleAndConfig.second.isSkipCompile()) {
    result.add(moduleAndConfig);
    appendBCDependencies(result,moduleAndConfig.first,moduleAndConfig.second);
  }
  return result;
}
