{
  saveProject(context.getProject());
  final List<ProcessingItem> itemList=new ArrayList<ProcessingItem>();
  if (PlatformUtils.isFlexIde()) {
    try {
      for (      final Pair<Module,FlexIdeBuildConfiguration> moduleAndConfig : getModulesAndConfigsToCompile(context.getCompileScope())) {
        itemList.add(new MyProcessingItem(moduleAndConfig.first,moduleAndConfig.second));
      }
    }
 catch (    ConfigurationException e) {
      throw new RuntimeException(e);
    }
    if (!itemList.isEmpty() && context.isRebuild()) {
      final FlexCompilerHandler flexCompilerHandler=FlexCompilerHandler.getInstance(context.getProject());
      flexCompilerHandler.quitCompilerShell();
      flexCompilerHandler.getCompilerDependenciesCache().clear();
    }
    return itemList.toArray(new ProcessingItem[itemList.size()]);
  }
  for (  final Module module : context.getCompileScope().getAffectedModules()) {
    for (    final FlexBuildConfiguration config : FlexBuildConfiguration.getConfigForFlexModuleOrItsFlexFacets(module)) {
      if (config.DO_BUILD) {
        itemList.add(new MyProcessingItem(module));
        break;
      }
    }
  }
  final ProcessingItem[] items=itemList.toArray(new ProcessingItem[itemList.size()]);
  if (items.length > 0 && context.isRebuild()) {
    final FlexCompilerHandler flexCompilerHandler=FlexCompilerHandler.getInstance(context.getProject());
    flexCompilerHandler.quitCompilerShell();
    flexCompilerHandler.getCompilerDependenciesCache().clear();
  }
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      Arrays.sort(items,new Comparator<ProcessingItem>(){
        final Comparator<Module> moduleComparator=ModuleManager.getInstance(context.getProject()).moduleDependencyComparator();
        public int compare(        final ProcessingItem o1,        final ProcessingItem o2){
          return moduleComparator.compare(((MyProcessingItem)o1).myModule,((MyProcessingItem)o2).myModule);
        }
      }
);
    }
  }
);
  return items;
}
