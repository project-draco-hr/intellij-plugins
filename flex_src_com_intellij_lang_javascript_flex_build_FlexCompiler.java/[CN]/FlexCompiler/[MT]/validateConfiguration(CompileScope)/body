{
  final Module[] modules=scope.getAffectedModules();
  final Project project=modules.length > 0 ? modules[0].getProject() : null;
  if (project == null)   return true;
  final Collection<Pair<Module,FlexBuildConfiguration>> modulesAndBCsToCompile;
  try {
    modulesAndBCsToCompile=getModulesAndBCsToCompile(scope);
  }
 catch (  ConfigurationException e) {
    Messages.showErrorDialog(project,e.getMessage(),FlexBundle.message("project.setup.problem.title"));
    return false;
  }
  final Collection<Trinity<Module,FlexBuildConfiguration,FlashProjectStructureProblem>> problems=getProblems(scope,modulesAndBCsToCompile);
  if (!problems.isEmpty()) {
    final FlashProjectStructureErrorsDialog dialog=new FlashProjectStructureErrorsDialog(project,problems);
    dialog.show();
    if (dialog.isOK()) {
      ShowSettingsUtil.getInstance().editConfigurable(project,ProjectStructureConfigurable.getInstance(project));
    }
    return false;
  }
  return true;
}
