{
  final VirtualFile packageDir1=myFixture.addFileToProject("PackageDir1/foo/bar1.dart","").getVirtualFile().getParent().getParent();
  final VirtualFile packageDir2=myFixture.addFileToProject("PackageDir2/foo/bar2.dart","").getVirtualFile().getParent().getParent();
  final List<File> packageDirList=Arrays.asList(new File(packageDir1.getPath()),new File(packageDir2.getPath()),new File("nofile"));
  try {
    PubListPackageDirsAction.configurePubListPackageDirsLibrary(getProject(),Collections.singleton(myModule),Arrays.asList(packageDir1.getPath(),packageDir2.getPath()),Collections.singletonMap("PackageName",packageDirList));
    final DartUrlResolver resolver=DartUrlResolver.getInstance(getProject(),ModuleRootManager.getInstance(myModule).getContentRoots()[0]);
    assertEquals(packageDir1,resolver.getPackageDirIfLivePackageOrFromPubListPackageDirs("PackageName","foo/bar1.dart"));
    assertEquals(packageDir2,resolver.getPackageDirIfLivePackageOrFromPubListPackageDirs("PackageName","foo/bar2.dart"));
    assertEquals(packageDir1,resolver.getPackageDirIfLivePackageOrFromPubListPackageDirs("PackageName","incorrect"));
    assertEquals(packageDir1,resolver.getPackageDirIfLivePackageOrFromPubListPackageDirs("PackageName",""));
    assertEquals(packageDir1,resolver.getPackageDirIfLivePackageOrFromPubListPackageDirs("PackageName",null));
  }
  finally {
    PubListPackageDirsAction.configurePubListPackageDirsLibrary(getProject(),Collections.<Module>emptySet(),Collections.<String>emptyList(),Collections.<String,List<File>>emptyMap());
  }
}
