{
  waitTilHalted();
  if (!allowedToStep())   return;
  int count=1;
  if (hasMoreTokens())   count=nextIntToken();
  try {
    while (count-- > 0) {
      stepWithTimeout(new AnyKindOfStep(){
        public void step() throws PlayerDebugException {
          m_session.stepOver();
        }
      }
);
      for (; ; ) {
        dumpStep();
        if (m_requestResume) {
          m_requestResume=false;
          stepWithTimeout(new AnyKindOfStep(){
            public void step() throws PlayerDebugException {
              m_session.stepContinue();
            }
          }
);
        }
 else {
          break;
        }
      }
    }
  }
 catch (  NoResponseException nre) {
    if (count > 0) {
      Map args=new HashMap();
      args.put("count",Integer.toString(count));
      err(getLocalizationManager().getLocalizedTextString("abortingStep",args));
    }
  }
  m_repeatLine=m_currentLine;
}
