{
  for (final Iterator<User> it=myOnlineUsers.iterator(); it.hasNext(); ) {
    final User user=it.next();
    if (!onlineUsers.contains(user)) {
      myEventBroadcaster.doChange(new UserEvent.Offline(user),new Runnable(){
        @Override public void run(){
          it.remove();
          myUserToInfo.remove(user);
        }
      }
);
    }
 else {
      UserPresence oldPresence=getNotNullOnlineInfo(user).getPresence();
      final OnlineUserInfo onlineUserInfo=myUserToInfoNew.get(user);
      if (onlineUserInfo == null)       return;
      UserPresence newPresence=onlineUserInfo.getPresence();
      if (!newPresence.equals(oldPresence)) {
        myEventBroadcaster.doChange(new UserEvent.Updated(user,"presence",oldPresence,newPresence),new Runnable(){
          @Override public void run(){
            myUserToInfo.put(user,onlineUserInfo);
          }
        }
);
      }
 else {
        myUserToInfo.put(user,onlineUserInfo);
      }
    }
  }
}
