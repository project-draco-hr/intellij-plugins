{
  final Trinity<String,Integer,Integer> position=findPosition(line);
  if (position == null) {
    return null;
  }
  final String fileUrl=position.getFirst();
  VirtualFile file=VirtualFileManager.getInstance().findFileByUrl(fileUrl);
  if (fileUrl.startsWith(DartResolveUtil.PACKAGE_PREFIX) && libraryRootPath != null) {
    String libUrl=VfsUtilCore.pathToUrl(libraryRootPath);
    final VirtualFile libraryRoot=VirtualFileManager.getInstance().findFileByUrl(libUrl);
    final VirtualFile packages=DartResolveUtil.findPackagesFolder(libraryRoot,project);
    if (packages != null) {
      String relativePath=fileUrl.substring(DartResolveUtil.PACKAGE_PREFIX.length());
      relativePath=FileUtil.toSystemIndependentName(relativePath);
      file=VfsUtil.findRelativeFile(packages,relativePath.split("/"));
    }
  }
  if (file == null) {
    return null;
  }
  OpenFileHyperlinkInfo hyperlinkInfo=new OpenFileHyperlinkInfo(project,file,position.getSecond(),position.getThird());
  final int urlOffset=line.indexOf(fileUrl);
  return new Result(urlOffset,urlOffset + fileUrl.length(),hyperlinkInfo);
}
