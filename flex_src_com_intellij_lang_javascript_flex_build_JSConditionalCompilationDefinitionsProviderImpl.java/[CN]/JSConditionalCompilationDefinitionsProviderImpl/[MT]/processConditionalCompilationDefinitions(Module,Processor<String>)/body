{
  final FlexBuildConfigurationManager manager=FlexBuildConfigurationManager.getInstance(module);
  final FlexIdeBuildConfiguration bc=manager.getActiveConfiguration();
  final ModuleOrProjectCompilerOptions moduleLevelOptions=manager.getModuleLevelCompilerOptions();
  final ModuleOrProjectCompilerOptions projectLevelOptions=FlexProjectLevelCompilerOptionsHolder.getInstance(module.getProject()).getProjectLevelCompilerOptions();
  String rawValue=bc.getCompilerOptions().getOption("compiler.define");
  if (rawValue == null)   rawValue=moduleLevelOptions.getOption("compiler.define");
  if (rawValue == null)   rawValue=projectLevelOptions.getOption("compiler.define");
  if (rawValue != null) {
    int pos=0;
    while (true) {
      int index=rawValue.indexOf(CompilerOptionInfo.LIST_ENTRIES_SEPARATOR,pos);
      if (index == -1)       break;
      String token=rawValue.substring(pos,index);
      final int tabIndex=token.indexOf(CompilerOptionInfo.LIST_ENTRY_PARTS_SEPARATOR);
      if (tabIndex > 0 && !processor.process(token.substring(0,tabIndex)))       return;
      pos=index + 1;
    }
    final int tabIndex=rawValue.indexOf(CompilerOptionInfo.LIST_ENTRY_PARTS_SEPARATOR,pos);
    if (tabIndex > pos) {
      if (!processor.process(rawValue.substring(pos,tabIndex)))       return;
    }
  }
  for (  String definition : getDefinitionsFromCompilerOptions(projectLevelOptions.getAdditionalOptions())) {
    if (!processor.process(definition))     return;
  }
  for (  String definition : getDefinitionsFromCompilerOptions(moduleLevelOptions.getAdditionalOptions())) {
    if (!processor.process(definition))     return;
  }
  for (  String definition : getDefinitionsFromCompilerOptions(bc.getCompilerOptions().getAdditionalOptions())) {
    if (!processor.process(definition))     return;
  }
  for (  String definition : getDefinitionsFromConfigFile(bc.getCompilerOptions().getAdditionalConfigFilePath())) {
    if (!processor.process(definition))     return;
  }
}
