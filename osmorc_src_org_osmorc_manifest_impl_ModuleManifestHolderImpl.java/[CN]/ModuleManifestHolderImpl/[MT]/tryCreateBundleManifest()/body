{
  VirtualFile file=getManifestFile();
  if (file != null && file.exists()) {
    return;
  }
  final String manifestPath=getManifestPath();
  if (StringUtil.isEmpty(manifestPath)) {
    return;
  }
  if (getContentRoots().length > 0) {
    if (!_askedQuestions.containsKey(manifestPath)) {
      int result=Messages.showYesNoDialog(_module.getProject(),OsmorcBundle.getTranslation("manifestholder.createmanifest.question",manifestPath),OsmorcBundle.getTranslation("manifestholder.createmanifest.title"),Messages.getQuestionIcon());
      if (result == DialogWrapper.CANCEL_EXIT_CODE) {
        _askedQuestions.put(manifestPath,Boolean.FALSE);
        return;
      }
 else {
        _askedQuestions.put(manifestPath,Boolean.TRUE);
      }
    }
 else {
      if (_askedQuestions.get(manifestPath) == Boolean.FALSE) {
        return;
      }
    }
    _application.runWriteAction(new Runnable(){
      public void run(){
        try {
          VirtualFile[] contentRoots=getContentRoots();
          VirtualFile contentRoot=contentRoots[0];
          String completePath=contentRoot.getPath() + File.separator + manifestPath;
          completePath=completePath.replace('\\','/');
          int lastPathSep=completePath.lastIndexOf('/');
          String path=completePath.substring(0,lastPathSep);
          String filename=completePath.substring(lastPathSep + 1);
          VfsUtil.createDirectories(path);
          VirtualFile parentFolder=LocalFileSystem.getInstance().refreshAndFindFileByPath(path);
          String bundleName=_module.getName();
          Version bundleVersion=null;
          int nextDotPos=bundleName.indexOf('.');
          while (bundleVersion == null && nextDotPos >= 0) {
            try {
              bundleVersion=new Version(bundleName.substring(nextDotPos + 1));
              bundleName=bundleName.substring(0,nextDotPos);
            }
 catch (            IllegalArgumentException e) {
            }
            nextDotPos=bundleName.indexOf('.',nextDotPos + 1);
          }
          VirtualFile manifest=parentFolder.createChildData(this,filename);
          OutputStream outputStream=manifest.getOutputStream(this);
          PrintWriter writer=new PrintWriter(outputStream);
          writer.write(Attributes.Name.MANIFEST_VERSION + ": 1.0.0\n" + Constants.BUNDLE_MANIFESTVERSION+ ": 2\n"+ Constants.BUNDLE_NAME+ ": "+ bundleName+ "\n"+ Constants.BUNDLE_SYMBOLICNAME+ ": "+ bundleName+ "\n"+ Constants.BUNDLE_VERSION+ ": "+ (bundleVersion != null ? bundleVersion.toString() : "1.0.0")+ "\n");
          writer.flush();
          writer.close();
        }
 catch (        IOException e) {
          throw new RuntimeException(e);
        }
      }
    }
);
    VirtualFileManager.getInstance().refresh(false);
  }
}
