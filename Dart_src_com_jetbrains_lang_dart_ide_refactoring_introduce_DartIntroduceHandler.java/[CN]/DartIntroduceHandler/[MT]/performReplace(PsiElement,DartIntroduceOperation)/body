{
  final DartExpression expression=operation.getInitializer();
  final Project project=operation.getProject();
  return new WriteCommandAction<PsiElement>(project,expression.getContainingFile()){
    protected void run(    @NotNull final Result<PsiElement> result) throws Throwable {
      final PsiElement createdDeclaration=addDeclaration(operation,declaration);
      result.setResult(createdDeclaration);
      if (createdDeclaration != null) {
        modifyDeclaration(createdDeclaration);
      }
      PsiElement newExpression=createExpression(project,operation.getName());
      if (operation.isReplaceAll()) {
        List<PsiElement> newOccurrences=new ArrayList<PsiElement>();
        for (        PsiElement occurrence : operation.getOccurrences()) {
          final PsiElement replaced=replaceExpression(occurrence,newExpression,operation);
          if (replaced != null) {
            newOccurrences.add(replaced);
          }
        }
        operation.setOccurrences(newOccurrences);
      }
 else {
        final PsiElement replaced=replaceExpression(expression,newExpression,operation);
        operation.setOccurrences(Collections.singletonList(replaced));
      }
      postRefactoring(operation.getElement());
    }
  }
.execute().getResultObject();
}
