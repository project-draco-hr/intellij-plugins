{
  final List<PsiElement> occurrences=operation.getOccurrences();
  final List<SmartPsiElementPointer<PsiElement>> pointers=new ArrayList<>(occurrences.size());
  for (  PsiElement occurrence : occurrences) {
    pointers.add(SmartPointerManager.getInstance(operation.getProject()).createSmartPsiElementPointer(occurrence));
  }
  final PsiElement statement=performRefactoring(operation);
  final DartComponent target=PsiTreeUtil.findChildOfType(statement,DartComponent.class);
  final DartComponentName componentName=target != null ? target.getComponentName() : null;
  if (componentName == null) {
    return;
  }
  operation.getEditor().getCaretModel().moveToOffset(componentName.getTextOffset());
  occurrences.clear();
  for (  SmartPsiElementPointer<PsiElement> pointer : pointers) {
    final PsiElement element=pointer.getElement();
    if (element != null) {
      occurrences.add(element);
    }
  }
  final InplaceVariableIntroducer<PsiElement> introducer=new DartInplaceVariableIntroducer(componentName,operation,occurrences);
  introducer.performInplaceRefactoring(new LinkedHashSet<String>(operation.getSuggestedNames()));
}
