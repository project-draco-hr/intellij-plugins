{
  PsiElement anchor=operation.isReplaceAll() ? findAnchor(operation.getOccurrences()) : findAnchor(operation.getInitializer());
  if (anchor == null) {
    CommonRefactoringUtil.showErrorHint(operation.getProject(),operation.getEditor(),RefactoringBundle.getCannotRefactorMessage(DartBundle.message("dart.refactoring.introduce.anchor.error")),DartBundle.message("dart.refactoring.introduce.error"),null);
    return null;
  }
  PsiElement declaration=createDeclaration(operation);
  if (declaration == null) {
    showCannotPerformError(operation.getProject(),operation.getEditor());
    return null;
  }
  final SmartPsiElementPointer<PsiElement> pointer=performReplace(declaration,operation);
  final PsiElement element=pointer == null ? null : pointer.getElement();
  if (element != null) {
    declaration=CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(element);
  }
  return declaration;
}
