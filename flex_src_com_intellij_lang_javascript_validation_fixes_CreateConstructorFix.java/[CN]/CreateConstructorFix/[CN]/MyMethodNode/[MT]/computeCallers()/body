{
  final Collection<PsiReference> refs=Collections.synchronizedCollection(new ArrayList<PsiReference>());
  ReferencesSearch.search(myClass,myClass.getUseScope(),true).forEach(new Processor<PsiReference>(){
    @Override public boolean process(    PsiReference psiReference){
      if (isClassInstantiation(psiReference)) {
        refs.add(psiReference);
      }
      return true;
    }
  }
);
  Set<JSFunction> result=new java.util.HashSet<JSFunction>();
  for (  PsiReference reference : refs) {
    addCallExpression((JSNewExpression)reference.getElement().getParent(),result);
  }
  for (  JSCallExpression superCall : JSInheritanceUtil.findSuperConstructorCalls(myClass)) {
    addCallExpression(superCall,result);
  }
  return new ArrayList<JSFunction>(result);
}
