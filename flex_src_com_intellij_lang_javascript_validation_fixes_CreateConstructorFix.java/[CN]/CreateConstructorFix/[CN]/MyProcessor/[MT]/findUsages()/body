{
  final Collection<UsageInfo> declarations=Collections.synchronizedCollection(new HashSet<UsageInfo>());
  final Collection<OtherUsageInfo> usages=Collections.synchronizedCollection(new HashSet<OtherUsageInfo>());
  ReferencesSearch.search(myClass,myClass.getUseScope()).forEach(new Processor<PsiReference>(){
    @Override public boolean process(    PsiReference psiReference){
      if (isClassInstantiation(psiReference)) {
        PsiElement element=psiReference.getElement();
        usages.add(new OtherUsageInfo(element,null,myParameters,shouldPropagate(element),0,0));
      }
      return true;
    }
  }
);
  for (  JSCallExpression superCall : JSInheritanceUtil.findSuperConstructorCalls(myClass)) {
    usages.add(new OtherUsageInfo(superCall.getMethodExpression(),null,myParameters,shouldPropagate(superCall),0,0));
  }
  findPropagationUsages(declarations,usages);
  Collection<UsageInfo> result=new ArrayList<UsageInfo>(declarations);
  result.addAll(usages);
  return result.toArray(new UsageInfo[result.size()]);
}
