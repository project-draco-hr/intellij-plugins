{
  final PsiElement object=myElement.getParent() instanceof JSProperty ? ((JSProperty)myElement.getParent()).getValue() : null;
  if (object instanceof JSObjectLiteralExpression) {
    final JSProperty templateUrl=((JSObjectLiteralExpression)object).findProperty("templateUrl");
    if (templateUrl != null && templateUrl.getValue() != null && templateUrl.getValue() instanceof JSLiteralExpression && ((JSLiteralExpression)templateUrl.getValue()).isQuotedLiteral()) {
      String templateUrlText=StringUtil.unquoteString(templateUrl.getValue().getText());
      if (!StringUtil.isEmptyOrSpaces(templateUrlText)) {
        templateUrlText=templateUrlText.trim().replace('\\','/');
        final String finalTemplateUrlText=templateUrlText;
        return new Condition<VirtualFile>(){
          @Override public boolean value(          VirtualFile file){
            final String path=file.getPath();
            return path.endsWith(finalTemplateUrlText);
          }
        }
;
      }
    }
  }
  return Condition.TRUE;
}
