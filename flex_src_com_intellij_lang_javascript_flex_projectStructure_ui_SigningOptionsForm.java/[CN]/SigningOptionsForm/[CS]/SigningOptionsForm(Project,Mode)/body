{
  myMode=mode;
  myUseTempCertificateCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      updateControls();
    }
  }
);
  myProvisioningProfileTextWithBrowse.addBrowseFolderListener(null,null,project,FlexUtils.createFileChooserDescriptor("mobileprovision"));
  myIosSdkTextWithBrowse.addBrowseFolderListener(null,null,project,FileChooserDescriptorFactory.createSingleFolderDescriptor());
  final FileChooserDescriptor d=mode == Mode.iOS ? FlexUtils.createFileChooserDescriptor("p12") : FileChooserDescriptorFactory.createSingleFileNoJarsDescriptor();
  myKeystoreFileTextWithBrowse.addBrowseFolderListener(null,null,project,d);
  myAdtOptionsComponent.setDialogCaption("Additional ADT Options");
  myMoreOptionsHyperlinkLabel.setText(MORE_OPTIONS);
  myMoreOptionsHyperlinkLabel.addHyperlinkListener(new HyperlinkListener(){
    public void hyperlinkUpdate(    HyperlinkEvent e){
      if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
        showMoreOptions(!isShowingMoreOptions());
      }
    }
  }
);
  updateMoreOptions();
switch (mode) {
case Desktop:
case Android:
    myProvisioningProfileLabel.setVisible(false);
  myProvisioningProfileTextWithBrowse.setVisible(false);
myIosSdkLabel.setVisible(false);
myIosSdkTextWithBrowse.setVisible(false);
myAdtOptionsLabel.setVisible(false);
myAdtOptionsComponent.setVisible(false);
break;
case iOS:
myUseTempCertificateCheckBox.setVisible(false);
showMoreOptions(false);
myMoreOptionsHyperlinkLabel.setVisible(false);
break;
}
}
