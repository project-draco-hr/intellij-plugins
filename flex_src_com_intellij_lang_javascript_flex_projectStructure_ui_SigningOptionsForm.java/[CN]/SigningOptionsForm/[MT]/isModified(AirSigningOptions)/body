{
  if (myTargetArchitectureLabel.isVisible() && !getArch().equals(signingOptions.getArch()))   return true;
  if (myUseTempCertificateCheckBox.isVisible() && myUseTempCertificateCheckBox.isSelected() != signingOptions.isUseTempCertificate()) {
    return true;
  }
  final String profilePath=FileUtil.toSystemIndependentName(myProvisioningProfileTextWithBrowse.getText().trim());
  if (myProvisioningProfileTextWithBrowse.isVisible() && !profilePath.equals(signingOptions.getProvisioningProfilePath()))   return true;
  final String keystorePath=FileUtil.toSystemIndependentName(myKeystoreFileTextWithBrowse.getText().trim());
  if (!keystorePath.equals(signingOptions.getKeystorePath()))   return true;
  final String iosSdkPath=FileUtil.toSystemIndependentName(myIosSdkTextWithBrowse.getText().trim());
  if (myIosSdkTextWithBrowse.isVisible() && !iosSdkPath.equals(signingOptions.getIOSSdkPath()))   return true;
  if (myAdtOptionsComponent.isVisible() && !myAdtOptionsComponent.getText().equals(signingOptions.getADTOptions()))   return false;
  if (!myKeystoreTypeTextField.getText().trim().equals(signingOptions.getKeystoreType()))   return true;
  if (!myKeyAliasTextField.getText().equals(signingOptions.getKeyAlias()))   return true;
  if (!myProviderClassNameTextField.getText().equals(signingOptions.getProvider()))   return true;
  if (!myTsaUrlTextField.getText().equals(signingOptions.getTsa()))   return true;
  return false;
}
