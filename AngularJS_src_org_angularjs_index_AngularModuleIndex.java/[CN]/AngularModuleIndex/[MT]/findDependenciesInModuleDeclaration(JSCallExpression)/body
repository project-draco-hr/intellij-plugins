{
  final JSExpression methodExpression=call.getMethodExpression();
  if (methodExpression instanceof JSReferenceExpression && JSSymbolUtil.isAccurateReferenceExpressionName((JSReferenceExpression)methodExpression,"angular",AngularJSIndexingHandler.MODULE)) {
    final JSExpression[] arguments=call.getArguments();
    if (arguments.length > 1 && arguments[0] instanceof JSLiteralExpression && ((JSLiteralExpression)arguments[0]).isQuotedLiteral() && arguments[1] instanceof JSArrayLiteralExpression) {
      final JSArrayLiteralExpression array=(JSArrayLiteralExpression)arguments[1];
      final JSExpression[] children=array.getExpressions();
      final Set<String> dependencies=new HashSet<>();
      for (      JSExpression child : children) {
        if (child instanceof JSLiteralExpression && ((JSLiteralExpression)child).isQuotedLiteral()) {
          dependencies.add(StringUtil.unquoteString(child.getText()));
        }
      }
      if (!dependencies.isEmpty()) {
        return new ArrayList<>(dependencies);
      }
    }
  }
  return null;
}
