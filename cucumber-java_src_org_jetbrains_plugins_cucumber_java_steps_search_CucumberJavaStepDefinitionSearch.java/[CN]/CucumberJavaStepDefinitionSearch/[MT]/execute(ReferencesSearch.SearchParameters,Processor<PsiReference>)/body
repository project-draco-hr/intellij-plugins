{
  final PsiElement myElement=queryParameters.getElementToSearch();
  if (!(myElement instanceof PsiMethod)) {
    return true;
  }
  final PsiMethod method=(PsiMethod)myElement;
  Boolean isStepDefinition=ApplicationManager.getApplication().runReadAction(new Computable<Boolean>(){
    @Override public Boolean compute(){
      return CucumberJavaUtil.isStepDefinition(method);
    }
  }
);
  if (!isStepDefinition) {
    return true;
  }
  final PsiAnnotation stepAnnotation=ApplicationManager.getApplication().runReadAction(new Computable<PsiAnnotation>(){
    @Override public PsiAnnotation compute(){
      return CucumberJavaUtil.getCucumberStepAnnotation(method);
    }
  }
);
  final String regexp=CucumberJavaUtil.getPatternFromStepDefinition(stepAnnotation);
  if (regexp == null) {
    return true;
  }
  return CucumberUtil.findGherkinReferencesToElement(myElement,regexp,consumer,queryParameters.getEffectiveSearchScope());
}
