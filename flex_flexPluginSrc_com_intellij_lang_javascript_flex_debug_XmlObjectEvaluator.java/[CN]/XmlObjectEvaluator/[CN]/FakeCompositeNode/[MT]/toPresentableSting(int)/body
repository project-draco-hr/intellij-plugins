{
  final StringBuilder buffer=new StringBuilder();
  final String rawText=((FlexStackFrame.MyXValue)myValue).getResult();
  if (rawText.contains(XMLLIST_MARKER)) {
    for (    FakeCompositeNode child : myChildren) {
      buffer.append(child.toPresentableSting(level));
    }
    return buffer.toString();
  }
  final int xmlMarkerIndex=rawText.indexOf(XML_MARKER);
  final int xmlInfoStartIndex=xmlMarkerIndex < 0 ? -1 : rawText.indexOf(" ",xmlMarkerIndex + XML_MARKER.length());
  final int xmlInfoEndIndex=xmlMarkerIndex < 0 ? -1 : rawText.lastIndexOf("'");
  if (xmlInfoStartIndex > 0 && xmlInfoEndIndex > xmlInfoStartIndex) {
    final String xmlInfo=rawText.substring(xmlInfoStartIndex,xmlInfoEndIndex);
    final boolean isElement=xmlInfo.startsWith(FlexStackFrame.MyXValue.ELEMENT_MARKER + "<") && xmlInfo.endsWith(">");
    final boolean isEmptyElement=isElement && xmlInfo.endsWith("/>");
    final boolean isText=!isElement && xmlInfo.startsWith(FlexStackFrame.MyXValue.TEXT_MARKER);
    if (isText || isElement) {
      if (isText) {
        appendIndent(buffer,level);
        buffer.append(xmlInfo.substring(FlexStackFrame.MyXValue.TEXT_MARKER.length()));
        buffer.append("\n");
      }
 else       if (isEmptyElement) {
        appendIndent(buffer,level);
        buffer.append(xmlInfo.substring(FlexStackFrame.MyXValue.ELEMENT_MARKER.length()));
        buffer.append("\n");
      }
 else {
        final String startTag=xmlInfo.substring(FlexStackFrame.MyXValue.ELEMENT_MARKER.length());
        final int spaceIndex=startTag.indexOf(" ");
        final String tagName=startTag.substring(1,spaceIndex > 0 ? spaceIndex : startTag.length() - 1);
        appendIndent(buffer,level);
        buffer.append(startTag);
        buffer.append("\n");
        for (        FakeCompositeNode child : myChildren) {
          buffer.append(child.toPresentableSting(level + 1));
        }
        appendIndent(buffer,level);
        buffer.append("</").append(tagName).append("> ");
        buffer.append("\n");
      }
    }
  }
  return buffer.toString();
}
