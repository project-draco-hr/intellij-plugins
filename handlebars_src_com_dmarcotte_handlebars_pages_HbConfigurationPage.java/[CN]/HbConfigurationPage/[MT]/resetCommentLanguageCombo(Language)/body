{
  final DefaultComboBoxModel model=(DefaultComboBoxModel)myCommenterLanguage.getModel();
  final List<Language> languages=TemplateDataLanguageMappings.getTemplateableLanguages();
  languages.add(HbLanguage.INSTANCE);
  Collections.sort(languages,new Comparator<Language>(){
    @Override public int compare(    final Language o1,    final Language o2){
      return o1.getID().compareTo(o2.getID());
    }
  }
);
  for (  Language language : languages) {
    model.addElement(language);
  }
  myCommenterLanguage.setRenderer(new ListCellRendererWrapper(){
    @Override public void customize(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      setText(value == null ? "" : ((Language)value).getDisplayName());
      if (value != null) {
        final FileType type=((Language)value).getAssociatedFileType();
        if (type != null) {
          setIcon(type.getIcon());
        }
      }
    }
  }
);
  myCommenterLanguage.setSelectedItem(commentLanguage);
}
