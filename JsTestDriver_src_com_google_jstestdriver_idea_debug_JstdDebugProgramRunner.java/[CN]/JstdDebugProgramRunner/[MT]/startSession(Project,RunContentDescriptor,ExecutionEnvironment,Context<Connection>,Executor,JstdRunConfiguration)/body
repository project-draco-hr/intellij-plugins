{
  final JSDebugEngine<Connection> debugEngine=context.getDebugEngine();
  if (!debugEngine.prepareDebugger(project))   return null;
  final Connection connection=debugEngine.openConnection();
  FileDocumentManager.getInstance().saveAllDocuments();
  final String url="http://localhost:9876" + context.getUrl();
  File configFile=new File(runConfiguration.getRunSettings().getConfigFile());
  List<RemoteJavaScriptDebugConfiguration.RemoteUrlMappingBean> mapping=extractMappings(configFile);
  final JstdTestRunnerCommandLineState runState=runConfiguration.getState(executor,env);
  final DebuggableFileFinder fileFinder=new RemoteDebuggingFileFinder(project,mapping);
  final XDebugSession debugSession=XDebuggerManager.getInstance(project).startSession(this,env,contentToReuse,new XDebugProcessStarter(){
    @NotNull public XDebugProcess start(    @NotNull final XDebugSession session){
      try {
        ExecutionResult executionResult=runState.execute(executor,JstdDebugProgramRunner.this);
        return debugEngine.createDebugProcess(session,fileFinder,connection,url,executionResult);
      }
 catch (      ExecutionException e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  return debugSession.getRunContentDescriptor();
}
