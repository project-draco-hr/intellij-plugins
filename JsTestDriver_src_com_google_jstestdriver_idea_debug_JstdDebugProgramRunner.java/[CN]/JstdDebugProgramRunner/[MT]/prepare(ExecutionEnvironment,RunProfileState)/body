{
  JstdRunProfileState jstdState=JstdRunProfileState.cast(state);
  final JstdRunSettings runSettings=jstdState.getRunSettings();
  if (runSettings.isExternalServerType()) {
    throw new ExecutionException("Local JsTestDriver server running in IDE required for tests debugging");
  }
  JstdToolWindowManager jstdToolWindowManager=JstdToolWindowManager.getInstance(environment.getProject());
  jstdToolWindowManager.setAvailable(true);
  JstdServer server=JstdServerRegistry.getInstance().getServer();
  if (server != null && !server.isStopped()) {
    return prepareWithServer(environment.getProject(),server,runSettings);
  }
  return jstdToolWindowManager.restartServer().thenAsync(new AsyncFunction<JstdServer,RunProfileStarter>(){
    @NotNull @Override public Promise<RunProfileStarter> fun(    JstdServer server){
      return server == null ? Promise.<RunProfileStarter>resolve(null) : prepareWithServer(environment.getProject(),server,runSettings);
    }
  }
);
}
