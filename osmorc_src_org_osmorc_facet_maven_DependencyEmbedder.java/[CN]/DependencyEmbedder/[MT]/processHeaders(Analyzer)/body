{
  StringBuffer includeResource=new StringBuffer();
  StringBuffer bundleClassPath=new StringBuffer();
  StringBuffer embeddedArtifacts=new StringBuffer();
  myInlinedPaths.clear();
  myEmbeddedArtifacts.clear();
  String embedDependencyHeader=analyzer.getProperty(EMBED_DEPENDENCY);
  if (StringUtils.isNotEmpty(embedDependencyHeader)) {
    myEmbedDirectory=analyzer.getProperty(EMBED_DIRECTORY);
    myEmbedStripGroup=analyzer.getProperty(EMBED_STRIP_GROUP,"true");
    myEmbedStripVersion=analyzer.getProperty(EMBED_STRIP_VERSION);
    processInstructions(embedDependencyHeader);
    for (    String myInlinedPath : myInlinedPaths) {
      inlineDependency(myInlinedPath,includeResource);
    }
    for (    MavenArtifact m_embeddedArtifact : myEmbeddedArtifacts) {
      embedDependency(m_embeddedArtifact,includeResource,bundleClassPath,embeddedArtifacts);
    }
  }
  if (analyzer.getProperty(Analyzer.WAB) == null && bundleClassPath.length() > 0) {
    if (analyzer.getProperty(Analyzer.BUNDLE_CLASSPATH) == null) {
      analyzer.setProperty(Analyzer.BUNDLE_CLASSPATH,".");
    }
  }
  appendDependencies(analyzer,Analyzer.INCLUDE_RESOURCE,includeResource.toString());
  appendDependencies(analyzer,Analyzer.BUNDLE_CLASSPATH,bundleClassPath.toString());
  appendDependencies(analyzer,EMBEDDED_ARTIFACTS,embeddedArtifacts.toString());
}
