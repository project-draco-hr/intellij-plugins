{
  DartCommandLineDebugProcess.LOG.assertTrue(myVmValue != null && !myVmValue.isList(),myVmValue);
  try {
    final String expression="(this is Iterable || this is Map) ? this.length : -1";
    myDebugProcess.getVmConnection().evaluateObject(myVmValue.getIsolate(),myVmValue,expression,new VmCallback<VmValue>(){
      public void handleResult(      final VmResult<VmValue> result){
        if (node.isObsolete() || result.isError() || result.getResult() == null || (!"number".equals(result.getResult().getKind()) && !"integer".equals(result.getResult().getKind()))) {
          return;
        }
        try {
          final int collectionSize=Integer.parseInt(result.getResult().getText());
          if (collectionSize >= 0) {
            node.setPresentation(AllIcons.Debugger.Db_array,objectType,"size = " + collectionSize,collectionSize > 0);
          }
        }
 catch (        NumberFormatException ignore) {
        }
      }
    }
);
  }
 catch (  IOException e) {
    DartCommandLineDebugProcess.LOG.error(e);
  }
}
