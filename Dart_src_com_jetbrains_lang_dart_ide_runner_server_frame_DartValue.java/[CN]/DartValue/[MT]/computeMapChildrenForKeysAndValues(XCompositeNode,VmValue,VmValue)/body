{
  try {
    final Integer fromIndex=myListOrMapChildrenAlreadyShown.get();
    final int childrenToShow=Math.min(mapKeysList.getLength() - fromIndex,XCompositeNode.MAX_CHILDREN_TO_SHOW);
    DartCommandLineDebugProcess.LOG.assertTrue(childrenToShow > 0);
    computeListChildren(node,myDebugProcess,mapKeysList,fromIndex,childrenToShow,new Consumer<List<DartValue>>(){
      @Override public void consume(      final List<DartValue> mapKeys){
        try {
          computeListChildren(node,myDebugProcess,mapValuesList,fromIndex,childrenToShow,new Consumer<List<DartValue>>(){
            @Override public void consume(            final List<DartValue> mapValues){
              addMapChildrenToNode(node,mapKeys,mapValues,mapKeysList.getLength());
            }
          }
);
        }
 catch (        IOException e) {
          DartCommandLineDebugProcess.LOG.error(e);
        }
      }
    }
);
  }
 catch (  IOException e) {
    DartCommandLineDebugProcess.LOG.error(e);
  }
}
