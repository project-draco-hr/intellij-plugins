{
  DartCommandLineDebugProcess.LOG.assertTrue(myVmValue.isList(),myVmValue);
  final Integer fromIndex=listChildrenAlreadyShown.get();
  final int childrenToShow=Math.min(myVmValue.getLength() - fromIndex,XCompositeNode.MAX_CHILDREN_TO_SHOW);
  if (childrenToShow == 0) {
    node.addChildren(XValueChildrenList.EMPTY,true);
    return;
  }
  computeListChildren(node,myDebugProcess,myVmValue,fromIndex,childrenToShow,new Consumer<List<DartValue>>(){
    @Override public void consume(    final List<DartValue> listChildren){
      final XValueChildrenList resultList=new XValueChildrenList(listChildren.size());
      for (      DartValue value : listChildren) {
        resultList.add(value);
      }
      node.addChildren(resultList,true);
      listChildrenAlreadyShown.set(listChildrenAlreadyShown.get() + listChildren.size());
      if (myVmValue.getLength() > listChildrenAlreadyShown.get()) {
        node.tooManyChildren(myVmValue.getLength() - listChildrenAlreadyShown.get());
      }
    }
  }
);
}
