{
  DartCommandLineDebugProcess.LOG.assertTrue(myVmValue != null && myVmValue.isList(),myVmValue);
  final int childrenToShow=Math.min(myVmValue.getLength() - listChildrenAlreadyShown.get(),XCompositeNode.MAX_CHILDREN_TO_SHOW);
  if (childrenToShow == 0) {
    node.addChildren(XValueChildrenList.EMPTY,true);
    return;
  }
  final AtomicInteger handledResponsesAmount=new AtomicInteger(0);
  final List<DartValue> sortedChildren=Collections.synchronizedList(new SortedList<DartValue>(new Comparator<DartValue>(){
    public int compare(    DartValue o1,    DartValue o2){
      return StringUtil.naturalCompare(o1.getName(),o2.getName());
    }
  }
));
  for (int listIndex=listChildrenAlreadyShown.get(); listIndex < listChildrenAlreadyShown.get() + childrenToShow; listIndex++) {
    final String nodeName=String.valueOf(listIndex);
    myDebugProcess.getVmConnection().getListElements(myVmValue.getIsolate(),myVmValue.getObjectId(),listIndex,new VmCallback<VmValue>(){
      @Override public void handleResult(      final VmResult<VmValue> vmResult){
        final int responsesAmount=handledResponsesAmount.addAndGet(1);
        if (node.isObsolete()) {
          return;
        }
        if (vmResult.isError()) {
          node.setErrorMessage(vmResult.getError());
          return;
        }
        if (vmResult.getResult() == null) {
          node.setErrorMessage(NO_RESPONSE_FROM_DART_VM);
          return;
        }
        sortedChildren.add(new DartValue(myDebugProcess,nodeName,vmResult.getResult(),false));
        if (responsesAmount == childrenToShow) {
          final XValueChildrenList resultList=new XValueChildrenList(sortedChildren.size());
          for (          DartValue value : sortedChildren) {
            resultList.add(value);
          }
          node.addChildren(resultList,true);
          listChildrenAlreadyShown.set(listChildrenAlreadyShown.get() + childrenToShow);
          if (myVmValue.getLength() > listChildrenAlreadyShown.get()) {
            node.tooManyChildren(myVmValue.getLength() - listChildrenAlreadyShown.get());
          }
        }
      }
    }
);
  }
}
