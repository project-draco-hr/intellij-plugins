{
  try {
    if (myVmValue.isList()) {
      computeListChildren(node,myListOrMapChildrenAlreadyShown);
      return;
    }
    final String expression="this is Iterable ? 'Iterable' : this is Map ? 'Map' : ''";
    myDebugProcess.getVmConnection().evaluateObject(myVmValue.getIsolate(),myVmValue,expression,new VmCallback<VmValue>(){
      @Override public void handleResult(      @NotNull final VmResult<VmValue> result){
        if (node.isObsolete())         return;
        if (!result.isError() && result.getResult() != null && "string".equals(result.getResult().getKind())) {
          final String text=StringUtil.unquoteString(result.getResult().getText());
          if ("Map".equals(text)) {
            computeMapChildren(node);
            return;
          }
 else           if ("Iterable".equals(text)) {
            computeIterableChildren(node);
            return;
          }
        }
        computeObjectChildren(node);
      }
    }
);
  }
 catch (  IOException e) {
    DartCommandLineDebugProcess.LOG.error(e);
  }
}
