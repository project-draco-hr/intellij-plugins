{
  final DartPositionInfo info=DartPositionInfo.parsePositionInfo(line);
  if (info == null)   return null;
  final VirtualFile file;
switch (info.type) {
case FILE:
    file=LocalFileSystem.getInstance().findFileByPath(info.path);
  break;
case DART:
if (mySdk != null) {
  if (info.path.contains("/")) {
    file=LocalFileSystem.getInstance().findFileByPath(mySdk.getHomePath() + "/lib/" + info.path);
  }
 else {
    file=DartLibraryIndex.getStandardLibraryFromSdk(myProject,info.path);
  }
}
 else {
  file=null;
}
break;
case PACKAGE:
if (myContextFile != null) {
file=DartResolveUtil.getPackagePrefixImportedFile(myProject,myContextFile,"package:" + info.path);
}
 else {
if (myAllPubspecYamlFiles == null) {
myAllPubspecYamlFiles=FilenameIndex.getVirtualFilesByName(myProject,PUBSPEC_YAML,GlobalSearchScope.projectScope(myProject));
}
VirtualFile inPackage=null;
for (VirtualFile yamlFile : myAllPubspecYamlFiles) {
inPackage=DartResolveUtil.getPackagePrefixImportedFile(myProject,yamlFile,"package:" + info.path);
if (inPackage != null) {
  break;
}
}
file=inPackage;
}
break;
default :
file=null;
}
if (file != null && !file.isDirectory()) {
final int highlightStartOffset=entireLength - line.length() + info.highlightingStartIndex;
final int highlightEndOffset=entireLength - line.length() + info.highlightingEndIndex;
return new Result(highlightStartOffset,highlightEndOffset,new OpenFileHyperlinkInfo(myProject,file,info.line,info.column));
}
return null;
}
