{
  List<AbstractTreeNode> result=new ArrayList<AbstractTreeNode>();
  if (parent instanceof SwfQualifiedNamedElementNode || parent instanceof FlexFileNode) {
    if (((ProjectViewNode)parent).getSettings().isShowMembers()) {
      JSQualifiedNamedElement parentElement=getElement(parent);
      if (parentElement != null) {
        JSStructureViewElement structureViewElement=parentElement instanceof XmlBackedJSClassImpl ? new FlexStructureViewProvider.FlexStructureViewElement(((XmlBackedJSClassImpl)parentElement),(XmlFile)parentElement.getContainingFile()) : new JSStructureViewElement(parentElement);
        StructureViewTreeElement[] structureViewChildren=structureViewElement.getChildren(false);
        for (        final StructureViewTreeElement structureViewChild : structureViewChildren) {
          if (structureViewChild instanceof JSStructureViewElement) {
            PsiElement childElement=((JSStructureViewElement)structureViewChild).getUpToDateElement();
            result.add(new FlexClassMemberNode((JSElement)childElement,((ProjectViewNode)parent).getSettings()));
          }
 else {
            result.add(new UnknownNode(parentElement.getProject(),structureViewChild,((ProjectViewNode)parent).getSettings()));
          }
        }
      }
    }
  }
 else {
    for (    final AbstractTreeNode child : children) {
      Object o=child.getValue();
      if (o instanceof JSFileImpl || o instanceof XmlFile && JavaScriptSupportLoader.isFlexMxmFile((PsiFile)o)) {
        result.add(new FlexFileNode((PsiFile)o,((ProjectViewNode)parent).getSettings()));
        continue;
      }
      result.add(child);
    }
  }
  return result;
}
