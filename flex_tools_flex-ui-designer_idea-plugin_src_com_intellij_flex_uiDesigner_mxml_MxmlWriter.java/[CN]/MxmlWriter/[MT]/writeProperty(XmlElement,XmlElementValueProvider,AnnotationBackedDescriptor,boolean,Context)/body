{
  String error;
  int beforePosition=out.size();
  try {
    ValueWriter valueWriter=propertyProcessor.process(element,valueProvider,descriptor,context);
    if (valueWriter == null) {
      return IGNORE;
    }
    writer.write(propertyProcessor.getName());
    if (propertyProcessor.isStyle()) {
      out.write(PropertyClassifier.STYLE);
      if (!cssDeclarationSourceDefined) {
        defineInlineCssDeclaration(element.getParent());
      }
      out.writeUInt29(element.getTextOffset());
    }
 else {
      out.write(PropertyClassifier.PROPERTY);
    }
    return valueWriter.write(out,writer,propertyProcessor.isStyle());
  }
 catch (  InvalidPropertyException e) {
    error=e.getMessage();
  }
catch (  NumberFormatException e) {
    error=e.getMessage();
    final String prefix="For input string: \"";
    if (error.startsWith(prefix)) {
      error=error.substring(prefix.length(),error.charAt(error.length() - 1) == '"' ? error.length() - 1 : error.length());
    }
  }
catch (  RuntimeException e) {
    error=e.getMessage();
    LOG.error(e);
  }
  writer.getBlockOut().setPosition(beforePosition);
  problems.add(error);
  return IGNORE;
}
