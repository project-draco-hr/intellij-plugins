{
  final int beforePosition=writer.getBlockOut().size();
  try {
    ValueWriter valueWriter=propertyProcessor.process(element,valueProvider,descriptor,context);
    if (valueWriter == null) {
      return IGNORE;
    }
    writer.write(propertyProcessor.getName());
    if (propertyProcessor.isStyle()) {
      out.write(PropertyClassifier.STYLE);
      if (!cssDeclarationSourceDefined) {
        defineInlineCssDeclaration(element);
      }
    }
 else {
      out.write(PropertyClassifier.PROPERTY);
    }
    return valueWriter.write(out,writer,propertyProcessor.isStyle());
  }
 catch (  RuntimeException e) {
    problemsHolder.add(element,e,descriptor.getName());
  }
catch (  Throwable e) {
    problemsHolder.add(e);
  }
  writer.getBlockOut().setPosition(beforePosition);
  return IGNORE;
}
