{
  final String fqn=descriptor.getQualifiedName();
  if (fqn.equals(JSCommonTypeNames.STRING_CLASS_NAME)) {
    CharSequence v=XmlTagValueProvider.getDisplay(tag);
    if (isArray) {
      writer.write(JSCommonTypeNames.STRING_CLASS_NAME);
      out.writeAmfUTF(v,false);
    }
 else {
      writeSubstitutedString(v);
    }
  }
 else   if (fqn.equals(JSCommonTypeNames.NUMBER_CLASS_NAME)) {
    if (isArray) {
      writer.write(fqn);
    }
 else {
      out.write(Amf3Types.DOUBLE);
    }
    out.writeDouble(tag.getValue().getTrimmedText());
  }
 else   if (fqn.equals(JSCommonTypeNames.BOOLEAN_CLASS_NAME)) {
    boolean v=tag.getValue().getTrimmedText().charAt(0) == 't';
    if (isArray) {
      writer.write(fqn);
      out.write(v);
    }
 else {
      out.write(v ? Amf3Types.TRUE : Amf3Types.FALSE);
    }
  }
 else {
    return false;
  }
  return true;
}
