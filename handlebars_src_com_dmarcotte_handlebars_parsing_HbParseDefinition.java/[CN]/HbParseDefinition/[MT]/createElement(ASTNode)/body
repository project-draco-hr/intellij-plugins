{
  final IElementType elementType=node.getElementType();
  if (elementType == HbTokenTypes.BLOCK_WRAPPER) {
    return new HbBlockWrapperImpl(node);
  }
  if (elementType == HbTokenTypes.OPEN_BLOCK_STACHE) {
    return new HbOpenBlockMustacheImpl(node);
  }
  if (elementType == HbTokenTypes.OPEN_INVERSE_BLOCK_STACHE) {
    return new HbOpenInverseBlockMustacheImpl(node);
  }
  if (elementType == HbTokenTypes.OPEN_PARTIAL_BLOCK_STACHE) {
    return new HbOpenPartialBlockMustacheImpl(node);
  }
  if (elementType == HbTokenTypes.CLOSE_BLOCK_STACHE) {
    return new HbCloseBlockMustacheImpl(node);
  }
  if (elementType == HbTokenTypes.MUSTACHE) {
    return new HbSimpleMustacheImpl(node);
  }
  if (elementType == HbTokenTypes.MUSTACHE_NAME) {
    return new HbMustacheNameImpl(node);
  }
  if (elementType == HbTokenTypes.PATH) {
    return new HbPathImpl(node);
  }
  if (elementType == HbTokenTypes.DATA) {
    return new HbDataImpl(node);
  }
  if (elementType == HbTokenTypes.PARAM) {
    return new HbParamImpl(node);
  }
  if (elementType == HbTokenTypes.PARTIAL_STACHE) {
    return new HbPartialImpl(node);
  }
  if (elementType == HbTokenTypes.PARTIAL_NAME) {
    return new HbPartialNameImpl(node);
  }
  if (elementType == HbTokenTypes.SIMPLE_INVERSE) {
    return new HbSimpleInverseImpl(node);
  }
  if (elementType == HbTokenTypes.STATEMENTS) {
    return new HbStatementsImpl(node);
  }
  if (elementType == HbTokenTypes.COMMENT) {
    return new HbCommentImpl(node);
  }
  if (elementType == HbTokenTypes.STRING) {
    return new HbStringLiteralImpl(node);
  }
  if (elementType == HbTokenTypes.BOOLEAN) {
    return new HbBooleanLiteralImpl(node);
  }
  if (elementType == HbTokenTypes.NUMBER) {
    return new HbNumberLiteralImpl(node);
  }
  if (elementType == HbTokenTypes.HASH) {
    return new HbHashImpl(node);
  }
  return new HbPsiElementImpl(node);
}
