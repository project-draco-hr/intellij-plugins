{
  TreeModel treeModel=mySamplesTree.getModel();
  final Function<Set<Sample>,Integer> sizeFunction=new Function<Set<Sample>,Integer>(){
    public Integer fun(    Set<Sample> samples){
      return (samples.size() * 100) / data.getPerformanceInfoSize();
    }
  }
;
  myHotSpotsTreeTable.clearSelection();
  buildSamples((DefaultTreeModel)treeModel,(DefaultMutableTreeNode)treeModel.getRoot(),false,data.getProfile(),0,sizeFunction,getCurrentScope());
  buildPerformanceSamples(myHotSpotsTreeTable.getSortableTreeTableModel(),data.getProfile());
  TreeUtil.expand(myHotSpotsTreeTable.getTree(),1);
  DefaultMutableTreeNode tracesRoot=(DefaultMutableTreeNode)myTracesTreeTable.getSortableTreeTableModel().getRoot();
  tracesRoot.removeAllChildren();
  myTracesTreeTable.reload();
  List sortKeys=myHotSpotsTreeTable.getRowSorter().getSortKeys();
  if (sortKeys == null || sortKeys.size() == 0) {
    myHotSpotsTreeTable.getRowSorter().toggleSortOrder(0);
  }
}
