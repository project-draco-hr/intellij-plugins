{
  processSamples(sampleSet,new GroupHandler<T,String>(){
    public void process(    final Map<String,Set<T>> data){
      List<String> traces=new ArrayList<String>(data.keySet());
      Collections.sort(traces,new Comparator<String>(){
        public int compare(        String o1,        String o2){
          return classifier.fun(data.get(o2)) - classifier.fun(data.get(o1));
        }
      }
);
      int index=0;
      for (      final String s : traces) {
        final Set<T> stackFrameSampleSet=data.get(s);
        model.insertNodeInto(new MergedPathNode<T>(stackFrameSampleSet,model,innermostFirst,level,classifier,scope),root,index++);
      }
    }
    public String getCategory(    T sample){
      int i=innermostFirst ? level : sample.frames.length - 1 - level;
      if (i < 0 || i >= sample.frames.length)       return null;
      return sample.frames[i].toString();
    }
  }
);
}
